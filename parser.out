Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDASSIGN
    AUTO
    BREAK
    CASE
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DIVIDEASSIGN
    DO
    DOUBLE
    ENUM
    EXTERN
    FOR
    GOTO
    LONG
    LSHIFT
    LSHIFTASSIGN
    MODASSIGN
    MULASSIGN
    ORASSIGN
    PLUSASSIGN
    REGISTER
    RSHIFT
    RSHIFTASSIGN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    SUBASSIGN
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    XORASSIGN

Grammar

Rule 0     S' -> Program
Rule 1     EMPTY -> <empty>
Rule 2     SEMI -> ;
Rule 3     COMMA -> ,
Rule 4     ASSIGNOP -> =
Rule 5     RELOP -> >
Rule 6     RELOP -> <
Rule 7     RELOP -> GRTREQL
Rule 8     RELOP -> LESSEQL
Rule 9     RELOP -> EQUAL
Rule 10    RELOP -> NEQUAL
Rule 11    PLUS -> +
Rule 12    MINUS -> -
Rule 13    STAR -> *
Rule 14    DIV -> /
Rule 15    AND -> BOOLAND
Rule 16    OR -> BOOLOR
Rule 17    DOT -> .
Rule 18    NOT -> !
Rule 19    TYPE -> INT
Rule 20    TYPE -> FLOAT
Rule 21    LP -> (
Rule 22    RP -> )
Rule 23    LB -> [
Rule 24    RB -> ]
Rule 25    LC -> {
Rule 26    RC -> }
Rule 27    Program -> ExtDefList
Rule 28    ExtDefList -> ExtDef ExtDefList
Rule 29    ExtDefList -> EMPTY
Rule 30    FunHead -> Specifier FunDec
Rule 31    ExtDecHead -> Specifier VarDec
Rule 32    ExtDecHead -> Specifier FunDec
Rule 33    ExtDecList -> ExtDecList COMMA VarDec
Rule 34    ExtDecList -> ExtDecHead
Rule 35    ExtDecList -> ExtDecList COMMA FunDec
Rule 36    ExtDef -> ExtDecList SEMI
Rule 37    ExtDef -> Specifier SEMI
Rule 38    ExtDef -> FunHead CompSt
Rule 39    Specifier -> TYPE
Rule 40    Specifier -> StructSpecifier
Rule 41    StructSpecifier -> STRUCT OptTag LC DefList RC
Rule 42    StructSpecifier -> STRUCT Tag
Rule 43    OptTag -> ID
Rule 44    OptTag -> EMPTY
Rule 45    Tag -> ID
Rule 46    VarDec -> ID
Rule 47    VarDec -> VarDec LB NUMBER RB
Rule 48    FunDec -> ID LP VarList RP
Rule 49    FunDec -> ID LP RP
Rule 50    VarList -> ParamDec COMMA VarList
Rule 51    VarList -> ParamDec
Rule 52    ParamDec -> Specifier VarDec
Rule 53    CompSt -> LC DefList StmtList RC
Rule 54    StmtList -> Stmt StmtList
Rule 55    StmtList -> EMPTY
Rule 56    Stmt -> RETURN Exp SEMI
Rule 57    FlowCtrl -> IF LP Exp RP Stmt
Rule 58    FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt
Rule 59    FlowCtrl -> WHILE LP Exp RP Stmt
Rule 60    Stmt -> Exp SEMI
Rule 61    Stmt -> CompSt
Rule 62    Stmt -> SEMI
Rule 63    Stmt -> FlowCtrl
Rule 64    DefList -> Def SEMI DefList
Rule 65    DefList -> EMPTY
Rule 66    Def -> DecList
Rule 67    DecHead -> Specifier Dec
Rule 68    DecList -> DecHead
Rule 69    DecList -> DecList COMMA Dec
Rule 70    Dec -> VarDec
Rule 71    Dec -> VarDec ASSIGNOP Exp
Rule 72    PrefixedExp -> MINUS Exp
Rule 73    PrefixedExp -> NOT Exp
Rule 74    PrefixedExp -> PLUS Exp
Rule 75    PrefixedExp -> STAR Exp
Rule 76    PrefixedExp -> PLUSSLF Exp
Rule 77    PrefixedExp -> SUBSLF Exp
Rule 78    PrefixedExp -> LP TYPE RP Exp
Rule 79    Exp -> LP Exp RP
Rule 80    Exp -> ID
Rule 81    Exp -> NUMBER
Rule 82    Exp -> DECIMAL
Rule 83    Exp -> STRINGLITERAL
Rule 84    Exp -> Exp ASSIGNOP Exp
Rule 85    Exp -> Exp AND Exp
Rule 86    Exp -> Exp OR Exp
Rule 87    Exp -> Exp RELOP Exp
Rule 88    Exp -> Exp PLUS Exp
Rule 89    Exp -> Exp MINUS Exp
Rule 90    Exp -> Exp STAR Exp
Rule 91    Exp -> Exp DIV Exp
Rule 92    Exp -> Exp LB Exp RB
Rule 93    Exp -> Exp DOT ID
Rule 94    Exp -> PrefixedExp
Rule 95    Exp -> FuncCall
Rule 96    FuncCall -> ID LP Args RP
Rule 97    FuncCall -> ID LP RP
Rule 98    Args -> Exp COMMA Args
Rule 99    Args -> Exp

Terminals, with rules where they appear

!                    : 18
(                    : 21
)                    : 22
*                    : 13
+                    : 11
,                    : 3
-                    : 12
.                    : 17
/                    : 14
;                    : 2
<                    : 6
=                    : 4
>                    : 5
ANDASSIGN            : 
AUTO                 : 
BOOLAND              : 15
BOOLOR               : 16
BREAK                : 
CASE                 : 
CHAR                 : 
CONST                : 
CONTINUE             : 
DECIMAL              : 82
DEFAULT              : 
DIVIDEASSIGN         : 
DO                   : 
DOUBLE               : 
ELSE                 : 58
ENUM                 : 
EQUAL                : 9
EXTERN               : 
FLOAT                : 20
FOR                  : 
GOTO                 : 
GRTREQL              : 7
ID                   : 43 45 46 48 49 80 93 96 97
IF                   : 57 58
INT                  : 19
LESSEQL              : 8
LONG                 : 
LSHIFT               : 
LSHIFTASSIGN         : 
MODASSIGN            : 
MULASSIGN            : 
NEQUAL               : 10
NUMBER               : 47 81
ORASSIGN             : 
PLUSASSIGN           : 
PLUSSLF              : 76
REGISTER             : 
RETURN               : 56
RSHIFT               : 
RSHIFTASSIGN         : 
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRINGLITERAL        : 83
STRUCT               : 41 42
SUBASSIGN            : 
SUBSLF               : 77
SWITCH               : 
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
VOID                 : 
VOLATILE             : 
WHILE                : 59
XORASSIGN            : 
[                    : 23
]                    : 24
error                : 
{                    : 25
}                    : 26

Nonterminals, with rules where they appear

AND                  : 85
ASSIGNOP             : 71 84
Args                 : 96 98
COMMA                : 33 35 50 69 98
CompSt               : 38 61
DIV                  : 91
DOT                  : 93
Dec                  : 67 69
DecHead              : 68
DecList              : 66 69
Def                  : 64
DefList              : 41 53 64
EMPTY                : 29 44 55 65
Exp                  : 56 57 58 59 60 71 72 73 74 75 76 77 78 79 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 91 92 92 93 98 99
ExtDecHead           : 34
ExtDecList           : 33 35 36
ExtDef               : 28
ExtDefList           : 27 28
FlowCtrl             : 63
FunDec               : 30 32 35
FunHead              : 38
FuncCall             : 95
LB                   : 47 92
LC                   : 41 53
LP                   : 48 49 57 58 59 78 79 96 97
MINUS                : 72 89
NOT                  : 73
OR                   : 86
OptTag               : 41
PLUS                 : 74 88
ParamDec             : 50 51
PrefixedExp          : 94
Program              : 0
RB                   : 47 92
RC                   : 41 53
RELOP                : 87
RP                   : 48 49 57 58 59 78 79 96 97
SEMI                 : 36 37 56 60 62 64
STAR                 : 75 90
Specifier            : 30 31 32 37 52 67
Stmt                 : 54 57 58 58 59
StmtList             : 53 54
StructSpecifier      : 40
TYPE                 : 39 78
Tag                  : 42
VarDec               : 31 33 47 52 70 71
VarList              : 48 50

Parsing method: LALR

state 0

    (0) S' -> . Program
    (27) Program -> . ExtDefList
    (28) ExtDefList -> . ExtDef ExtDefList
    (29) ExtDefList -> . EMPTY
    (36) ExtDef -> . ExtDecList SEMI
    (37) ExtDef -> . Specifier SEMI
    (38) ExtDef -> . FunHead CompSt
    (1) EMPTY -> .
    (33) ExtDecList -> . ExtDecList COMMA VarDec
    (34) ExtDecList -> . ExtDecHead
    (35) ExtDecList -> . ExtDecList COMMA FunDec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (30) FunHead -> . Specifier FunDec
    (31) ExtDecHead -> . Specifier VarDec
    (32) ExtDecHead -> . Specifier FunDec
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    $end            reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    Program                        shift and go to state 1
    ExtDefList                     shift and go to state 2
    ExtDef                         shift and go to state 3
    EMPTY                          shift and go to state 4
    ExtDecList                     shift and go to state 5
    Specifier                      shift and go to state 6
    FunHead                        shift and go to state 7
    ExtDecHead                     shift and go to state 8
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 1

    (0) S' -> Program .



state 2

    (27) Program -> ExtDefList .

    $end            reduce using rule 27 (Program -> ExtDefList .)


state 3

    (28) ExtDefList -> ExtDef . ExtDefList
    (28) ExtDefList -> . ExtDef ExtDefList
    (29) ExtDefList -> . EMPTY
    (36) ExtDef -> . ExtDecList SEMI
    (37) ExtDef -> . Specifier SEMI
    (38) ExtDef -> . FunHead CompSt
    (1) EMPTY -> .
    (33) ExtDecList -> . ExtDecList COMMA VarDec
    (34) ExtDecList -> . ExtDecHead
    (35) ExtDecList -> . ExtDecList COMMA FunDec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (30) FunHead -> . Specifier FunDec
    (31) ExtDecHead -> . Specifier VarDec
    (32) ExtDecHead -> . Specifier FunDec
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    $end            reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    ExtDef                         shift and go to state 3
    ExtDefList                     shift and go to state 14
    EMPTY                          shift and go to state 4
    ExtDecList                     shift and go to state 5
    Specifier                      shift and go to state 6
    FunHead                        shift and go to state 7
    ExtDecHead                     shift and go to state 8
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 4

    (29) ExtDefList -> EMPTY .

    $end            reduce using rule 29 (ExtDefList -> EMPTY .)


state 5

    (36) ExtDef -> ExtDecList . SEMI
    (33) ExtDecList -> ExtDecList . COMMA VarDec
    (35) ExtDecList -> ExtDecList . COMMA FunDec
    (2) SEMI -> . ;
    (3) COMMA -> . ,

    ;               shift and go to state 17
    ,               shift and go to state 18

    SEMI                           shift and go to state 15
    COMMA                          shift and go to state 16

state 6

    (37) ExtDef -> Specifier . SEMI
    (30) FunHead -> Specifier . FunDec
    (31) ExtDecHead -> Specifier . VarDec
    (32) ExtDecHead -> Specifier . FunDec
    (2) SEMI -> . ;
    (48) FunDec -> . ID LP VarList RP
    (49) FunDec -> . ID LP RP
    (46) VarDec -> . ID
    (47) VarDec -> . VarDec LB NUMBER RB

    ;               shift and go to state 17
    ID              shift and go to state 22

    SEMI                           shift and go to state 19
    FunDec                         shift and go to state 20
    VarDec                         shift and go to state 21

state 7

    (38) ExtDef -> FunHead . CompSt
    (53) CompSt -> . LC DefList StmtList RC
    (25) LC -> . {

    {               shift and go to state 25

    CompSt                         shift and go to state 23
    LC                             shift and go to state 24

state 8

    (34) ExtDecList -> ExtDecHead .

    ;               reduce using rule 34 (ExtDecList -> ExtDecHead .)
    ,               reduce using rule 34 (ExtDecList -> ExtDecHead .)


state 9

    (39) Specifier -> TYPE .

    ;               reduce using rule 39 (Specifier -> TYPE .)
    ID              reduce using rule 39 (Specifier -> TYPE .)


state 10

    (40) Specifier -> StructSpecifier .

    ;               reduce using rule 40 (Specifier -> StructSpecifier .)
    ID              reduce using rule 40 (Specifier -> StructSpecifier .)


state 11

    (19) TYPE -> INT .

    ;               reduce using rule 19 (TYPE -> INT .)
    ID              reduce using rule 19 (TYPE -> INT .)
    )               reduce using rule 19 (TYPE -> INT .)


state 12

    (20) TYPE -> FLOAT .

    ;               reduce using rule 20 (TYPE -> FLOAT .)
    ID              reduce using rule 20 (TYPE -> FLOAT .)
    )               reduce using rule 20 (TYPE -> FLOAT .)


state 13

    (41) StructSpecifier -> STRUCT . OptTag LC DefList RC
    (42) StructSpecifier -> STRUCT . Tag
    (43) OptTag -> . ID
    (44) OptTag -> . EMPTY
    (45) Tag -> . ID
    (1) EMPTY -> .

    ID              shift and go to state 28
    {               reduce using rule 1 (EMPTY -> .)

    OptTag                         shift and go to state 26
    Tag                            shift and go to state 27
    EMPTY                          shift and go to state 29

state 14

    (28) ExtDefList -> ExtDef ExtDefList .

    $end            reduce using rule 28 (ExtDefList -> ExtDef ExtDefList .)


state 15

    (36) ExtDef -> ExtDecList SEMI .

    INT             reduce using rule 36 (ExtDef -> ExtDecList SEMI .)
    FLOAT           reduce using rule 36 (ExtDef -> ExtDecList SEMI .)
    STRUCT          reduce using rule 36 (ExtDef -> ExtDecList SEMI .)
    $end            reduce using rule 36 (ExtDef -> ExtDecList SEMI .)


state 16

    (33) ExtDecList -> ExtDecList COMMA . VarDec
    (35) ExtDecList -> ExtDecList COMMA . FunDec
    (46) VarDec -> . ID
    (47) VarDec -> . VarDec LB NUMBER RB
    (48) FunDec -> . ID LP VarList RP
    (49) FunDec -> . ID LP RP

    ID              shift and go to state 32

    VarDec                         shift and go to state 30
    FunDec                         shift and go to state 31

state 17

    (2) SEMI -> ; .

    INT             reduce using rule 2 (SEMI -> ; .)
    FLOAT           reduce using rule 2 (SEMI -> ; .)
    STRUCT          reduce using rule 2 (SEMI -> ; .)
    $end            reduce using rule 2 (SEMI -> ; .)
    RETURN          reduce using rule 2 (SEMI -> ; .)
    ID              reduce using rule 2 (SEMI -> ; .)
    NUMBER          reduce using rule 2 (SEMI -> ; .)
    DECIMAL         reduce using rule 2 (SEMI -> ; .)
    STRINGLITERAL   reduce using rule 2 (SEMI -> ; .)
    ;               reduce using rule 2 (SEMI -> ; .)
    IF              reduce using rule 2 (SEMI -> ; .)
    WHILE           reduce using rule 2 (SEMI -> ; .)
    (               reduce using rule 2 (SEMI -> ; .)
    PLUSSLF         reduce using rule 2 (SEMI -> ; .)
    SUBSLF          reduce using rule 2 (SEMI -> ; .)
    {               reduce using rule 2 (SEMI -> ; .)
    -               reduce using rule 2 (SEMI -> ; .)
    !               reduce using rule 2 (SEMI -> ; .)
    +               reduce using rule 2 (SEMI -> ; .)
    *               reduce using rule 2 (SEMI -> ; .)
    }               reduce using rule 2 (SEMI -> ; .)
    ELSE            reduce using rule 2 (SEMI -> ; .)


state 18

    (3) COMMA -> , .

    ID              reduce using rule 3 (COMMA -> , .)
    INT             reduce using rule 3 (COMMA -> , .)
    FLOAT           reduce using rule 3 (COMMA -> , .)
    STRUCT          reduce using rule 3 (COMMA -> , .)
    NUMBER          reduce using rule 3 (COMMA -> , .)
    DECIMAL         reduce using rule 3 (COMMA -> , .)
    STRINGLITERAL   reduce using rule 3 (COMMA -> , .)
    (               reduce using rule 3 (COMMA -> , .)
    PLUSSLF         reduce using rule 3 (COMMA -> , .)
    SUBSLF          reduce using rule 3 (COMMA -> , .)
    -               reduce using rule 3 (COMMA -> , .)
    !               reduce using rule 3 (COMMA -> , .)
    +               reduce using rule 3 (COMMA -> , .)
    *               reduce using rule 3 (COMMA -> , .)


state 19

    (37) ExtDef -> Specifier SEMI .

    INT             reduce using rule 37 (ExtDef -> Specifier SEMI .)
    FLOAT           reduce using rule 37 (ExtDef -> Specifier SEMI .)
    STRUCT          reduce using rule 37 (ExtDef -> Specifier SEMI .)
    $end            reduce using rule 37 (ExtDef -> Specifier SEMI .)


state 20

    (30) FunHead -> Specifier FunDec .
    (32) ExtDecHead -> Specifier FunDec .

    {               reduce using rule 30 (FunHead -> Specifier FunDec .)
    ;               reduce using rule 32 (ExtDecHead -> Specifier FunDec .)
    ,               reduce using rule 32 (ExtDecHead -> Specifier FunDec .)


state 21

    (31) ExtDecHead -> Specifier VarDec .
    (47) VarDec -> VarDec . LB NUMBER RB
    (23) LB -> . [

    ;               reduce using rule 31 (ExtDecHead -> Specifier VarDec .)
    ,               reduce using rule 31 (ExtDecHead -> Specifier VarDec .)
    [               shift and go to state 34

    LB                             shift and go to state 33

state 22

    (48) FunDec -> ID . LP VarList RP
    (49) FunDec -> ID . LP RP
    (46) VarDec -> ID .
    (21) LP -> . (

    [               reduce using rule 46 (VarDec -> ID .)
    ;               reduce using rule 46 (VarDec -> ID .)
    ,               reduce using rule 46 (VarDec -> ID .)
    (               shift and go to state 36

    LP                             shift and go to state 35

state 23

    (38) ExtDef -> FunHead CompSt .

    INT             reduce using rule 38 (ExtDef -> FunHead CompSt .)
    FLOAT           reduce using rule 38 (ExtDef -> FunHead CompSt .)
    STRUCT          reduce using rule 38 (ExtDef -> FunHead CompSt .)
    $end            reduce using rule 38 (ExtDef -> FunHead CompSt .)


state 24

    (53) CompSt -> LC . DefList StmtList RC
    (64) DefList -> . Def SEMI DefList
    (65) DefList -> . EMPTY
    (66) Def -> . DecList
    (1) EMPTY -> .
    (68) DecList -> . DecHead
    (69) DecList -> . DecList COMMA Dec
    (67) DecHead -> . Specifier Dec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    RETURN          reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    NUMBER          reduce using rule 1 (EMPTY -> .)
    DECIMAL         reduce using rule 1 (EMPTY -> .)
    STRINGLITERAL   reduce using rule 1 (EMPTY -> .)
    ;               reduce using rule 1 (EMPTY -> .)
    IF              reduce using rule 1 (EMPTY -> .)
    WHILE           reduce using rule 1 (EMPTY -> .)
    (               reduce using rule 1 (EMPTY -> .)
    PLUSSLF         reduce using rule 1 (EMPTY -> .)
    SUBSLF          reduce using rule 1 (EMPTY -> .)
    {               reduce using rule 1 (EMPTY -> .)
    -               reduce using rule 1 (EMPTY -> .)
    !               reduce using rule 1 (EMPTY -> .)
    +               reduce using rule 1 (EMPTY -> .)
    *               reduce using rule 1 (EMPTY -> .)
    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    DefList                        shift and go to state 37
    Def                            shift and go to state 38
    EMPTY                          shift and go to state 39
    DecList                        shift and go to state 40
    DecHead                        shift and go to state 41
    Specifier                      shift and go to state 42
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 25

    (25) LC -> { .

    INT             reduce using rule 25 (LC -> { .)
    FLOAT           reduce using rule 25 (LC -> { .)
    STRUCT          reduce using rule 25 (LC -> { .)
    RETURN          reduce using rule 25 (LC -> { .)
    ID              reduce using rule 25 (LC -> { .)
    NUMBER          reduce using rule 25 (LC -> { .)
    DECIMAL         reduce using rule 25 (LC -> { .)
    STRINGLITERAL   reduce using rule 25 (LC -> { .)
    ;               reduce using rule 25 (LC -> { .)
    IF              reduce using rule 25 (LC -> { .)
    WHILE           reduce using rule 25 (LC -> { .)
    (               reduce using rule 25 (LC -> { .)
    PLUSSLF         reduce using rule 25 (LC -> { .)
    SUBSLF          reduce using rule 25 (LC -> { .)
    {               reduce using rule 25 (LC -> { .)
    -               reduce using rule 25 (LC -> { .)
    !               reduce using rule 25 (LC -> { .)
    +               reduce using rule 25 (LC -> { .)
    *               reduce using rule 25 (LC -> { .)
    }               reduce using rule 25 (LC -> { .)


state 26

    (41) StructSpecifier -> STRUCT OptTag . LC DefList RC
    (25) LC -> . {

    {               shift and go to state 25

    LC                             shift and go to state 43

state 27

    (42) StructSpecifier -> STRUCT Tag .

    ;               reduce using rule 42 (StructSpecifier -> STRUCT Tag .)
    ID              reduce using rule 42 (StructSpecifier -> STRUCT Tag .)


state 28

    (43) OptTag -> ID .
    (45) Tag -> ID .

    {               reduce using rule 43 (OptTag -> ID .)
    ;               reduce using rule 45 (Tag -> ID .)
    ID              reduce using rule 45 (Tag -> ID .)


state 29

    (44) OptTag -> EMPTY .

    {               reduce using rule 44 (OptTag -> EMPTY .)


state 30

    (33) ExtDecList -> ExtDecList COMMA VarDec .
    (47) VarDec -> VarDec . LB NUMBER RB
    (23) LB -> . [

    ;               reduce using rule 33 (ExtDecList -> ExtDecList COMMA VarDec .)
    ,               reduce using rule 33 (ExtDecList -> ExtDecList COMMA VarDec .)
    [               shift and go to state 34

    LB                             shift and go to state 33

state 31

    (35) ExtDecList -> ExtDecList COMMA FunDec .

    ;               reduce using rule 35 (ExtDecList -> ExtDecList COMMA FunDec .)
    ,               reduce using rule 35 (ExtDecList -> ExtDecList COMMA FunDec .)


state 32

    (46) VarDec -> ID .
    (48) FunDec -> ID . LP VarList RP
    (49) FunDec -> ID . LP RP
    (21) LP -> . (

    [               reduce using rule 46 (VarDec -> ID .)
    ;               reduce using rule 46 (VarDec -> ID .)
    ,               reduce using rule 46 (VarDec -> ID .)
    (               shift and go to state 36

    LP                             shift and go to state 35

state 33

    (47) VarDec -> VarDec LB . NUMBER RB

    NUMBER          shift and go to state 44


state 34

    (23) LB -> [ .

    NUMBER          reduce using rule 23 (LB -> [ .)
    ID              reduce using rule 23 (LB -> [ .)
    DECIMAL         reduce using rule 23 (LB -> [ .)
    STRINGLITERAL   reduce using rule 23 (LB -> [ .)
    (               reduce using rule 23 (LB -> [ .)
    PLUSSLF         reduce using rule 23 (LB -> [ .)
    SUBSLF          reduce using rule 23 (LB -> [ .)
    -               reduce using rule 23 (LB -> [ .)
    !               reduce using rule 23 (LB -> [ .)
    +               reduce using rule 23 (LB -> [ .)
    *               reduce using rule 23 (LB -> [ .)


state 35

    (48) FunDec -> ID LP . VarList RP
    (49) FunDec -> ID LP . RP
    (50) VarList -> . ParamDec COMMA VarList
    (51) VarList -> . ParamDec
    (22) RP -> . )
    (52) ParamDec -> . Specifier VarDec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    )               shift and go to state 48
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    VarList                        shift and go to state 45
    RP                             shift and go to state 46
    ParamDec                       shift and go to state 47
    Specifier                      shift and go to state 49
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 36

    (21) LP -> ( .

    )               reduce using rule 21 (LP -> ( .)
    INT             reduce using rule 21 (LP -> ( .)
    FLOAT           reduce using rule 21 (LP -> ( .)
    STRUCT          reduce using rule 21 (LP -> ( .)
    ID              reduce using rule 21 (LP -> ( .)
    NUMBER          reduce using rule 21 (LP -> ( .)
    DECIMAL         reduce using rule 21 (LP -> ( .)
    STRINGLITERAL   reduce using rule 21 (LP -> ( .)
    (               reduce using rule 21 (LP -> ( .)
    PLUSSLF         reduce using rule 21 (LP -> ( .)
    SUBSLF          reduce using rule 21 (LP -> ( .)
    -               reduce using rule 21 (LP -> ( .)
    !               reduce using rule 21 (LP -> ( .)
    +               reduce using rule 21 (LP -> ( .)
    *               reduce using rule 21 (LP -> ( .)


state 37

    (53) CompSt -> LC DefList . StmtList RC
    (54) StmtList -> . Stmt StmtList
    (55) StmtList -> . EMPTY
    (56) Stmt -> . RETURN Exp SEMI
    (60) Stmt -> . Exp SEMI
    (61) Stmt -> . CompSt
    (62) Stmt -> . SEMI
    (63) Stmt -> . FlowCtrl
    (1) EMPTY -> .
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (53) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (57) FlowCtrl -> . IF LP Exp RP Stmt
    (58) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (59) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 53
    }               reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    ;               shift and go to state 17
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    {               shift and go to state 25
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LC                             shift and go to state 24
    StmtList                       shift and go to state 50
    Stmt                           shift and go to state 51
    EMPTY                          shift and go to state 52
    Exp                            shift and go to state 54
    SEMI                           shift and go to state 55
    CompSt                         shift and go to state 56
    FlowCtrl                       shift and go to state 57
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 38

    (64) DefList -> Def . SEMI DefList
    (2) SEMI -> . ;

    ;               shift and go to state 17

    SEMI                           shift and go to state 77

state 39

    (65) DefList -> EMPTY .

    RETURN          reduce using rule 65 (DefList -> EMPTY .)
    ID              reduce using rule 65 (DefList -> EMPTY .)
    NUMBER          reduce using rule 65 (DefList -> EMPTY .)
    DECIMAL         reduce using rule 65 (DefList -> EMPTY .)
    STRINGLITERAL   reduce using rule 65 (DefList -> EMPTY .)
    ;               reduce using rule 65 (DefList -> EMPTY .)
    IF              reduce using rule 65 (DefList -> EMPTY .)
    WHILE           reduce using rule 65 (DefList -> EMPTY .)
    (               reduce using rule 65 (DefList -> EMPTY .)
    PLUSSLF         reduce using rule 65 (DefList -> EMPTY .)
    SUBSLF          reduce using rule 65 (DefList -> EMPTY .)
    {               reduce using rule 65 (DefList -> EMPTY .)
    -               reduce using rule 65 (DefList -> EMPTY .)
    !               reduce using rule 65 (DefList -> EMPTY .)
    +               reduce using rule 65 (DefList -> EMPTY .)
    *               reduce using rule 65 (DefList -> EMPTY .)
    }               reduce using rule 65 (DefList -> EMPTY .)


state 40

    (66) Def -> DecList .
    (69) DecList -> DecList . COMMA Dec
    (3) COMMA -> . ,

    ;               reduce using rule 66 (Def -> DecList .)
    ,               shift and go to state 18

    COMMA                          shift and go to state 78

state 41

    (68) DecList -> DecHead .

    ,               reduce using rule 68 (DecList -> DecHead .)
    ;               reduce using rule 68 (DecList -> DecHead .)


state 42

    (67) DecHead -> Specifier . Dec
    (70) Dec -> . VarDec
    (71) Dec -> . VarDec ASSIGNOP Exp
    (46) VarDec -> . ID
    (47) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 81

    Dec                            shift and go to state 79
    VarDec                         shift and go to state 80

state 43

    (41) StructSpecifier -> STRUCT OptTag LC . DefList RC
    (64) DefList -> . Def SEMI DefList
    (65) DefList -> . EMPTY
    (66) Def -> . DecList
    (1) EMPTY -> .
    (68) DecList -> . DecHead
    (69) DecList -> . DecList COMMA Dec
    (67) DecHead -> . Specifier Dec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    DefList                        shift and go to state 82
    Def                            shift and go to state 38
    EMPTY                          shift and go to state 39
    DecList                        shift and go to state 40
    DecHead                        shift and go to state 41
    Specifier                      shift and go to state 42
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 44

    (47) VarDec -> VarDec LB NUMBER . RB
    (24) RB -> . ]

    ]               shift and go to state 84

    RB                             shift and go to state 83

state 45

    (48) FunDec -> ID LP VarList . RP
    (22) RP -> . )

    )               shift and go to state 48

    RP                             shift and go to state 85

state 46

    (49) FunDec -> ID LP RP .

    {               reduce using rule 49 (FunDec -> ID LP RP .)
    ;               reduce using rule 49 (FunDec -> ID LP RP .)
    ,               reduce using rule 49 (FunDec -> ID LP RP .)


state 47

    (50) VarList -> ParamDec . COMMA VarList
    (51) VarList -> ParamDec .
    (3) COMMA -> . ,

    )               reduce using rule 51 (VarList -> ParamDec .)
    ,               shift and go to state 18

    COMMA                          shift and go to state 86

state 48

    (22) RP -> ) .

    {               reduce using rule 22 (RP -> ) .)
    ;               reduce using rule 22 (RP -> ) .)
    ,               reduce using rule 22 (RP -> ) .)
    =               reduce using rule 22 (RP -> ) .)
    BOOLAND         reduce using rule 22 (RP -> ) .)
    BOOLOR          reduce using rule 22 (RP -> ) .)
    >               reduce using rule 22 (RP -> ) .)
    <               reduce using rule 22 (RP -> ) .)
    GRTREQL         reduce using rule 22 (RP -> ) .)
    LESSEQL         reduce using rule 22 (RP -> ) .)
    EQUAL           reduce using rule 22 (RP -> ) .)
    NEQUAL          reduce using rule 22 (RP -> ) .)
    +               reduce using rule 22 (RP -> ) .)
    -               reduce using rule 22 (RP -> ) .)
    *               reduce using rule 22 (RP -> ) .)
    /               reduce using rule 22 (RP -> ) .)
    [               reduce using rule 22 (RP -> ) .)
    .               reduce using rule 22 (RP -> ) .)
    )               reduce using rule 22 (RP -> ) .)
    ]               reduce using rule 22 (RP -> ) .)
    ID              reduce using rule 22 (RP -> ) .)
    NUMBER          reduce using rule 22 (RP -> ) .)
    DECIMAL         reduce using rule 22 (RP -> ) .)
    STRINGLITERAL   reduce using rule 22 (RP -> ) .)
    (               reduce using rule 22 (RP -> ) .)
    PLUSSLF         reduce using rule 22 (RP -> ) .)
    SUBSLF          reduce using rule 22 (RP -> ) .)
    !               reduce using rule 22 (RP -> ) .)
    RETURN          reduce using rule 22 (RP -> ) .)
    IF              reduce using rule 22 (RP -> ) .)
    WHILE           reduce using rule 22 (RP -> ) .)


state 49

    (52) ParamDec -> Specifier . VarDec
    (46) VarDec -> . ID
    (47) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 81

    VarDec                         shift and go to state 87

state 50

    (53) CompSt -> LC DefList StmtList . RC
    (26) RC -> . }

    }               shift and go to state 89

    RC                             shift and go to state 88

state 51

    (54) StmtList -> Stmt . StmtList
    (54) StmtList -> . Stmt StmtList
    (55) StmtList -> . EMPTY
    (56) Stmt -> . RETURN Exp SEMI
    (60) Stmt -> . Exp SEMI
    (61) Stmt -> . CompSt
    (62) Stmt -> . SEMI
    (63) Stmt -> . FlowCtrl
    (1) EMPTY -> .
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (53) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (57) FlowCtrl -> . IF LP Exp RP Stmt
    (58) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (59) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 53
    }               reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    ;               shift and go to state 17
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    {               shift and go to state 25
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Stmt                           shift and go to state 51
    StmtList                       shift and go to state 90
    EMPTY                          shift and go to state 52
    Exp                            shift and go to state 54
    SEMI                           shift and go to state 55
    CompSt                         shift and go to state 56
    FlowCtrl                       shift and go to state 57
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    LC                             shift and go to state 24
    NOT                            shift and go to state 70

state 52

    (55) StmtList -> EMPTY .

    }               reduce using rule 55 (StmtList -> EMPTY .)


state 53

    (56) Stmt -> RETURN . Exp SEMI
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 91
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 54

    (60) Stmt -> Exp . SEMI
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (2) SEMI -> . ;
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ;               shift and go to state 17
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    SEMI                           shift and go to state 92
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 55

    (62) Stmt -> SEMI .

    RETURN          reduce using rule 62 (Stmt -> SEMI .)
    ID              reduce using rule 62 (Stmt -> SEMI .)
    NUMBER          reduce using rule 62 (Stmt -> SEMI .)
    DECIMAL         reduce using rule 62 (Stmt -> SEMI .)
    STRINGLITERAL   reduce using rule 62 (Stmt -> SEMI .)
    ;               reduce using rule 62 (Stmt -> SEMI .)
    IF              reduce using rule 62 (Stmt -> SEMI .)
    WHILE           reduce using rule 62 (Stmt -> SEMI .)
    (               reduce using rule 62 (Stmt -> SEMI .)
    PLUSSLF         reduce using rule 62 (Stmt -> SEMI .)
    SUBSLF          reduce using rule 62 (Stmt -> SEMI .)
    {               reduce using rule 62 (Stmt -> SEMI .)
    -               reduce using rule 62 (Stmt -> SEMI .)
    !               reduce using rule 62 (Stmt -> SEMI .)
    +               reduce using rule 62 (Stmt -> SEMI .)
    *               reduce using rule 62 (Stmt -> SEMI .)
    }               reduce using rule 62 (Stmt -> SEMI .)
    ELSE            reduce using rule 62 (Stmt -> SEMI .)


state 56

    (61) Stmt -> CompSt .

    RETURN          reduce using rule 61 (Stmt -> CompSt .)
    ID              reduce using rule 61 (Stmt -> CompSt .)
    NUMBER          reduce using rule 61 (Stmt -> CompSt .)
    DECIMAL         reduce using rule 61 (Stmt -> CompSt .)
    STRINGLITERAL   reduce using rule 61 (Stmt -> CompSt .)
    ;               reduce using rule 61 (Stmt -> CompSt .)
    IF              reduce using rule 61 (Stmt -> CompSt .)
    WHILE           reduce using rule 61 (Stmt -> CompSt .)
    (               reduce using rule 61 (Stmt -> CompSt .)
    PLUSSLF         reduce using rule 61 (Stmt -> CompSt .)
    SUBSLF          reduce using rule 61 (Stmt -> CompSt .)
    {               reduce using rule 61 (Stmt -> CompSt .)
    -               reduce using rule 61 (Stmt -> CompSt .)
    !               reduce using rule 61 (Stmt -> CompSt .)
    +               reduce using rule 61 (Stmt -> CompSt .)
    *               reduce using rule 61 (Stmt -> CompSt .)
    }               reduce using rule 61 (Stmt -> CompSt .)
    ELSE            reduce using rule 61 (Stmt -> CompSt .)


state 57

    (63) Stmt -> FlowCtrl .

    RETURN          reduce using rule 63 (Stmt -> FlowCtrl .)
    ID              reduce using rule 63 (Stmt -> FlowCtrl .)
    NUMBER          reduce using rule 63 (Stmt -> FlowCtrl .)
    DECIMAL         reduce using rule 63 (Stmt -> FlowCtrl .)
    STRINGLITERAL   reduce using rule 63 (Stmt -> FlowCtrl .)
    ;               reduce using rule 63 (Stmt -> FlowCtrl .)
    IF              reduce using rule 63 (Stmt -> FlowCtrl .)
    WHILE           reduce using rule 63 (Stmt -> FlowCtrl .)
    (               reduce using rule 63 (Stmt -> FlowCtrl .)
    PLUSSLF         reduce using rule 63 (Stmt -> FlowCtrl .)
    SUBSLF          reduce using rule 63 (Stmt -> FlowCtrl .)
    {               reduce using rule 63 (Stmt -> FlowCtrl .)
    -               reduce using rule 63 (Stmt -> FlowCtrl .)
    !               reduce using rule 63 (Stmt -> FlowCtrl .)
    +               reduce using rule 63 (Stmt -> FlowCtrl .)
    *               reduce using rule 63 (Stmt -> FlowCtrl .)
    }               reduce using rule 63 (Stmt -> FlowCtrl .)
    ELSE            reduce using rule 63 (Stmt -> FlowCtrl .)


state 58

    (79) Exp -> LP . Exp RP
    (78) PrefixedExp -> LP . TYPE RP Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 114
    TYPE                           shift and go to state 115
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 59

    (80) Exp -> ID .
    (96) FuncCall -> ID . LP Args RP
    (97) FuncCall -> ID . LP RP
    (21) LP -> . (

    ;               reduce using rule 80 (Exp -> ID .)
    =               reduce using rule 80 (Exp -> ID .)
    BOOLAND         reduce using rule 80 (Exp -> ID .)
    BOOLOR          reduce using rule 80 (Exp -> ID .)
    >               reduce using rule 80 (Exp -> ID .)
    <               reduce using rule 80 (Exp -> ID .)
    GRTREQL         reduce using rule 80 (Exp -> ID .)
    LESSEQL         reduce using rule 80 (Exp -> ID .)
    EQUAL           reduce using rule 80 (Exp -> ID .)
    NEQUAL          reduce using rule 80 (Exp -> ID .)
    +               reduce using rule 80 (Exp -> ID .)
    -               reduce using rule 80 (Exp -> ID .)
    *               reduce using rule 80 (Exp -> ID .)
    /               reduce using rule 80 (Exp -> ID .)
    [               reduce using rule 80 (Exp -> ID .)
    .               reduce using rule 80 (Exp -> ID .)
    )               reduce using rule 80 (Exp -> ID .)
    ]               reduce using rule 80 (Exp -> ID .)
    ,               reduce using rule 80 (Exp -> ID .)
    (               shift and go to state 36

    LP                             shift and go to state 116

state 60

    (81) Exp -> NUMBER .

    ;               reduce using rule 81 (Exp -> NUMBER .)
    =               reduce using rule 81 (Exp -> NUMBER .)
    BOOLAND         reduce using rule 81 (Exp -> NUMBER .)
    BOOLOR          reduce using rule 81 (Exp -> NUMBER .)
    >               reduce using rule 81 (Exp -> NUMBER .)
    <               reduce using rule 81 (Exp -> NUMBER .)
    GRTREQL         reduce using rule 81 (Exp -> NUMBER .)
    LESSEQL         reduce using rule 81 (Exp -> NUMBER .)
    EQUAL           reduce using rule 81 (Exp -> NUMBER .)
    NEQUAL          reduce using rule 81 (Exp -> NUMBER .)
    +               reduce using rule 81 (Exp -> NUMBER .)
    -               reduce using rule 81 (Exp -> NUMBER .)
    *               reduce using rule 81 (Exp -> NUMBER .)
    /               reduce using rule 81 (Exp -> NUMBER .)
    [               reduce using rule 81 (Exp -> NUMBER .)
    .               reduce using rule 81 (Exp -> NUMBER .)
    )               reduce using rule 81 (Exp -> NUMBER .)
    ]               reduce using rule 81 (Exp -> NUMBER .)
    ,               reduce using rule 81 (Exp -> NUMBER .)


state 61

    (82) Exp -> DECIMAL .

    ;               reduce using rule 82 (Exp -> DECIMAL .)
    =               reduce using rule 82 (Exp -> DECIMAL .)
    BOOLAND         reduce using rule 82 (Exp -> DECIMAL .)
    BOOLOR          reduce using rule 82 (Exp -> DECIMAL .)
    >               reduce using rule 82 (Exp -> DECIMAL .)
    <               reduce using rule 82 (Exp -> DECIMAL .)
    GRTREQL         reduce using rule 82 (Exp -> DECIMAL .)
    LESSEQL         reduce using rule 82 (Exp -> DECIMAL .)
    EQUAL           reduce using rule 82 (Exp -> DECIMAL .)
    NEQUAL          reduce using rule 82 (Exp -> DECIMAL .)
    +               reduce using rule 82 (Exp -> DECIMAL .)
    -               reduce using rule 82 (Exp -> DECIMAL .)
    *               reduce using rule 82 (Exp -> DECIMAL .)
    /               reduce using rule 82 (Exp -> DECIMAL .)
    [               reduce using rule 82 (Exp -> DECIMAL .)
    .               reduce using rule 82 (Exp -> DECIMAL .)
    )               reduce using rule 82 (Exp -> DECIMAL .)
    ]               reduce using rule 82 (Exp -> DECIMAL .)
    ,               reduce using rule 82 (Exp -> DECIMAL .)


state 62

    (83) Exp -> STRINGLITERAL .

    ;               reduce using rule 83 (Exp -> STRINGLITERAL .)
    =               reduce using rule 83 (Exp -> STRINGLITERAL .)
    BOOLAND         reduce using rule 83 (Exp -> STRINGLITERAL .)
    BOOLOR          reduce using rule 83 (Exp -> STRINGLITERAL .)
    >               reduce using rule 83 (Exp -> STRINGLITERAL .)
    <               reduce using rule 83 (Exp -> STRINGLITERAL .)
    GRTREQL         reduce using rule 83 (Exp -> STRINGLITERAL .)
    LESSEQL         reduce using rule 83 (Exp -> STRINGLITERAL .)
    EQUAL           reduce using rule 83 (Exp -> STRINGLITERAL .)
    NEQUAL          reduce using rule 83 (Exp -> STRINGLITERAL .)
    +               reduce using rule 83 (Exp -> STRINGLITERAL .)
    -               reduce using rule 83 (Exp -> STRINGLITERAL .)
    *               reduce using rule 83 (Exp -> STRINGLITERAL .)
    /               reduce using rule 83 (Exp -> STRINGLITERAL .)
    [               reduce using rule 83 (Exp -> STRINGLITERAL .)
    .               reduce using rule 83 (Exp -> STRINGLITERAL .)
    )               reduce using rule 83 (Exp -> STRINGLITERAL .)
    ]               reduce using rule 83 (Exp -> STRINGLITERAL .)
    ,               reduce using rule 83 (Exp -> STRINGLITERAL .)


state 63

    (74) PrefixedExp -> PLUS . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    PLUS                           shift and go to state 63
    Exp                            shift and go to state 117
    LP                             shift and go to state 58
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 64

    (72) PrefixedExp -> MINUS . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    MINUS                          shift and go to state 64
    Exp                            shift and go to state 118
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 65

    (75) PrefixedExp -> STAR . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    STAR                           shift and go to state 65
    Exp                            shift and go to state 119
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 66

    (94) Exp -> PrefixedExp .

    ;               reduce using rule 94 (Exp -> PrefixedExp .)
    =               reduce using rule 94 (Exp -> PrefixedExp .)
    BOOLAND         reduce using rule 94 (Exp -> PrefixedExp .)
    BOOLOR          reduce using rule 94 (Exp -> PrefixedExp .)
    >               reduce using rule 94 (Exp -> PrefixedExp .)
    <               reduce using rule 94 (Exp -> PrefixedExp .)
    GRTREQL         reduce using rule 94 (Exp -> PrefixedExp .)
    LESSEQL         reduce using rule 94 (Exp -> PrefixedExp .)
    EQUAL           reduce using rule 94 (Exp -> PrefixedExp .)
    NEQUAL          reduce using rule 94 (Exp -> PrefixedExp .)
    +               reduce using rule 94 (Exp -> PrefixedExp .)
    -               reduce using rule 94 (Exp -> PrefixedExp .)
    *               reduce using rule 94 (Exp -> PrefixedExp .)
    /               reduce using rule 94 (Exp -> PrefixedExp .)
    [               reduce using rule 94 (Exp -> PrefixedExp .)
    .               reduce using rule 94 (Exp -> PrefixedExp .)
    )               reduce using rule 94 (Exp -> PrefixedExp .)
    ]               reduce using rule 94 (Exp -> PrefixedExp .)
    ,               reduce using rule 94 (Exp -> PrefixedExp .)


state 67

    (95) Exp -> FuncCall .

    ;               reduce using rule 95 (Exp -> FuncCall .)
    =               reduce using rule 95 (Exp -> FuncCall .)
    BOOLAND         reduce using rule 95 (Exp -> FuncCall .)
    BOOLOR          reduce using rule 95 (Exp -> FuncCall .)
    >               reduce using rule 95 (Exp -> FuncCall .)
    <               reduce using rule 95 (Exp -> FuncCall .)
    GRTREQL         reduce using rule 95 (Exp -> FuncCall .)
    LESSEQL         reduce using rule 95 (Exp -> FuncCall .)
    EQUAL           reduce using rule 95 (Exp -> FuncCall .)
    NEQUAL          reduce using rule 95 (Exp -> FuncCall .)
    +               reduce using rule 95 (Exp -> FuncCall .)
    -               reduce using rule 95 (Exp -> FuncCall .)
    *               reduce using rule 95 (Exp -> FuncCall .)
    /               reduce using rule 95 (Exp -> FuncCall .)
    [               reduce using rule 95 (Exp -> FuncCall .)
    .               reduce using rule 95 (Exp -> FuncCall .)
    )               reduce using rule 95 (Exp -> FuncCall .)
    ]               reduce using rule 95 (Exp -> FuncCall .)
    ,               reduce using rule 95 (Exp -> FuncCall .)


state 68

    (57) FlowCtrl -> IF . LP Exp RP Stmt
    (58) FlowCtrl -> IF . LP Exp RP Stmt ELSE Stmt
    (21) LP -> . (

    (               shift and go to state 36

    LP                             shift and go to state 120

state 69

    (59) FlowCtrl -> WHILE . LP Exp RP Stmt
    (21) LP -> . (

    (               shift and go to state 36

    LP                             shift and go to state 121

state 70

    (73) PrefixedExp -> NOT . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    NOT                            shift and go to state 70
    Exp                            shift and go to state 122
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67

state 71

    (76) PrefixedExp -> PLUSSLF . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 123
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 72

    (77) PrefixedExp -> SUBSLF . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 124
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 73

    (12) MINUS -> - .

    ID              reduce using rule 12 (MINUS -> - .)
    NUMBER          reduce using rule 12 (MINUS -> - .)
    DECIMAL         reduce using rule 12 (MINUS -> - .)
    STRINGLITERAL   reduce using rule 12 (MINUS -> - .)
    (               reduce using rule 12 (MINUS -> - .)
    PLUSSLF         reduce using rule 12 (MINUS -> - .)
    SUBSLF          reduce using rule 12 (MINUS -> - .)
    -               reduce using rule 12 (MINUS -> - .)
    !               reduce using rule 12 (MINUS -> - .)
    +               reduce using rule 12 (MINUS -> - .)
    *               reduce using rule 12 (MINUS -> - .)


state 74

    (18) NOT -> ! .

    ID              reduce using rule 18 (NOT -> ! .)
    NUMBER          reduce using rule 18 (NOT -> ! .)
    DECIMAL         reduce using rule 18 (NOT -> ! .)
    STRINGLITERAL   reduce using rule 18 (NOT -> ! .)
    (               reduce using rule 18 (NOT -> ! .)
    PLUSSLF         reduce using rule 18 (NOT -> ! .)
    SUBSLF          reduce using rule 18 (NOT -> ! .)
    -               reduce using rule 18 (NOT -> ! .)
    !               reduce using rule 18 (NOT -> ! .)
    +               reduce using rule 18 (NOT -> ! .)
    *               reduce using rule 18 (NOT -> ! .)


state 75

    (11) PLUS -> + .

    ID              reduce using rule 11 (PLUS -> + .)
    NUMBER          reduce using rule 11 (PLUS -> + .)
    DECIMAL         reduce using rule 11 (PLUS -> + .)
    STRINGLITERAL   reduce using rule 11 (PLUS -> + .)
    (               reduce using rule 11 (PLUS -> + .)
    PLUSSLF         reduce using rule 11 (PLUS -> + .)
    SUBSLF          reduce using rule 11 (PLUS -> + .)
    -               reduce using rule 11 (PLUS -> + .)
    !               reduce using rule 11 (PLUS -> + .)
    +               reduce using rule 11 (PLUS -> + .)
    *               reduce using rule 11 (PLUS -> + .)


state 76

    (13) STAR -> * .

    ID              reduce using rule 13 (STAR -> * .)
    NUMBER          reduce using rule 13 (STAR -> * .)
    DECIMAL         reduce using rule 13 (STAR -> * .)
    STRINGLITERAL   reduce using rule 13 (STAR -> * .)
    (               reduce using rule 13 (STAR -> * .)
    PLUSSLF         reduce using rule 13 (STAR -> * .)
    SUBSLF          reduce using rule 13 (STAR -> * .)
    -               reduce using rule 13 (STAR -> * .)
    !               reduce using rule 13 (STAR -> * .)
    +               reduce using rule 13 (STAR -> * .)
    *               reduce using rule 13 (STAR -> * .)


state 77

    (64) DefList -> Def SEMI . DefList
    (64) DefList -> . Def SEMI DefList
    (65) DefList -> . EMPTY
    (66) Def -> . DecList
    (1) EMPTY -> .
    (68) DecList -> . DecHead
    (69) DecList -> . DecList COMMA Dec
    (67) DecHead -> . Specifier Dec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    RETURN          reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    NUMBER          reduce using rule 1 (EMPTY -> .)
    DECIMAL         reduce using rule 1 (EMPTY -> .)
    STRINGLITERAL   reduce using rule 1 (EMPTY -> .)
    ;               reduce using rule 1 (EMPTY -> .)
    IF              reduce using rule 1 (EMPTY -> .)
    WHILE           reduce using rule 1 (EMPTY -> .)
    (               reduce using rule 1 (EMPTY -> .)
    PLUSSLF         reduce using rule 1 (EMPTY -> .)
    SUBSLF          reduce using rule 1 (EMPTY -> .)
    {               reduce using rule 1 (EMPTY -> .)
    -               reduce using rule 1 (EMPTY -> .)
    !               reduce using rule 1 (EMPTY -> .)
    +               reduce using rule 1 (EMPTY -> .)
    *               reduce using rule 1 (EMPTY -> .)
    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    Def                            shift and go to state 38
    DefList                        shift and go to state 125
    EMPTY                          shift and go to state 39
    DecList                        shift and go to state 40
    DecHead                        shift and go to state 41
    Specifier                      shift and go to state 42
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 78

    (69) DecList -> DecList COMMA . Dec
    (70) Dec -> . VarDec
    (71) Dec -> . VarDec ASSIGNOP Exp
    (46) VarDec -> . ID
    (47) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 81

    Dec                            shift and go to state 126
    VarDec                         shift and go to state 80

state 79

    (67) DecHead -> Specifier Dec .

    ,               reduce using rule 67 (DecHead -> Specifier Dec .)
    ;               reduce using rule 67 (DecHead -> Specifier Dec .)


state 80

    (70) Dec -> VarDec .
    (71) Dec -> VarDec . ASSIGNOP Exp
    (47) VarDec -> VarDec . LB NUMBER RB
    (4) ASSIGNOP -> . =
    (23) LB -> . [

    ,               reduce using rule 70 (Dec -> VarDec .)
    ;               reduce using rule 70 (Dec -> VarDec .)
    =               shift and go to state 103
    [               shift and go to state 34

    ASSIGNOP                       shift and go to state 127
    LB                             shift and go to state 33

state 81

    (46) VarDec -> ID .

    =               reduce using rule 46 (VarDec -> ID .)
    [               reduce using rule 46 (VarDec -> ID .)
    ,               reduce using rule 46 (VarDec -> ID .)
    ;               reduce using rule 46 (VarDec -> ID .)
    )               reduce using rule 46 (VarDec -> ID .)


state 82

    (41) StructSpecifier -> STRUCT OptTag LC DefList . RC
    (26) RC -> . }

    }               shift and go to state 89

    RC                             shift and go to state 128

state 83

    (47) VarDec -> VarDec LB NUMBER RB .

    [               reduce using rule 47 (VarDec -> VarDec LB NUMBER RB .)
    ;               reduce using rule 47 (VarDec -> VarDec LB NUMBER RB .)
    ,               reduce using rule 47 (VarDec -> VarDec LB NUMBER RB .)
    =               reduce using rule 47 (VarDec -> VarDec LB NUMBER RB .)
    )               reduce using rule 47 (VarDec -> VarDec LB NUMBER RB .)


state 84

    (24) RB -> ] .

    [               reduce using rule 24 (RB -> ] .)
    ;               reduce using rule 24 (RB -> ] .)
    ,               reduce using rule 24 (RB -> ] .)
    =               reduce using rule 24 (RB -> ] .)
    )               reduce using rule 24 (RB -> ] .)
    BOOLAND         reduce using rule 24 (RB -> ] .)
    BOOLOR          reduce using rule 24 (RB -> ] .)
    >               reduce using rule 24 (RB -> ] .)
    <               reduce using rule 24 (RB -> ] .)
    GRTREQL         reduce using rule 24 (RB -> ] .)
    LESSEQL         reduce using rule 24 (RB -> ] .)
    EQUAL           reduce using rule 24 (RB -> ] .)
    NEQUAL          reduce using rule 24 (RB -> ] .)
    +               reduce using rule 24 (RB -> ] .)
    -               reduce using rule 24 (RB -> ] .)
    *               reduce using rule 24 (RB -> ] .)
    /               reduce using rule 24 (RB -> ] .)
    .               reduce using rule 24 (RB -> ] .)
    ]               reduce using rule 24 (RB -> ] .)


state 85

    (48) FunDec -> ID LP VarList RP .

    {               reduce using rule 48 (FunDec -> ID LP VarList RP .)
    ;               reduce using rule 48 (FunDec -> ID LP VarList RP .)
    ,               reduce using rule 48 (FunDec -> ID LP VarList RP .)


state 86

    (50) VarList -> ParamDec COMMA . VarList
    (50) VarList -> . ParamDec COMMA VarList
    (51) VarList -> . ParamDec
    (52) ParamDec -> . Specifier VarDec
    (39) Specifier -> . TYPE
    (40) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (41) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (42) StructSpecifier -> . STRUCT Tag

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    STRUCT          shift and go to state 13

    ParamDec                       shift and go to state 47
    VarList                        shift and go to state 129
    Specifier                      shift and go to state 49
    TYPE                           shift and go to state 9
    StructSpecifier                shift and go to state 10

state 87

    (52) ParamDec -> Specifier VarDec .
    (47) VarDec -> VarDec . LB NUMBER RB
    (23) LB -> . [

    ,               reduce using rule 52 (ParamDec -> Specifier VarDec .)
    )               reduce using rule 52 (ParamDec -> Specifier VarDec .)
    [               shift and go to state 34

    LB                             shift and go to state 33

state 88

    (53) CompSt -> LC DefList StmtList RC .

    INT             reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    FLOAT           reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    STRUCT          reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    $end            reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    RETURN          reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    ID              reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    NUMBER          reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    DECIMAL         reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    STRINGLITERAL   reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    ;               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    IF              reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    WHILE           reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    (               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    PLUSSLF         reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    SUBSLF          reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    {               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    -               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    !               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    +               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    *               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    }               reduce using rule 53 (CompSt -> LC DefList StmtList RC .)
    ELSE            reduce using rule 53 (CompSt -> LC DefList StmtList RC .)


state 89

    (26) RC -> } .

    INT             reduce using rule 26 (RC -> } .)
    FLOAT           reduce using rule 26 (RC -> } .)
    STRUCT          reduce using rule 26 (RC -> } .)
    $end            reduce using rule 26 (RC -> } .)
    RETURN          reduce using rule 26 (RC -> } .)
    ID              reduce using rule 26 (RC -> } .)
    NUMBER          reduce using rule 26 (RC -> } .)
    DECIMAL         reduce using rule 26 (RC -> } .)
    STRINGLITERAL   reduce using rule 26 (RC -> } .)
    ;               reduce using rule 26 (RC -> } .)
    IF              reduce using rule 26 (RC -> } .)
    WHILE           reduce using rule 26 (RC -> } .)
    (               reduce using rule 26 (RC -> } .)
    PLUSSLF         reduce using rule 26 (RC -> } .)
    SUBSLF          reduce using rule 26 (RC -> } .)
    {               reduce using rule 26 (RC -> } .)
    -               reduce using rule 26 (RC -> } .)
    !               reduce using rule 26 (RC -> } .)
    +               reduce using rule 26 (RC -> } .)
    *               reduce using rule 26 (RC -> } .)
    }               reduce using rule 26 (RC -> } .)
    ELSE            reduce using rule 26 (RC -> } .)


state 90

    (54) StmtList -> Stmt StmtList .

    }               reduce using rule 54 (StmtList -> Stmt StmtList .)


state 91

    (56) Stmt -> RETURN Exp . SEMI
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (2) SEMI -> . ;
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ;               shift and go to state 17
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    SEMI                           shift and go to state 130
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 92

    (60) Stmt -> Exp SEMI .

    RETURN          reduce using rule 60 (Stmt -> Exp SEMI .)
    ID              reduce using rule 60 (Stmt -> Exp SEMI .)
    NUMBER          reduce using rule 60 (Stmt -> Exp SEMI .)
    DECIMAL         reduce using rule 60 (Stmt -> Exp SEMI .)
    STRINGLITERAL   reduce using rule 60 (Stmt -> Exp SEMI .)
    ;               reduce using rule 60 (Stmt -> Exp SEMI .)
    IF              reduce using rule 60 (Stmt -> Exp SEMI .)
    WHILE           reduce using rule 60 (Stmt -> Exp SEMI .)
    (               reduce using rule 60 (Stmt -> Exp SEMI .)
    PLUSSLF         reduce using rule 60 (Stmt -> Exp SEMI .)
    SUBSLF          reduce using rule 60 (Stmt -> Exp SEMI .)
    {               reduce using rule 60 (Stmt -> Exp SEMI .)
    -               reduce using rule 60 (Stmt -> Exp SEMI .)
    !               reduce using rule 60 (Stmt -> Exp SEMI .)
    +               reduce using rule 60 (Stmt -> Exp SEMI .)
    *               reduce using rule 60 (Stmt -> Exp SEMI .)
    }               reduce using rule 60 (Stmt -> Exp SEMI .)
    ELSE            reduce using rule 60 (Stmt -> Exp SEMI .)


state 93

    (84) Exp -> Exp ASSIGNOP . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 131
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 94

    (85) Exp -> Exp AND . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 132
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 95

    (86) Exp -> Exp OR . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 133
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 96

    (87) Exp -> Exp RELOP . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 134
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 97

    (88) Exp -> Exp PLUS . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 135
    PLUS                           shift and go to state 63
    LP                             shift and go to state 58
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 98

    (89) Exp -> Exp MINUS . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 136
    MINUS                          shift and go to state 64
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 99

    (90) Exp -> Exp STAR . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 137
    STAR                           shift and go to state 65
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 100

    (91) Exp -> Exp DIV . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 138
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 101

    (92) Exp -> Exp LB . Exp RB
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 139
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 102

    (93) Exp -> Exp DOT . ID

    ID              shift and go to state 140


state 103

    (4) ASSIGNOP -> = .

    ID              reduce using rule 4 (ASSIGNOP -> = .)
    NUMBER          reduce using rule 4 (ASSIGNOP -> = .)
    DECIMAL         reduce using rule 4 (ASSIGNOP -> = .)
    STRINGLITERAL   reduce using rule 4 (ASSIGNOP -> = .)
    (               reduce using rule 4 (ASSIGNOP -> = .)
    PLUSSLF         reduce using rule 4 (ASSIGNOP -> = .)
    SUBSLF          reduce using rule 4 (ASSIGNOP -> = .)
    -               reduce using rule 4 (ASSIGNOP -> = .)
    !               reduce using rule 4 (ASSIGNOP -> = .)
    +               reduce using rule 4 (ASSIGNOP -> = .)
    *               reduce using rule 4 (ASSIGNOP -> = .)


state 104

    (15) AND -> BOOLAND .

    ID              reduce using rule 15 (AND -> BOOLAND .)
    NUMBER          reduce using rule 15 (AND -> BOOLAND .)
    DECIMAL         reduce using rule 15 (AND -> BOOLAND .)
    STRINGLITERAL   reduce using rule 15 (AND -> BOOLAND .)
    (               reduce using rule 15 (AND -> BOOLAND .)
    PLUSSLF         reduce using rule 15 (AND -> BOOLAND .)
    SUBSLF          reduce using rule 15 (AND -> BOOLAND .)
    -               reduce using rule 15 (AND -> BOOLAND .)
    !               reduce using rule 15 (AND -> BOOLAND .)
    +               reduce using rule 15 (AND -> BOOLAND .)
    *               reduce using rule 15 (AND -> BOOLAND .)


state 105

    (16) OR -> BOOLOR .

    ID              reduce using rule 16 (OR -> BOOLOR .)
    NUMBER          reduce using rule 16 (OR -> BOOLOR .)
    DECIMAL         reduce using rule 16 (OR -> BOOLOR .)
    STRINGLITERAL   reduce using rule 16 (OR -> BOOLOR .)
    (               reduce using rule 16 (OR -> BOOLOR .)
    PLUSSLF         reduce using rule 16 (OR -> BOOLOR .)
    SUBSLF          reduce using rule 16 (OR -> BOOLOR .)
    -               reduce using rule 16 (OR -> BOOLOR .)
    !               reduce using rule 16 (OR -> BOOLOR .)
    +               reduce using rule 16 (OR -> BOOLOR .)
    *               reduce using rule 16 (OR -> BOOLOR .)


state 106

    (5) RELOP -> > .

    ID              reduce using rule 5 (RELOP -> > .)
    NUMBER          reduce using rule 5 (RELOP -> > .)
    DECIMAL         reduce using rule 5 (RELOP -> > .)
    STRINGLITERAL   reduce using rule 5 (RELOP -> > .)
    (               reduce using rule 5 (RELOP -> > .)
    PLUSSLF         reduce using rule 5 (RELOP -> > .)
    SUBSLF          reduce using rule 5 (RELOP -> > .)
    -               reduce using rule 5 (RELOP -> > .)
    !               reduce using rule 5 (RELOP -> > .)
    +               reduce using rule 5 (RELOP -> > .)
    *               reduce using rule 5 (RELOP -> > .)


state 107

    (6) RELOP -> < .

    ID              reduce using rule 6 (RELOP -> < .)
    NUMBER          reduce using rule 6 (RELOP -> < .)
    DECIMAL         reduce using rule 6 (RELOP -> < .)
    STRINGLITERAL   reduce using rule 6 (RELOP -> < .)
    (               reduce using rule 6 (RELOP -> < .)
    PLUSSLF         reduce using rule 6 (RELOP -> < .)
    SUBSLF          reduce using rule 6 (RELOP -> < .)
    -               reduce using rule 6 (RELOP -> < .)
    !               reduce using rule 6 (RELOP -> < .)
    +               reduce using rule 6 (RELOP -> < .)
    *               reduce using rule 6 (RELOP -> < .)


state 108

    (7) RELOP -> GRTREQL .

    ID              reduce using rule 7 (RELOP -> GRTREQL .)
    NUMBER          reduce using rule 7 (RELOP -> GRTREQL .)
    DECIMAL         reduce using rule 7 (RELOP -> GRTREQL .)
    STRINGLITERAL   reduce using rule 7 (RELOP -> GRTREQL .)
    (               reduce using rule 7 (RELOP -> GRTREQL .)
    PLUSSLF         reduce using rule 7 (RELOP -> GRTREQL .)
    SUBSLF          reduce using rule 7 (RELOP -> GRTREQL .)
    -               reduce using rule 7 (RELOP -> GRTREQL .)
    !               reduce using rule 7 (RELOP -> GRTREQL .)
    +               reduce using rule 7 (RELOP -> GRTREQL .)
    *               reduce using rule 7 (RELOP -> GRTREQL .)


state 109

    (8) RELOP -> LESSEQL .

    ID              reduce using rule 8 (RELOP -> LESSEQL .)
    NUMBER          reduce using rule 8 (RELOP -> LESSEQL .)
    DECIMAL         reduce using rule 8 (RELOP -> LESSEQL .)
    STRINGLITERAL   reduce using rule 8 (RELOP -> LESSEQL .)
    (               reduce using rule 8 (RELOP -> LESSEQL .)
    PLUSSLF         reduce using rule 8 (RELOP -> LESSEQL .)
    SUBSLF          reduce using rule 8 (RELOP -> LESSEQL .)
    -               reduce using rule 8 (RELOP -> LESSEQL .)
    !               reduce using rule 8 (RELOP -> LESSEQL .)
    +               reduce using rule 8 (RELOP -> LESSEQL .)
    *               reduce using rule 8 (RELOP -> LESSEQL .)


state 110

    (9) RELOP -> EQUAL .

    ID              reduce using rule 9 (RELOP -> EQUAL .)
    NUMBER          reduce using rule 9 (RELOP -> EQUAL .)
    DECIMAL         reduce using rule 9 (RELOP -> EQUAL .)
    STRINGLITERAL   reduce using rule 9 (RELOP -> EQUAL .)
    (               reduce using rule 9 (RELOP -> EQUAL .)
    PLUSSLF         reduce using rule 9 (RELOP -> EQUAL .)
    SUBSLF          reduce using rule 9 (RELOP -> EQUAL .)
    -               reduce using rule 9 (RELOP -> EQUAL .)
    !               reduce using rule 9 (RELOP -> EQUAL .)
    +               reduce using rule 9 (RELOP -> EQUAL .)
    *               reduce using rule 9 (RELOP -> EQUAL .)


state 111

    (10) RELOP -> NEQUAL .

    ID              reduce using rule 10 (RELOP -> NEQUAL .)
    NUMBER          reduce using rule 10 (RELOP -> NEQUAL .)
    DECIMAL         reduce using rule 10 (RELOP -> NEQUAL .)
    STRINGLITERAL   reduce using rule 10 (RELOP -> NEQUAL .)
    (               reduce using rule 10 (RELOP -> NEQUAL .)
    PLUSSLF         reduce using rule 10 (RELOP -> NEQUAL .)
    SUBSLF          reduce using rule 10 (RELOP -> NEQUAL .)
    -               reduce using rule 10 (RELOP -> NEQUAL .)
    !               reduce using rule 10 (RELOP -> NEQUAL .)
    +               reduce using rule 10 (RELOP -> NEQUAL .)
    *               reduce using rule 10 (RELOP -> NEQUAL .)


state 112

    (14) DIV -> / .

    ID              reduce using rule 14 (DIV -> / .)
    NUMBER          reduce using rule 14 (DIV -> / .)
    DECIMAL         reduce using rule 14 (DIV -> / .)
    STRINGLITERAL   reduce using rule 14 (DIV -> / .)
    (               reduce using rule 14 (DIV -> / .)
    PLUSSLF         reduce using rule 14 (DIV -> / .)
    SUBSLF          reduce using rule 14 (DIV -> / .)
    -               reduce using rule 14 (DIV -> / .)
    !               reduce using rule 14 (DIV -> / .)
    +               reduce using rule 14 (DIV -> / .)
    *               reduce using rule 14 (DIV -> / .)


state 113

    (17) DOT -> . .

    ID              reduce using rule 17 (DOT -> . .)


state 114

    (79) Exp -> LP Exp . RP
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 48
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    RP                             shift and go to state 141
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 115

    (78) PrefixedExp -> LP TYPE . RP Exp
    (22) RP -> . )

    )               shift and go to state 48

    RP                             shift and go to state 142

state 116

    (96) FuncCall -> ID LP . Args RP
    (97) FuncCall -> ID LP . RP
    (98) Args -> . Exp COMMA Args
    (99) Args -> . Exp
    (22) RP -> . )
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    )               shift and go to state 48
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Args                           shift and go to state 143
    RP                             shift and go to state 144
    Exp                            shift and go to state 145
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 117

    (74) PrefixedExp -> PLUS Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 74 (PrefixedExp -> PLUS Exp .)
    )               reduce using rule 74 (PrefixedExp -> PLUS Exp .)
    ]               reduce using rule 74 (PrefixedExp -> PLUS Exp .)
    ,               reduce using rule 74 (PrefixedExp -> PLUS Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! BOOLAND         [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! BOOLOR          [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! >               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! <               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! GRTREQL         [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! LESSEQL         [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! EQUAL           [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! NEQUAL          [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! +               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! -               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! *               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! /               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! [               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]
  ! .               [ reduce using rule 74 (PrefixedExp -> PLUS Exp .) ]

    PLUS                           shift and go to state 97
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 118

    (72) PrefixedExp -> MINUS Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 72 (PrefixedExp -> MINUS Exp .)
    )               reduce using rule 72 (PrefixedExp -> MINUS Exp .)
    ]               reduce using rule 72 (PrefixedExp -> MINUS Exp .)
    ,               reduce using rule 72 (PrefixedExp -> MINUS Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! BOOLAND         [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! BOOLOR          [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! >               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! <               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! GRTREQL         [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! LESSEQL         [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! EQUAL           [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! NEQUAL          [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! +               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! -               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! *               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! /               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! [               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]
  ! .               [ reduce using rule 72 (PrefixedExp -> MINUS Exp .) ]

    MINUS                          shift and go to state 98
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 119

    (75) PrefixedExp -> STAR Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 75 (PrefixedExp -> STAR Exp .)
    )               reduce using rule 75 (PrefixedExp -> STAR Exp .)
    ]               reduce using rule 75 (PrefixedExp -> STAR Exp .)
    ,               reduce using rule 75 (PrefixedExp -> STAR Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! BOOLAND         [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! BOOLOR          [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! >               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! <               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! GRTREQL         [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! LESSEQL         [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! EQUAL           [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! NEQUAL          [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! +               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! -               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! *               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! /               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! [               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]
  ! .               [ reduce using rule 75 (PrefixedExp -> STAR Exp .) ]

    STAR                           shift and go to state 99
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 120

    (57) FlowCtrl -> IF LP . Exp RP Stmt
    (58) FlowCtrl -> IF LP . Exp RP Stmt ELSE Stmt
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 146
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 121

    (59) FlowCtrl -> WHILE LP . Exp RP Stmt
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 147
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 122

    (73) PrefixedExp -> NOT Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 73 (PrefixedExp -> NOT Exp .)
    )               reduce using rule 73 (PrefixedExp -> NOT Exp .)
    ]               reduce using rule 73 (PrefixedExp -> NOT Exp .)
    ,               reduce using rule 73 (PrefixedExp -> NOT Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! BOOLAND         [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! BOOLOR          [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! >               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! <               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! GRTREQL         [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! LESSEQL         [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! EQUAL           [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! NEQUAL          [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! +               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! -               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! *               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! /               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! [               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]
  ! .               [ reduce using rule 73 (PrefixedExp -> NOT Exp .) ]

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 123

    (76) PrefixedExp -> PLUSSLF Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .)
    )               reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .)
    ]               reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .)
    ,               reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! BOOLAND         [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! BOOLOR          [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! >               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! <               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! GRTREQL         [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! LESSEQL         [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! EQUAL           [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! NEQUAL          [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! +               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! -               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! *               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! /               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! [               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]
  ! .               [ reduce using rule 76 (PrefixedExp -> PLUSSLF Exp .) ]

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 124

    (77) PrefixedExp -> SUBSLF Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 77 (PrefixedExp -> SUBSLF Exp .)
    )               reduce using rule 77 (PrefixedExp -> SUBSLF Exp .)
    ]               reduce using rule 77 (PrefixedExp -> SUBSLF Exp .)
    ,               reduce using rule 77 (PrefixedExp -> SUBSLF Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! BOOLAND         [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! BOOLOR          [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! >               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! <               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! GRTREQL         [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! LESSEQL         [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! EQUAL           [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! NEQUAL          [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! +               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! -               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! *               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! /               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! [               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]
  ! .               [ reduce using rule 77 (PrefixedExp -> SUBSLF Exp .) ]

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 125

    (64) DefList -> Def SEMI DefList .

    RETURN          reduce using rule 64 (DefList -> Def SEMI DefList .)
    ID              reduce using rule 64 (DefList -> Def SEMI DefList .)
    NUMBER          reduce using rule 64 (DefList -> Def SEMI DefList .)
    DECIMAL         reduce using rule 64 (DefList -> Def SEMI DefList .)
    STRINGLITERAL   reduce using rule 64 (DefList -> Def SEMI DefList .)
    ;               reduce using rule 64 (DefList -> Def SEMI DefList .)
    IF              reduce using rule 64 (DefList -> Def SEMI DefList .)
    WHILE           reduce using rule 64 (DefList -> Def SEMI DefList .)
    (               reduce using rule 64 (DefList -> Def SEMI DefList .)
    PLUSSLF         reduce using rule 64 (DefList -> Def SEMI DefList .)
    SUBSLF          reduce using rule 64 (DefList -> Def SEMI DefList .)
    {               reduce using rule 64 (DefList -> Def SEMI DefList .)
    -               reduce using rule 64 (DefList -> Def SEMI DefList .)
    !               reduce using rule 64 (DefList -> Def SEMI DefList .)
    +               reduce using rule 64 (DefList -> Def SEMI DefList .)
    *               reduce using rule 64 (DefList -> Def SEMI DefList .)
    }               reduce using rule 64 (DefList -> Def SEMI DefList .)


state 126

    (69) DecList -> DecList COMMA Dec .

    ,               reduce using rule 69 (DecList -> DecList COMMA Dec .)
    ;               reduce using rule 69 (DecList -> DecList COMMA Dec .)


state 127

    (71) Dec -> VarDec ASSIGNOP . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 148
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 128

    (41) StructSpecifier -> STRUCT OptTag LC DefList RC .

    ;               reduce using rule 41 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    ID              reduce using rule 41 (StructSpecifier -> STRUCT OptTag LC DefList RC .)


state 129

    (50) VarList -> ParamDec COMMA VarList .

    )               reduce using rule 50 (VarList -> ParamDec COMMA VarList .)


state 130

    (56) Stmt -> RETURN Exp SEMI .

    RETURN          reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    ID              reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    NUMBER          reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    DECIMAL         reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    STRINGLITERAL   reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    ;               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    IF              reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    WHILE           reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    (               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    PLUSSLF         reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    SUBSLF          reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    {               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    -               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    !               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    +               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    *               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    }               reduce using rule 56 (Stmt -> RETURN Exp SEMI .)
    ELSE            reduce using rule 56 (Stmt -> RETURN Exp SEMI .)


state 131

    (84) Exp -> Exp ASSIGNOP Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .)
    )               reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .)
    ]               reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .)
    ,               reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! BOOLAND         [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! BOOLOR          [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! >               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! <               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! GRTREQL         [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! LESSEQL         [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! EQUAL           [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! NEQUAL          [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! +               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! -               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! *               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! /               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! [               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]
  ! .               [ reduce using rule 84 (Exp -> Exp ASSIGNOP Exp .) ]

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 132

    (85) Exp -> Exp AND Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 85 (Exp -> Exp AND Exp .)
    )               reduce using rule 85 (Exp -> Exp AND Exp .)
    ]               reduce using rule 85 (Exp -> Exp AND Exp .)
    ,               reduce using rule 85 (Exp -> Exp AND Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! BOOLAND         [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! BOOLOR          [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! >               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! <               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! GRTREQL         [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! LESSEQL         [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! EQUAL           [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! NEQUAL          [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! +               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! -               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! *               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! /               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! [               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]
  ! .               [ reduce using rule 85 (Exp -> Exp AND Exp .) ]

    AND                            shift and go to state 94
    ASSIGNOP                       shift and go to state 93
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 133

    (86) Exp -> Exp OR Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 86 (Exp -> Exp OR Exp .)
    )               reduce using rule 86 (Exp -> Exp OR Exp .)
    ]               reduce using rule 86 (Exp -> Exp OR Exp .)
    ,               reduce using rule 86 (Exp -> Exp OR Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! BOOLAND         [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! BOOLOR          [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! >               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! <               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! GRTREQL         [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! LESSEQL         [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! EQUAL           [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! NEQUAL          [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! +               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! -               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! *               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! /               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! [               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]
  ! .               [ reduce using rule 86 (Exp -> Exp OR Exp .) ]

    OR                             shift and go to state 95
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 134

    (87) Exp -> Exp RELOP Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 87 (Exp -> Exp RELOP Exp .)
    )               reduce using rule 87 (Exp -> Exp RELOP Exp .)
    ]               reduce using rule 87 (Exp -> Exp RELOP Exp .)
    ,               reduce using rule 87 (Exp -> Exp RELOP Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! BOOLAND         [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! BOOLOR          [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! >               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! <               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! GRTREQL         [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! LESSEQL         [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! EQUAL           [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! NEQUAL          [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! +               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! -               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! *               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! /               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! [               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]
  ! .               [ reduce using rule 87 (Exp -> Exp RELOP Exp .) ]

    RELOP                          shift and go to state 96
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 135

    (88) Exp -> Exp PLUS Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 88 (Exp -> Exp PLUS Exp .)
    )               reduce using rule 88 (Exp -> Exp PLUS Exp .)
    ]               reduce using rule 88 (Exp -> Exp PLUS Exp .)
    ,               reduce using rule 88 (Exp -> Exp PLUS Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! BOOLAND         [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! BOOLOR          [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! >               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! <               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! GRTREQL         [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! LESSEQL         [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! EQUAL           [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! NEQUAL          [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! +               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! -               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! *               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! /               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! [               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]
  ! .               [ reduce using rule 88 (Exp -> Exp PLUS Exp .) ]

    PLUS                           shift and go to state 97
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 136

    (89) Exp -> Exp MINUS Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 89 (Exp -> Exp MINUS Exp .)
    )               reduce using rule 89 (Exp -> Exp MINUS Exp .)
    ]               reduce using rule 89 (Exp -> Exp MINUS Exp .)
    ,               reduce using rule 89 (Exp -> Exp MINUS Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! BOOLAND         [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! BOOLOR          [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! >               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! <               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! GRTREQL         [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! LESSEQL         [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! EQUAL           [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! NEQUAL          [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! +               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! -               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! *               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! /               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! [               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]
  ! .               [ reduce using rule 89 (Exp -> Exp MINUS Exp .) ]

    MINUS                          shift and go to state 98
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 137

    (90) Exp -> Exp STAR Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 90 (Exp -> Exp STAR Exp .)
    )               reduce using rule 90 (Exp -> Exp STAR Exp .)
    ]               reduce using rule 90 (Exp -> Exp STAR Exp .)
    ,               reduce using rule 90 (Exp -> Exp STAR Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! BOOLAND         [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! BOOLOR          [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! >               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! <               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! GRTREQL         [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! LESSEQL         [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! EQUAL           [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! NEQUAL          [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! +               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! -               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! *               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! /               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! [               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]
  ! .               [ reduce using rule 90 (Exp -> Exp STAR Exp .) ]

    STAR                           shift and go to state 99
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 138

    (91) Exp -> Exp DIV Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 91 (Exp -> Exp DIV Exp .)
    )               reduce using rule 91 (Exp -> Exp DIV Exp .)
    ]               reduce using rule 91 (Exp -> Exp DIV Exp .)
    ,               reduce using rule 91 (Exp -> Exp DIV Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! BOOLAND         [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! BOOLOR          [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! >               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! <               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! GRTREQL         [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! LESSEQL         [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! EQUAL           [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! NEQUAL          [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! +               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! -               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! *               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! /               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! [               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]
  ! .               [ reduce using rule 91 (Exp -> Exp DIV Exp .) ]

    DIV                            shift and go to state 100
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 139

    (92) Exp -> Exp LB Exp . RB
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (24) RB -> . ]
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ]               shift and go to state 84
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    LB                             shift and go to state 101
    RB                             shift and go to state 149
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    DOT                            shift and go to state 102

state 140

    (93) Exp -> Exp DOT ID .

    ;               reduce using rule 93 (Exp -> Exp DOT ID .)
    =               reduce using rule 93 (Exp -> Exp DOT ID .)
    BOOLAND         reduce using rule 93 (Exp -> Exp DOT ID .)
    BOOLOR          reduce using rule 93 (Exp -> Exp DOT ID .)
    >               reduce using rule 93 (Exp -> Exp DOT ID .)
    <               reduce using rule 93 (Exp -> Exp DOT ID .)
    GRTREQL         reduce using rule 93 (Exp -> Exp DOT ID .)
    LESSEQL         reduce using rule 93 (Exp -> Exp DOT ID .)
    EQUAL           reduce using rule 93 (Exp -> Exp DOT ID .)
    NEQUAL          reduce using rule 93 (Exp -> Exp DOT ID .)
    +               reduce using rule 93 (Exp -> Exp DOT ID .)
    -               reduce using rule 93 (Exp -> Exp DOT ID .)
    *               reduce using rule 93 (Exp -> Exp DOT ID .)
    /               reduce using rule 93 (Exp -> Exp DOT ID .)
    [               reduce using rule 93 (Exp -> Exp DOT ID .)
    .               reduce using rule 93 (Exp -> Exp DOT ID .)
    )               reduce using rule 93 (Exp -> Exp DOT ID .)
    ]               reduce using rule 93 (Exp -> Exp DOT ID .)
    ,               reduce using rule 93 (Exp -> Exp DOT ID .)


state 141

    (79) Exp -> LP Exp RP .

    ;               reduce using rule 79 (Exp -> LP Exp RP .)
    =               reduce using rule 79 (Exp -> LP Exp RP .)
    BOOLAND         reduce using rule 79 (Exp -> LP Exp RP .)
    BOOLOR          reduce using rule 79 (Exp -> LP Exp RP .)
    >               reduce using rule 79 (Exp -> LP Exp RP .)
    <               reduce using rule 79 (Exp -> LP Exp RP .)
    GRTREQL         reduce using rule 79 (Exp -> LP Exp RP .)
    LESSEQL         reduce using rule 79 (Exp -> LP Exp RP .)
    EQUAL           reduce using rule 79 (Exp -> LP Exp RP .)
    NEQUAL          reduce using rule 79 (Exp -> LP Exp RP .)
    +               reduce using rule 79 (Exp -> LP Exp RP .)
    -               reduce using rule 79 (Exp -> LP Exp RP .)
    *               reduce using rule 79 (Exp -> LP Exp RP .)
    /               reduce using rule 79 (Exp -> LP Exp RP .)
    [               reduce using rule 79 (Exp -> LP Exp RP .)
    .               reduce using rule 79 (Exp -> LP Exp RP .)
    )               reduce using rule 79 (Exp -> LP Exp RP .)
    ]               reduce using rule 79 (Exp -> LP Exp RP .)
    ,               reduce using rule 79 (Exp -> LP Exp RP .)


state 142

    (78) PrefixedExp -> LP TYPE RP . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 150
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 143

    (96) FuncCall -> ID LP Args . RP
    (22) RP -> . )

    )               shift and go to state 48

    RP                             shift and go to state 151

state 144

    (97) FuncCall -> ID LP RP .

    ;               reduce using rule 97 (FuncCall -> ID LP RP .)
    =               reduce using rule 97 (FuncCall -> ID LP RP .)
    BOOLAND         reduce using rule 97 (FuncCall -> ID LP RP .)
    BOOLOR          reduce using rule 97 (FuncCall -> ID LP RP .)
    >               reduce using rule 97 (FuncCall -> ID LP RP .)
    <               reduce using rule 97 (FuncCall -> ID LP RP .)
    GRTREQL         reduce using rule 97 (FuncCall -> ID LP RP .)
    LESSEQL         reduce using rule 97 (FuncCall -> ID LP RP .)
    EQUAL           reduce using rule 97 (FuncCall -> ID LP RP .)
    NEQUAL          reduce using rule 97 (FuncCall -> ID LP RP .)
    +               reduce using rule 97 (FuncCall -> ID LP RP .)
    -               reduce using rule 97 (FuncCall -> ID LP RP .)
    *               reduce using rule 97 (FuncCall -> ID LP RP .)
    /               reduce using rule 97 (FuncCall -> ID LP RP .)
    [               reduce using rule 97 (FuncCall -> ID LP RP .)
    .               reduce using rule 97 (FuncCall -> ID LP RP .)
    )               reduce using rule 97 (FuncCall -> ID LP RP .)
    ]               reduce using rule 97 (FuncCall -> ID LP RP .)
    ,               reduce using rule 97 (FuncCall -> ID LP RP .)


state 145

    (98) Args -> Exp . COMMA Args
    (99) Args -> Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (3) COMMA -> . ,
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               reduce using rule 99 (Args -> Exp .)
    ,               shift and go to state 18
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    COMMA                          shift and go to state 152
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 146

    (57) FlowCtrl -> IF LP Exp . RP Stmt
    (58) FlowCtrl -> IF LP Exp . RP Stmt ELSE Stmt
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 48
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    RP                             shift and go to state 153
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 147

    (59) FlowCtrl -> WHILE LP Exp . RP Stmt
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 48
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    RP                             shift and go to state 154
    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 148

    (71) Dec -> VarDec ASSIGNOP Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ,               reduce using rule 71 (Dec -> VarDec ASSIGNOP Exp .)
    ;               reduce using rule 71 (Dec -> VarDec ASSIGNOP Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 149

    (92) Exp -> Exp LB Exp RB .

    ;               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    =               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    BOOLAND         reduce using rule 92 (Exp -> Exp LB Exp RB .)
    BOOLOR          reduce using rule 92 (Exp -> Exp LB Exp RB .)
    >               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    <               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    GRTREQL         reduce using rule 92 (Exp -> Exp LB Exp RB .)
    LESSEQL         reduce using rule 92 (Exp -> Exp LB Exp RB .)
    EQUAL           reduce using rule 92 (Exp -> Exp LB Exp RB .)
    NEQUAL          reduce using rule 92 (Exp -> Exp LB Exp RB .)
    +               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    -               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    *               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    /               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    [               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    .               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    )               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    ]               reduce using rule 92 (Exp -> Exp LB Exp RB .)
    ,               reduce using rule 92 (Exp -> Exp LB Exp RB .)


state 150

    (78) PrefixedExp -> LP TYPE RP Exp .
    (84) Exp -> Exp . ASSIGNOP Exp
    (85) Exp -> Exp . AND Exp
    (86) Exp -> Exp . OR Exp
    (87) Exp -> Exp . RELOP Exp
    (88) Exp -> Exp . PLUS Exp
    (89) Exp -> Exp . MINUS Exp
    (90) Exp -> Exp . STAR Exp
    (91) Exp -> Exp . DIV Exp
    (92) Exp -> Exp . LB Exp RB
    (93) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .)
    )               reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .)
    ]               reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .)
    ,               reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .)
    =               shift and go to state 103
    BOOLAND         shift and go to state 104
    BOOLOR          shift and go to state 105
    >               shift and go to state 106
    <               shift and go to state 107
    GRTREQL         shift and go to state 108
    LESSEQL         shift and go to state 109
    EQUAL           shift and go to state 110
    NEQUAL          shift and go to state 111
    +               shift and go to state 75
    -               shift and go to state 73
    *               shift and go to state 76
    /               shift and go to state 112
    [               shift and go to state 34
    .               shift and go to state 113

  ! =               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! BOOLAND         [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! BOOLOR          [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! >               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! <               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! GRTREQL         [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! LESSEQL         [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! EQUAL           [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! NEQUAL          [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! +               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! -               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! *               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! /               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! [               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! .               [ reduce using rule 78 (PrefixedExp -> LP TYPE RP Exp .) ]

    ASSIGNOP                       shift and go to state 93
    AND                            shift and go to state 94
    OR                             shift and go to state 95
    RELOP                          shift and go to state 96
    PLUS                           shift and go to state 97
    MINUS                          shift and go to state 98
    STAR                           shift and go to state 99
    DIV                            shift and go to state 100
    LB                             shift and go to state 101
    DOT                            shift and go to state 102

state 151

    (96) FuncCall -> ID LP Args RP .

    ;               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    =               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    BOOLAND         reduce using rule 96 (FuncCall -> ID LP Args RP .)
    BOOLOR          reduce using rule 96 (FuncCall -> ID LP Args RP .)
    >               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    <               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    GRTREQL         reduce using rule 96 (FuncCall -> ID LP Args RP .)
    LESSEQL         reduce using rule 96 (FuncCall -> ID LP Args RP .)
    EQUAL           reduce using rule 96 (FuncCall -> ID LP Args RP .)
    NEQUAL          reduce using rule 96 (FuncCall -> ID LP Args RP .)
    +               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    -               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    *               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    /               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    [               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    .               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    )               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    ]               reduce using rule 96 (FuncCall -> ID LP Args RP .)
    ,               reduce using rule 96 (FuncCall -> ID LP Args RP .)


state 152

    (98) Args -> Exp COMMA . Args
    (98) Args -> . Exp COMMA Args
    (99) Args -> . Exp
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    Exp                            shift and go to state 145
    Args                           shift and go to state 155
    LP                             shift and go to state 58
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    NOT                            shift and go to state 70

state 153

    (57) FlowCtrl -> IF LP Exp RP . Stmt
    (58) FlowCtrl -> IF LP Exp RP . Stmt ELSE Stmt
    (56) Stmt -> . RETURN Exp SEMI
    (60) Stmt -> . Exp SEMI
    (61) Stmt -> . CompSt
    (62) Stmt -> . SEMI
    (63) Stmt -> . FlowCtrl
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (53) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (57) FlowCtrl -> . IF LP Exp RP Stmt
    (58) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (59) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 53
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    ;               shift and go to state 17
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    {               shift and go to state 25
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 54
    Stmt                           shift and go to state 156
    SEMI                           shift and go to state 55
    CompSt                         shift and go to state 56
    FlowCtrl                       shift and go to state 57
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    LC                             shift and go to state 24
    NOT                            shift and go to state 70

state 154

    (59) FlowCtrl -> WHILE LP Exp RP . Stmt
    (56) Stmt -> . RETURN Exp SEMI
    (60) Stmt -> . Exp SEMI
    (61) Stmt -> . CompSt
    (62) Stmt -> . SEMI
    (63) Stmt -> . FlowCtrl
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (53) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (57) FlowCtrl -> . IF LP Exp RP Stmt
    (58) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (59) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 53
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    ;               shift and go to state 17
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    {               shift and go to state 25
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 54
    Stmt                           shift and go to state 157
    SEMI                           shift and go to state 55
    CompSt                         shift and go to state 56
    FlowCtrl                       shift and go to state 57
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    LC                             shift and go to state 24
    NOT                            shift and go to state 70

state 155

    (98) Args -> Exp COMMA Args .

    )               reduce using rule 98 (Args -> Exp COMMA Args .)


state 156

    (57) FlowCtrl -> IF LP Exp RP Stmt .
    (58) FlowCtrl -> IF LP Exp RP Stmt . ELSE Stmt

  ! shift/reduce conflict for ELSE resolved as shift
    RETURN          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    ID              reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    NUMBER          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    DECIMAL         reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    STRINGLITERAL   reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    ;               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    IF              reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    WHILE           reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    (               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    PLUSSLF         reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    SUBSLF          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    {               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    -               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    !               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    +               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    *               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    }               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .)
    ELSE            shift and go to state 158

  ! ELSE            [ reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt .) ]


state 157

    (59) FlowCtrl -> WHILE LP Exp RP Stmt .

    RETURN          reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ID              reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    NUMBER          reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    DECIMAL         reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    STRINGLITERAL   reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ;               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    IF              reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    WHILE           reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    (               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    PLUSSLF         reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    SUBSLF          reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    {               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    -               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    !               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    +               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    *               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    }               reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ELSE            reduce using rule 59 (FlowCtrl -> WHILE LP Exp RP Stmt .)


state 158

    (58) FlowCtrl -> IF LP Exp RP Stmt ELSE . Stmt
    (56) Stmt -> . RETURN Exp SEMI
    (60) Stmt -> . Exp SEMI
    (61) Stmt -> . CompSt
    (62) Stmt -> . SEMI
    (63) Stmt -> . FlowCtrl
    (79) Exp -> . LP Exp RP
    (80) Exp -> . ID
    (81) Exp -> . NUMBER
    (82) Exp -> . DECIMAL
    (83) Exp -> . STRINGLITERAL
    (84) Exp -> . Exp ASSIGNOP Exp
    (85) Exp -> . Exp AND Exp
    (86) Exp -> . Exp OR Exp
    (87) Exp -> . Exp RELOP Exp
    (88) Exp -> . Exp PLUS Exp
    (89) Exp -> . Exp MINUS Exp
    (90) Exp -> . Exp STAR Exp
    (91) Exp -> . Exp DIV Exp
    (92) Exp -> . Exp LB Exp RB
    (93) Exp -> . Exp DOT ID
    (94) Exp -> . PrefixedExp
    (95) Exp -> . FuncCall
    (53) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (57) FlowCtrl -> . IF LP Exp RP Stmt
    (58) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (59) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (72) PrefixedExp -> . MINUS Exp
    (73) PrefixedExp -> . NOT Exp
    (74) PrefixedExp -> . PLUS Exp
    (75) PrefixedExp -> . STAR Exp
    (76) PrefixedExp -> . PLUSSLF Exp
    (77) PrefixedExp -> . SUBSLF Exp
    (78) PrefixedExp -> . LP TYPE RP Exp
    (96) FuncCall -> . ID LP Args RP
    (97) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 53
    ID              shift and go to state 59
    NUMBER          shift and go to state 60
    DECIMAL         shift and go to state 61
    STRINGLITERAL   shift and go to state 62
    ;               shift and go to state 17
    IF              shift and go to state 68
    WHILE           shift and go to state 69
    (               shift and go to state 36
    PLUSSLF         shift and go to state 71
    SUBSLF          shift and go to state 72
    {               shift and go to state 25
    -               shift and go to state 73
    !               shift and go to state 74
    +               shift and go to state 75
    *               shift and go to state 76

    LP                             shift and go to state 58
    Exp                            shift and go to state 54
    Stmt                           shift and go to state 159
    SEMI                           shift and go to state 55
    CompSt                         shift and go to state 56
    FlowCtrl                       shift and go to state 57
    PLUS                           shift and go to state 63
    MINUS                          shift and go to state 64
    STAR                           shift and go to state 65
    PrefixedExp                    shift and go to state 66
    FuncCall                       shift and go to state 67
    LC                             shift and go to state 24
    NOT                            shift and go to state 70

state 159

    (58) FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .

    RETURN          reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ID              reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    NUMBER          reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    DECIMAL         reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    STRINGLITERAL   reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ;               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    IF              reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    WHILE           reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    (               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    PLUSSLF         reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    SUBSLF          reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    {               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    -               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    !               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    +               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    *               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    }               reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ELSE            reduce using rule 58 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for = in state 117 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 117 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 117 resolved as shift
WARNING: shift/reduce conflict for > in state 117 resolved as shift
WARNING: shift/reduce conflict for < in state 117 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 117 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for + in state 117 resolved as shift
WARNING: shift/reduce conflict for - in state 117 resolved as shift
WARNING: shift/reduce conflict for * in state 117 resolved as shift
WARNING: shift/reduce conflict for / in state 117 resolved as shift
WARNING: shift/reduce conflict for [ in state 117 resolved as shift
WARNING: shift/reduce conflict for . in state 117 resolved as shift
WARNING: shift/reduce conflict for = in state 118 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 118 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 118 resolved as shift
WARNING: shift/reduce conflict for > in state 118 resolved as shift
WARNING: shift/reduce conflict for < in state 118 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 118 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 118 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for + in state 118 resolved as shift
WARNING: shift/reduce conflict for - in state 118 resolved as shift
WARNING: shift/reduce conflict for * in state 118 resolved as shift
WARNING: shift/reduce conflict for / in state 118 resolved as shift
WARNING: shift/reduce conflict for [ in state 118 resolved as shift
WARNING: shift/reduce conflict for . in state 118 resolved as shift
WARNING: shift/reduce conflict for = in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 119 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 119 resolved as shift
WARNING: shift/reduce conflict for > in state 119 resolved as shift
WARNING: shift/reduce conflict for < in state 119 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 119 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 119 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 119 resolved as shift
WARNING: shift/reduce conflict for + in state 119 resolved as shift
WARNING: shift/reduce conflict for - in state 119 resolved as shift
WARNING: shift/reduce conflict for * in state 119 resolved as shift
WARNING: shift/reduce conflict for / in state 119 resolved as shift
WARNING: shift/reduce conflict for [ in state 119 resolved as shift
WARNING: shift/reduce conflict for . in state 119 resolved as shift
WARNING: shift/reduce conflict for = in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 122 resolved as shift
WARNING: shift/reduce conflict for > in state 122 resolved as shift
WARNING: shift/reduce conflict for < in state 122 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 122 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for + in state 122 resolved as shift
WARNING: shift/reduce conflict for - in state 122 resolved as shift
WARNING: shift/reduce conflict for * in state 122 resolved as shift
WARNING: shift/reduce conflict for / in state 122 resolved as shift
WARNING: shift/reduce conflict for [ in state 122 resolved as shift
WARNING: shift/reduce conflict for . in state 122 resolved as shift
WARNING: shift/reduce conflict for = in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 123 resolved as shift
WARNING: shift/reduce conflict for > in state 123 resolved as shift
WARNING: shift/reduce conflict for < in state 123 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 123 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for + in state 123 resolved as shift
WARNING: shift/reduce conflict for - in state 123 resolved as shift
WARNING: shift/reduce conflict for * in state 123 resolved as shift
WARNING: shift/reduce conflict for / in state 123 resolved as shift
WARNING: shift/reduce conflict for [ in state 123 resolved as shift
WARNING: shift/reduce conflict for . in state 123 resolved as shift
WARNING: shift/reduce conflict for = in state 124 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 124 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 124 resolved as shift
WARNING: shift/reduce conflict for > in state 124 resolved as shift
WARNING: shift/reduce conflict for < in state 124 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 124 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 124 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 124 resolved as shift
WARNING: shift/reduce conflict for + in state 124 resolved as shift
WARNING: shift/reduce conflict for - in state 124 resolved as shift
WARNING: shift/reduce conflict for * in state 124 resolved as shift
WARNING: shift/reduce conflict for / in state 124 resolved as shift
WARNING: shift/reduce conflict for [ in state 124 resolved as shift
WARNING: shift/reduce conflict for . in state 124 resolved as shift
WARNING: shift/reduce conflict for = in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 131 resolved as shift
WARNING: shift/reduce conflict for > in state 131 resolved as shift
WARNING: shift/reduce conflict for < in state 131 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 131 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 131 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for + in state 131 resolved as shift
WARNING: shift/reduce conflict for - in state 131 resolved as shift
WARNING: shift/reduce conflict for * in state 131 resolved as shift
WARNING: shift/reduce conflict for / in state 131 resolved as shift
WARNING: shift/reduce conflict for [ in state 131 resolved as shift
WARNING: shift/reduce conflict for . in state 131 resolved as shift
WARNING: shift/reduce conflict for = in state 132 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 132 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 132 resolved as shift
WARNING: shift/reduce conflict for > in state 132 resolved as shift
WARNING: shift/reduce conflict for < in state 132 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 132 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for + in state 132 resolved as shift
WARNING: shift/reduce conflict for - in state 132 resolved as shift
WARNING: shift/reduce conflict for * in state 132 resolved as shift
WARNING: shift/reduce conflict for / in state 132 resolved as shift
WARNING: shift/reduce conflict for [ in state 132 resolved as shift
WARNING: shift/reduce conflict for . in state 132 resolved as shift
WARNING: shift/reduce conflict for = in state 133 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 133 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 133 resolved as shift
WARNING: shift/reduce conflict for > in state 133 resolved as shift
WARNING: shift/reduce conflict for < in state 133 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 133 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for + in state 133 resolved as shift
WARNING: shift/reduce conflict for - in state 133 resolved as shift
WARNING: shift/reduce conflict for * in state 133 resolved as shift
WARNING: shift/reduce conflict for / in state 133 resolved as shift
WARNING: shift/reduce conflict for [ in state 133 resolved as shift
WARNING: shift/reduce conflict for . in state 133 resolved as shift
WARNING: shift/reduce conflict for = in state 134 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 134 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 134 resolved as shift
WARNING: shift/reduce conflict for > in state 134 resolved as shift
WARNING: shift/reduce conflict for < in state 134 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 134 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 134 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for + in state 134 resolved as shift
WARNING: shift/reduce conflict for - in state 134 resolved as shift
WARNING: shift/reduce conflict for * in state 134 resolved as shift
WARNING: shift/reduce conflict for / in state 134 resolved as shift
WARNING: shift/reduce conflict for [ in state 134 resolved as shift
WARNING: shift/reduce conflict for . in state 134 resolved as shift
WARNING: shift/reduce conflict for = in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 135 resolved as shift
WARNING: shift/reduce conflict for > in state 135 resolved as shift
WARNING: shift/reduce conflict for < in state 135 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 135 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 135 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for + in state 135 resolved as shift
WARNING: shift/reduce conflict for - in state 135 resolved as shift
WARNING: shift/reduce conflict for * in state 135 resolved as shift
WARNING: shift/reduce conflict for / in state 135 resolved as shift
WARNING: shift/reduce conflict for [ in state 135 resolved as shift
WARNING: shift/reduce conflict for . in state 135 resolved as shift
WARNING: shift/reduce conflict for = in state 136 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 136 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 136 resolved as shift
WARNING: shift/reduce conflict for > in state 136 resolved as shift
WARNING: shift/reduce conflict for < in state 136 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for + in state 136 resolved as shift
WARNING: shift/reduce conflict for - in state 136 resolved as shift
WARNING: shift/reduce conflict for * in state 136 resolved as shift
WARNING: shift/reduce conflict for / in state 136 resolved as shift
WARNING: shift/reduce conflict for [ in state 136 resolved as shift
WARNING: shift/reduce conflict for . in state 136 resolved as shift
WARNING: shift/reduce conflict for = in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 137 resolved as shift
WARNING: shift/reduce conflict for > in state 137 resolved as shift
WARNING: shift/reduce conflict for < in state 137 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for + in state 137 resolved as shift
WARNING: shift/reduce conflict for - in state 137 resolved as shift
WARNING: shift/reduce conflict for * in state 137 resolved as shift
WARNING: shift/reduce conflict for / in state 137 resolved as shift
WARNING: shift/reduce conflict for [ in state 137 resolved as shift
WARNING: shift/reduce conflict for . in state 137 resolved as shift
WARNING: shift/reduce conflict for = in state 138 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 138 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 138 resolved as shift
WARNING: shift/reduce conflict for > in state 138 resolved as shift
WARNING: shift/reduce conflict for < in state 138 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 138 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 138 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 138 resolved as shift
WARNING: shift/reduce conflict for + in state 138 resolved as shift
WARNING: shift/reduce conflict for - in state 138 resolved as shift
WARNING: shift/reduce conflict for * in state 138 resolved as shift
WARNING: shift/reduce conflict for / in state 138 resolved as shift
WARNING: shift/reduce conflict for [ in state 138 resolved as shift
WARNING: shift/reduce conflict for . in state 138 resolved as shift
WARNING: shift/reduce conflict for = in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 150 resolved as shift
WARNING: shift/reduce conflict for > in state 150 resolved as shift
WARNING: shift/reduce conflict for < in state 150 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 150 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for + in state 150 resolved as shift
WARNING: shift/reduce conflict for - in state 150 resolved as shift
WARNING: shift/reduce conflict for * in state 150 resolved as shift
WARNING: shift/reduce conflict for / in state 150 resolved as shift
WARNING: shift/reduce conflict for [ in state 150 resolved as shift
WARNING: shift/reduce conflict for . in state 150 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 156 resolved as shift
