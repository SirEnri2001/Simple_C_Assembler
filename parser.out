Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ANDASSIGN
    AUTO
    BREAK
    CASE
    CHAR
    CONST
    CONTINUE
    DEFAULT
    DIVIDEASSIGN
    DO
    DOUBLE
    ENUM
    EXTERN
    FOR
    GOTO
    LONG
    LSHIFT
    LSHIFTASSIGN
    MODASSIGN
    MULASSIGN
    ORASSIGN
    PLUSASSIGN
    REGISTER
    RSHIFT
    RSHIFTASSIGN
    SHORT
    SIGNED
    SIZEOF
    STATIC
    SUBASSIGN
    SWITCH
    TYPEDEF
    UNION
    UNSIGNED
    VOID
    VOLATILE
    XORASSIGN

Grammar

Rule 0     S' -> Program
Rule 1     EMPTY -> <empty>
Rule 2     SEMI -> ;
Rule 3     COMMA -> ,
Rule 4     ASSIGNOP -> =
Rule 5     RELOP -> >
Rule 6     RELOP -> <
Rule 7     RELOP -> GRTREQL
Rule 8     RELOP -> LESSEQL
Rule 9     RELOP -> EQUAL
Rule 10    RELOP -> NEQUAL
Rule 11    PLUS -> +
Rule 12    MINUS -> -
Rule 13    STAR -> *
Rule 14    DIV -> /
Rule 15    AND -> BOOLAND
Rule 16    OR -> BOOLOR
Rule 17    DOT -> .
Rule 18    NOT -> !
Rule 19    TYPE -> INT
Rule 20    TYPE -> FLOAT
Rule 21    LP -> (
Rule 22    RP -> )
Rule 23    LB -> [
Rule 24    RB -> ]
Rule 25    LC -> {
Rule 26    RC -> }
Rule 27    Program -> ExtDefList
Rule 28    ExtDefList -> ExtDef ExtDefList
Rule 29    ExtDefList -> EMPTY
Rule 30    FunHead -> Specifier FunDec
Rule 31    ExtDef -> Specifier ExtDecList SEMI
Rule 32    ExtDef -> Specifier SEMI
Rule 33    ExtDef -> FunHead CompSt
Rule 34    ExtDecList -> VarDec
Rule 35    ExtDecList -> VarDec COMMA ExtDecList
Rule 36    ExtDecList -> FunDec
Rule 37    ExtDecList -> FunDec COMMA ExtDecList
Rule 38    Specifier -> TYPE
Rule 39    Specifier -> StructSpecifier
Rule 40    StructSpecifier -> STRUCT OptTag LC DefList RC
Rule 41    StructSpecifier -> STRUCT Tag
Rule 42    OptTag -> ID
Rule 43    OptTag -> EMPTY
Rule 44    Tag -> ID
Rule 45    VarDec -> ID
Rule 46    VarDec -> VarDec LB NUMBER RB
Rule 47    FunDec -> ID LP VarList RP
Rule 48    FunDec -> ID LP RP
Rule 49    VarList -> ParamDec COMMA VarList
Rule 50    VarList -> ParamDec
Rule 51    ParamDec -> Specifier VarDec
Rule 52    CompSt -> LC DefList StmtList RC
Rule 53    StmtList -> Stmt StmtList
Rule 54    StmtList -> EMPTY
Rule 55    Stmt -> RETURN Exp SEMI
Rule 56    FlowCtrl -> IF LP Exp RP Stmt
Rule 57    FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt
Rule 58    FlowCtrl -> WHILE LP Exp RP Stmt
Rule 59    Stmt -> Exp SEMI
Rule 60    Stmt -> CompSt
Rule 61    Stmt -> SEMI
Rule 62    Stmt -> FlowCtrl
Rule 63    DefList -> Def DefList
Rule 64    DefList -> EMPTY
Rule 65    Def -> Specifier DecList SEMI
Rule 66    DecList -> Dec
Rule 67    DecList -> Dec COMMA DecList
Rule 68    Dec -> VarDec
Rule 69    Dec -> VarDec ASSIGNOP Exp
Rule 70    PrefixedExp -> MINUS Exp
Rule 71    PrefixedExp -> NOT Exp
Rule 72    PrefixedExp -> PLUS Exp
Rule 73    PrefixedExp -> STAR Exp
Rule 74    PrefixedExp -> PLUSSLF Exp
Rule 75    PrefixedExp -> SUBSLF Exp
Rule 76    PrefixedExp -> LP TYPE RP Exp
Rule 77    Exp -> LP Exp RP
Rule 78    Exp -> ID
Rule 79    Exp -> NUMBER
Rule 80    Exp -> DECIMAL
Rule 81    Exp -> STRINGLITERAL
Rule 82    Exp -> Exp ASSIGNOP Exp
Rule 83    Exp -> Exp AND Exp
Rule 84    Exp -> Exp OR Exp
Rule 85    Exp -> Exp RELOP Exp
Rule 86    Exp -> Exp PLUS Exp
Rule 87    Exp -> Exp MINUS Exp
Rule 88    Exp -> Exp STAR Exp
Rule 89    Exp -> Exp DIV Exp
Rule 90    Exp -> Exp LB Exp RB
Rule 91    Exp -> Exp DOT ID
Rule 92    Exp -> PrefixedExp
Rule 93    Exp -> FuncCall
Rule 94    FuncCall -> ID LP Args RP
Rule 95    FuncCall -> ID LP RP
Rule 96    Args -> Exp COMMA Args
Rule 97    Args -> Exp

Terminals, with rules where they appear

!                    : 18
(                    : 21
)                    : 22
*                    : 13
+                    : 11
,                    : 3
-                    : 12
.                    : 17
/                    : 14
;                    : 2
<                    : 6
=                    : 4
>                    : 5
ANDASSIGN            : 
AUTO                 : 
BOOLAND              : 15
BOOLOR               : 16
BREAK                : 
CASE                 : 
CHAR                 : 
CONST                : 
CONTINUE             : 
DECIMAL              : 80
DEFAULT              : 
DIVIDEASSIGN         : 
DO                   : 
DOUBLE               : 
ELSE                 : 57
ENUM                 : 
EQUAL                : 9
EXTERN               : 
FLOAT                : 20
FOR                  : 
GOTO                 : 
GRTREQL              : 7
ID                   : 42 44 45 47 48 78 91 94 95
IF                   : 56 57
INT                  : 19
LESSEQL              : 8
LONG                 : 
LSHIFT               : 
LSHIFTASSIGN         : 
MODASSIGN            : 
MULASSIGN            : 
NEQUAL               : 10
NUMBER               : 46 79
ORASSIGN             : 
PLUSASSIGN           : 
PLUSSLF              : 74
REGISTER             : 
RETURN               : 55
RSHIFT               : 
RSHIFTASSIGN         : 
SHORT                : 
SIGNED               : 
SIZEOF               : 
STATIC               : 
STRINGLITERAL        : 81
STRUCT               : 40 41
SUBASSIGN            : 
SUBSLF               : 75
SWITCH               : 
TYPEDEF              : 
UNION                : 
UNSIGNED             : 
VOID                 : 
VOLATILE             : 
WHILE                : 58
XORASSIGN            : 
[                    : 23
]                    : 24
error                : 
{                    : 25
}                    : 26

Nonterminals, with rules where they appear

AND                  : 83
ASSIGNOP             : 69 82
Args                 : 94 96
COMMA                : 35 37 49 67 96
CompSt               : 33 60
DIV                  : 89
DOT                  : 91
Dec                  : 66 67
DecList              : 65 67
Def                  : 63
DefList              : 40 52 63
EMPTY                : 29 43 54 64
Exp                  : 55 56 57 58 59 69 70 71 72 73 74 75 76 77 82 82 83 83 84 84 85 85 86 86 87 87 88 88 89 89 90 90 91 96 97
ExtDecList           : 31 35 37
ExtDef               : 28
ExtDefList           : 27 28
FlowCtrl             : 62
FunDec               : 30 36 37
FunHead              : 33
FuncCall             : 93
LB                   : 46 90
LC                   : 40 52
LP                   : 47 48 56 57 58 76 77 94 95
MINUS                : 70 87
NOT                  : 71
OR                   : 84
OptTag               : 40
PLUS                 : 72 86
ParamDec             : 49 50
PrefixedExp          : 92
Program              : 0
RB                   : 46 90
RC                   : 40 52
RELOP                : 85
RP                   : 47 48 56 57 58 76 77 94 95
SEMI                 : 31 32 55 59 61 65
STAR                 : 73 88
Specifier            : 30 31 32 51 65
Stmt                 : 53 56 57 57 58
StmtList             : 52 53
StructSpecifier      : 39
TYPE                 : 38 76
Tag                  : 41
VarDec               : 34 35 46 51 68 69
VarList              : 47 49

Parsing method: LALR

state 0

    (0) S' -> . Program
    (27) Program -> . ExtDefList
    (28) ExtDefList -> . ExtDef ExtDefList
    (29) ExtDefList -> . EMPTY
    (31) ExtDef -> . Specifier ExtDecList SEMI
    (32) ExtDef -> . Specifier SEMI
    (33) ExtDef -> . FunHead CompSt
    (1) EMPTY -> .
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (30) FunHead -> . Specifier FunDec
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    $end            reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    Program                        shift and go to state 1
    ExtDefList                     shift and go to state 2
    ExtDef                         shift and go to state 3
    EMPTY                          shift and go to state 4
    Specifier                      shift and go to state 5
    FunHead                        shift and go to state 6
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 1

    (0) S' -> Program .



state 2

    (27) Program -> ExtDefList .

    $end            reduce using rule 27 (Program -> ExtDefList .)


state 3

    (28) ExtDefList -> ExtDef . ExtDefList
    (28) ExtDefList -> . ExtDef ExtDefList
    (29) ExtDefList -> . EMPTY
    (31) ExtDef -> . Specifier ExtDecList SEMI
    (32) ExtDef -> . Specifier SEMI
    (33) ExtDef -> . FunHead CompSt
    (1) EMPTY -> .
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (30) FunHead -> . Specifier FunDec
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    $end            reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    ExtDef                         shift and go to state 3
    ExtDefList                     shift and go to state 12
    EMPTY                          shift and go to state 4
    Specifier                      shift and go to state 5
    FunHead                        shift and go to state 6
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 4

    (29) ExtDefList -> EMPTY .

    $end            reduce using rule 29 (ExtDefList -> EMPTY .)


state 5

    (31) ExtDef -> Specifier . ExtDecList SEMI
    (32) ExtDef -> Specifier . SEMI
    (30) FunHead -> Specifier . FunDec
    (34) ExtDecList -> . VarDec
    (35) ExtDecList -> . VarDec COMMA ExtDecList
    (36) ExtDecList -> . FunDec
    (37) ExtDecList -> . FunDec COMMA ExtDecList
    (2) SEMI -> . ;
    (47) FunDec -> . ID LP VarList RP
    (48) FunDec -> . ID LP RP
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB

    ;               shift and go to state 17
    ID              shift and go to state 18

    ExtDecList                     shift and go to state 13
    SEMI                           shift and go to state 14
    FunDec                         shift and go to state 15
    VarDec                         shift and go to state 16

state 6

    (33) ExtDef -> FunHead . CompSt
    (52) CompSt -> . LC DefList StmtList RC
    (25) LC -> . {

    {               shift and go to state 21

    CompSt                         shift and go to state 19
    LC                             shift and go to state 20

state 7

    (38) Specifier -> TYPE .

    ;               reduce using rule 38 (Specifier -> TYPE .)
    ID              reduce using rule 38 (Specifier -> TYPE .)


state 8

    (39) Specifier -> StructSpecifier .

    ;               reduce using rule 39 (Specifier -> StructSpecifier .)
    ID              reduce using rule 39 (Specifier -> StructSpecifier .)


state 9

    (19) TYPE -> INT .

    ;               reduce using rule 19 (TYPE -> INT .)
    ID              reduce using rule 19 (TYPE -> INT .)
    )               reduce using rule 19 (TYPE -> INT .)


state 10

    (20) TYPE -> FLOAT .

    ;               reduce using rule 20 (TYPE -> FLOAT .)
    ID              reduce using rule 20 (TYPE -> FLOAT .)
    )               reduce using rule 20 (TYPE -> FLOAT .)


state 11

    (40) StructSpecifier -> STRUCT . OptTag LC DefList RC
    (41) StructSpecifier -> STRUCT . Tag
    (42) OptTag -> . ID
    (43) OptTag -> . EMPTY
    (44) Tag -> . ID
    (1) EMPTY -> .

    ID              shift and go to state 24
    {               reduce using rule 1 (EMPTY -> .)

    OptTag                         shift and go to state 22
    Tag                            shift and go to state 23
    EMPTY                          shift and go to state 25

state 12

    (28) ExtDefList -> ExtDef ExtDefList .

    $end            reduce using rule 28 (ExtDefList -> ExtDef ExtDefList .)


state 13

    (31) ExtDef -> Specifier ExtDecList . SEMI
    (2) SEMI -> . ;

    ;               shift and go to state 17

    SEMI                           shift and go to state 26

state 14

    (32) ExtDef -> Specifier SEMI .

    INT             reduce using rule 32 (ExtDef -> Specifier SEMI .)
    FLOAT           reduce using rule 32 (ExtDef -> Specifier SEMI .)
    STRUCT          reduce using rule 32 (ExtDef -> Specifier SEMI .)
    $end            reduce using rule 32 (ExtDef -> Specifier SEMI .)


state 15

    (30) FunHead -> Specifier FunDec .
    (36) ExtDecList -> FunDec .
    (37) ExtDecList -> FunDec . COMMA ExtDecList
    (3) COMMA -> . ,

    {               reduce using rule 30 (FunHead -> Specifier FunDec .)
    ;               reduce using rule 36 (ExtDecList -> FunDec .)
    ,               shift and go to state 28

    COMMA                          shift and go to state 27

state 16

    (34) ExtDecList -> VarDec .
    (35) ExtDecList -> VarDec . COMMA ExtDecList
    (46) VarDec -> VarDec . LB NUMBER RB
    (3) COMMA -> . ,
    (23) LB -> . [

    ;               reduce using rule 34 (ExtDecList -> VarDec .)
    ,               shift and go to state 28
    [               shift and go to state 31

    COMMA                          shift and go to state 29
    LB                             shift and go to state 30

state 17

    (2) SEMI -> ; .

    INT             reduce using rule 2 (SEMI -> ; .)
    FLOAT           reduce using rule 2 (SEMI -> ; .)
    STRUCT          reduce using rule 2 (SEMI -> ; .)
    $end            reduce using rule 2 (SEMI -> ; .)
    RETURN          reduce using rule 2 (SEMI -> ; .)
    ID              reduce using rule 2 (SEMI -> ; .)
    NUMBER          reduce using rule 2 (SEMI -> ; .)
    DECIMAL         reduce using rule 2 (SEMI -> ; .)
    STRINGLITERAL   reduce using rule 2 (SEMI -> ; .)
    ;               reduce using rule 2 (SEMI -> ; .)
    IF              reduce using rule 2 (SEMI -> ; .)
    WHILE           reduce using rule 2 (SEMI -> ; .)
    (               reduce using rule 2 (SEMI -> ; .)
    PLUSSLF         reduce using rule 2 (SEMI -> ; .)
    SUBSLF          reduce using rule 2 (SEMI -> ; .)
    {               reduce using rule 2 (SEMI -> ; .)
    -               reduce using rule 2 (SEMI -> ; .)
    !               reduce using rule 2 (SEMI -> ; .)
    +               reduce using rule 2 (SEMI -> ; .)
    *               reduce using rule 2 (SEMI -> ; .)
    }               reduce using rule 2 (SEMI -> ; .)
    ELSE            reduce using rule 2 (SEMI -> ; .)


state 18

    (47) FunDec -> ID . LP VarList RP
    (48) FunDec -> ID . LP RP
    (45) VarDec -> ID .
    (21) LP -> . (

    ,               reduce using rule 45 (VarDec -> ID .)
    [               reduce using rule 45 (VarDec -> ID .)
    ;               reduce using rule 45 (VarDec -> ID .)
    (               shift and go to state 33

    LP                             shift and go to state 32

state 19

    (33) ExtDef -> FunHead CompSt .

    INT             reduce using rule 33 (ExtDef -> FunHead CompSt .)
    FLOAT           reduce using rule 33 (ExtDef -> FunHead CompSt .)
    STRUCT          reduce using rule 33 (ExtDef -> FunHead CompSt .)
    $end            reduce using rule 33 (ExtDef -> FunHead CompSt .)


state 20

    (52) CompSt -> LC . DefList StmtList RC
    (63) DefList -> . Def DefList
    (64) DefList -> . EMPTY
    (65) Def -> . Specifier DecList SEMI
    (1) EMPTY -> .
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    RETURN          reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    NUMBER          reduce using rule 1 (EMPTY -> .)
    DECIMAL         reduce using rule 1 (EMPTY -> .)
    STRINGLITERAL   reduce using rule 1 (EMPTY -> .)
    ;               reduce using rule 1 (EMPTY -> .)
    IF              reduce using rule 1 (EMPTY -> .)
    WHILE           reduce using rule 1 (EMPTY -> .)
    (               reduce using rule 1 (EMPTY -> .)
    PLUSSLF         reduce using rule 1 (EMPTY -> .)
    SUBSLF          reduce using rule 1 (EMPTY -> .)
    {               reduce using rule 1 (EMPTY -> .)
    -               reduce using rule 1 (EMPTY -> .)
    !               reduce using rule 1 (EMPTY -> .)
    +               reduce using rule 1 (EMPTY -> .)
    *               reduce using rule 1 (EMPTY -> .)
    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    DefList                        shift and go to state 34
    Def                            shift and go to state 35
    EMPTY                          shift and go to state 36
    Specifier                      shift and go to state 37
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 21

    (25) LC -> { .

    INT             reduce using rule 25 (LC -> { .)
    FLOAT           reduce using rule 25 (LC -> { .)
    STRUCT          reduce using rule 25 (LC -> { .)
    RETURN          reduce using rule 25 (LC -> { .)
    ID              reduce using rule 25 (LC -> { .)
    NUMBER          reduce using rule 25 (LC -> { .)
    DECIMAL         reduce using rule 25 (LC -> { .)
    STRINGLITERAL   reduce using rule 25 (LC -> { .)
    ;               reduce using rule 25 (LC -> { .)
    IF              reduce using rule 25 (LC -> { .)
    WHILE           reduce using rule 25 (LC -> { .)
    (               reduce using rule 25 (LC -> { .)
    PLUSSLF         reduce using rule 25 (LC -> { .)
    SUBSLF          reduce using rule 25 (LC -> { .)
    {               reduce using rule 25 (LC -> { .)
    -               reduce using rule 25 (LC -> { .)
    !               reduce using rule 25 (LC -> { .)
    +               reduce using rule 25 (LC -> { .)
    *               reduce using rule 25 (LC -> { .)
    }               reduce using rule 25 (LC -> { .)


state 22

    (40) StructSpecifier -> STRUCT OptTag . LC DefList RC
    (25) LC -> . {

    {               shift and go to state 21

    LC                             shift and go to state 38

state 23

    (41) StructSpecifier -> STRUCT Tag .

    ;               reduce using rule 41 (StructSpecifier -> STRUCT Tag .)
    ID              reduce using rule 41 (StructSpecifier -> STRUCT Tag .)


state 24

    (42) OptTag -> ID .
    (44) Tag -> ID .

    {               reduce using rule 42 (OptTag -> ID .)
    ;               reduce using rule 44 (Tag -> ID .)
    ID              reduce using rule 44 (Tag -> ID .)


state 25

    (43) OptTag -> EMPTY .

    {               reduce using rule 43 (OptTag -> EMPTY .)


state 26

    (31) ExtDef -> Specifier ExtDecList SEMI .

    INT             reduce using rule 31 (ExtDef -> Specifier ExtDecList SEMI .)
    FLOAT           reduce using rule 31 (ExtDef -> Specifier ExtDecList SEMI .)
    STRUCT          reduce using rule 31 (ExtDef -> Specifier ExtDecList SEMI .)
    $end            reduce using rule 31 (ExtDef -> Specifier ExtDecList SEMI .)


state 27

    (37) ExtDecList -> FunDec COMMA . ExtDecList
    (34) ExtDecList -> . VarDec
    (35) ExtDecList -> . VarDec COMMA ExtDecList
    (36) ExtDecList -> . FunDec
    (37) ExtDecList -> . FunDec COMMA ExtDecList
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB
    (47) FunDec -> . ID LP VarList RP
    (48) FunDec -> . ID LP RP

    ID              shift and go to state 41

    FunDec                         shift and go to state 39
    ExtDecList                     shift and go to state 40
    VarDec                         shift and go to state 16

state 28

    (3) COMMA -> , .

    ID              reduce using rule 3 (COMMA -> , .)
    INT             reduce using rule 3 (COMMA -> , .)
    FLOAT           reduce using rule 3 (COMMA -> , .)
    STRUCT          reduce using rule 3 (COMMA -> , .)
    NUMBER          reduce using rule 3 (COMMA -> , .)
    DECIMAL         reduce using rule 3 (COMMA -> , .)
    STRINGLITERAL   reduce using rule 3 (COMMA -> , .)
    (               reduce using rule 3 (COMMA -> , .)
    PLUSSLF         reduce using rule 3 (COMMA -> , .)
    SUBSLF          reduce using rule 3 (COMMA -> , .)
    -               reduce using rule 3 (COMMA -> , .)
    !               reduce using rule 3 (COMMA -> , .)
    +               reduce using rule 3 (COMMA -> , .)
    *               reduce using rule 3 (COMMA -> , .)


state 29

    (35) ExtDecList -> VarDec COMMA . ExtDecList
    (34) ExtDecList -> . VarDec
    (35) ExtDecList -> . VarDec COMMA ExtDecList
    (36) ExtDecList -> . FunDec
    (37) ExtDecList -> . FunDec COMMA ExtDecList
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB
    (47) FunDec -> . ID LP VarList RP
    (48) FunDec -> . ID LP RP

    ID              shift and go to state 41

    VarDec                         shift and go to state 16
    ExtDecList                     shift and go to state 42
    FunDec                         shift and go to state 39

state 30

    (46) VarDec -> VarDec LB . NUMBER RB

    NUMBER          shift and go to state 43


state 31

    (23) LB -> [ .

    NUMBER          reduce using rule 23 (LB -> [ .)
    ID              reduce using rule 23 (LB -> [ .)
    DECIMAL         reduce using rule 23 (LB -> [ .)
    STRINGLITERAL   reduce using rule 23 (LB -> [ .)
    (               reduce using rule 23 (LB -> [ .)
    PLUSSLF         reduce using rule 23 (LB -> [ .)
    SUBSLF          reduce using rule 23 (LB -> [ .)
    -               reduce using rule 23 (LB -> [ .)
    !               reduce using rule 23 (LB -> [ .)
    +               reduce using rule 23 (LB -> [ .)
    *               reduce using rule 23 (LB -> [ .)


state 32

    (47) FunDec -> ID LP . VarList RP
    (48) FunDec -> ID LP . RP
    (49) VarList -> . ParamDec COMMA VarList
    (50) VarList -> . ParamDec
    (22) RP -> . )
    (51) ParamDec -> . Specifier VarDec
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    )               shift and go to state 47
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    VarList                        shift and go to state 44
    RP                             shift and go to state 45
    ParamDec                       shift and go to state 46
    Specifier                      shift and go to state 48
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 33

    (21) LP -> ( .

    )               reduce using rule 21 (LP -> ( .)
    INT             reduce using rule 21 (LP -> ( .)
    FLOAT           reduce using rule 21 (LP -> ( .)
    STRUCT          reduce using rule 21 (LP -> ( .)
    ID              reduce using rule 21 (LP -> ( .)
    NUMBER          reduce using rule 21 (LP -> ( .)
    DECIMAL         reduce using rule 21 (LP -> ( .)
    STRINGLITERAL   reduce using rule 21 (LP -> ( .)
    (               reduce using rule 21 (LP -> ( .)
    PLUSSLF         reduce using rule 21 (LP -> ( .)
    SUBSLF          reduce using rule 21 (LP -> ( .)
    -               reduce using rule 21 (LP -> ( .)
    !               reduce using rule 21 (LP -> ( .)
    +               reduce using rule 21 (LP -> ( .)
    *               reduce using rule 21 (LP -> ( .)


state 34

    (52) CompSt -> LC DefList . StmtList RC
    (53) StmtList -> . Stmt StmtList
    (54) StmtList -> . EMPTY
    (55) Stmt -> . RETURN Exp SEMI
    (59) Stmt -> . Exp SEMI
    (60) Stmt -> . CompSt
    (61) Stmt -> . SEMI
    (62) Stmt -> . FlowCtrl
    (1) EMPTY -> .
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (52) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (56) FlowCtrl -> . IF LP Exp RP Stmt
    (57) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (58) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 52
    }               reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    ;               shift and go to state 17
    IF              shift and go to state 67
    WHILE           shift and go to state 68
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    {               shift and go to state 21
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LC                             shift and go to state 20
    StmtList                       shift and go to state 49
    Stmt                           shift and go to state 50
    EMPTY                          shift and go to state 51
    Exp                            shift and go to state 53
    SEMI                           shift and go to state 54
    CompSt                         shift and go to state 55
    FlowCtrl                       shift and go to state 56
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 35

    (63) DefList -> Def . DefList
    (63) DefList -> . Def DefList
    (64) DefList -> . EMPTY
    (65) Def -> . Specifier DecList SEMI
    (1) EMPTY -> .
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    RETURN          reduce using rule 1 (EMPTY -> .)
    ID              reduce using rule 1 (EMPTY -> .)
    NUMBER          reduce using rule 1 (EMPTY -> .)
    DECIMAL         reduce using rule 1 (EMPTY -> .)
    STRINGLITERAL   reduce using rule 1 (EMPTY -> .)
    ;               reduce using rule 1 (EMPTY -> .)
    IF              reduce using rule 1 (EMPTY -> .)
    WHILE           reduce using rule 1 (EMPTY -> .)
    (               reduce using rule 1 (EMPTY -> .)
    PLUSSLF         reduce using rule 1 (EMPTY -> .)
    SUBSLF          reduce using rule 1 (EMPTY -> .)
    {               reduce using rule 1 (EMPTY -> .)
    -               reduce using rule 1 (EMPTY -> .)
    !               reduce using rule 1 (EMPTY -> .)
    +               reduce using rule 1 (EMPTY -> .)
    *               reduce using rule 1 (EMPTY -> .)
    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    Def                            shift and go to state 35
    DefList                        shift and go to state 76
    EMPTY                          shift and go to state 36
    Specifier                      shift and go to state 37
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 36

    (64) DefList -> EMPTY .

    RETURN          reduce using rule 64 (DefList -> EMPTY .)
    ID              reduce using rule 64 (DefList -> EMPTY .)
    NUMBER          reduce using rule 64 (DefList -> EMPTY .)
    DECIMAL         reduce using rule 64 (DefList -> EMPTY .)
    STRINGLITERAL   reduce using rule 64 (DefList -> EMPTY .)
    ;               reduce using rule 64 (DefList -> EMPTY .)
    IF              reduce using rule 64 (DefList -> EMPTY .)
    WHILE           reduce using rule 64 (DefList -> EMPTY .)
    (               reduce using rule 64 (DefList -> EMPTY .)
    PLUSSLF         reduce using rule 64 (DefList -> EMPTY .)
    SUBSLF          reduce using rule 64 (DefList -> EMPTY .)
    {               reduce using rule 64 (DefList -> EMPTY .)
    -               reduce using rule 64 (DefList -> EMPTY .)
    !               reduce using rule 64 (DefList -> EMPTY .)
    +               reduce using rule 64 (DefList -> EMPTY .)
    *               reduce using rule 64 (DefList -> EMPTY .)
    }               reduce using rule 64 (DefList -> EMPTY .)


state 37

    (65) Def -> Specifier . DecList SEMI
    (66) DecList -> . Dec
    (67) DecList -> . Dec COMMA DecList
    (68) Dec -> . VarDec
    (69) Dec -> . VarDec ASSIGNOP Exp
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 80

    DecList                        shift and go to state 77
    Dec                            shift and go to state 78
    VarDec                         shift and go to state 79

state 38

    (40) StructSpecifier -> STRUCT OptTag LC . DefList RC
    (63) DefList -> . Def DefList
    (64) DefList -> . EMPTY
    (65) Def -> . Specifier DecList SEMI
    (1) EMPTY -> .
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    }               reduce using rule 1 (EMPTY -> .)
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    DefList                        shift and go to state 81
    Def                            shift and go to state 35
    EMPTY                          shift and go to state 36
    Specifier                      shift and go to state 37
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 39

    (36) ExtDecList -> FunDec .
    (37) ExtDecList -> FunDec . COMMA ExtDecList
    (3) COMMA -> . ,

    ;               reduce using rule 36 (ExtDecList -> FunDec .)
    ,               shift and go to state 28

    COMMA                          shift and go to state 27

state 40

    (37) ExtDecList -> FunDec COMMA ExtDecList .

    ;               reduce using rule 37 (ExtDecList -> FunDec COMMA ExtDecList .)


state 41

    (45) VarDec -> ID .
    (47) FunDec -> ID . LP VarList RP
    (48) FunDec -> ID . LP RP
    (21) LP -> . (

    ,               reduce using rule 45 (VarDec -> ID .)
    [               reduce using rule 45 (VarDec -> ID .)
    ;               reduce using rule 45 (VarDec -> ID .)
    (               shift and go to state 33

    LP                             shift and go to state 32

state 42

    (35) ExtDecList -> VarDec COMMA ExtDecList .

    ;               reduce using rule 35 (ExtDecList -> VarDec COMMA ExtDecList .)


state 43

    (46) VarDec -> VarDec LB NUMBER . RB
    (24) RB -> . ]

    ]               shift and go to state 83

    RB                             shift and go to state 82

state 44

    (47) FunDec -> ID LP VarList . RP
    (22) RP -> . )

    )               shift and go to state 47

    RP                             shift and go to state 84

state 45

    (48) FunDec -> ID LP RP .

    ,               reduce using rule 48 (FunDec -> ID LP RP .)
    {               reduce using rule 48 (FunDec -> ID LP RP .)
    ;               reduce using rule 48 (FunDec -> ID LP RP .)


state 46

    (49) VarList -> ParamDec . COMMA VarList
    (50) VarList -> ParamDec .
    (3) COMMA -> . ,

    )               reduce using rule 50 (VarList -> ParamDec .)
    ,               shift and go to state 28

    COMMA                          shift and go to state 85

state 47

    (22) RP -> ) .

    ,               reduce using rule 22 (RP -> ) .)
    {               reduce using rule 22 (RP -> ) .)
    ;               reduce using rule 22 (RP -> ) .)
    =               reduce using rule 22 (RP -> ) .)
    BOOLAND         reduce using rule 22 (RP -> ) .)
    BOOLOR          reduce using rule 22 (RP -> ) .)
    >               reduce using rule 22 (RP -> ) .)
    <               reduce using rule 22 (RP -> ) .)
    GRTREQL         reduce using rule 22 (RP -> ) .)
    LESSEQL         reduce using rule 22 (RP -> ) .)
    EQUAL           reduce using rule 22 (RP -> ) .)
    NEQUAL          reduce using rule 22 (RP -> ) .)
    +               reduce using rule 22 (RP -> ) .)
    -               reduce using rule 22 (RP -> ) .)
    *               reduce using rule 22 (RP -> ) .)
    /               reduce using rule 22 (RP -> ) .)
    [               reduce using rule 22 (RP -> ) .)
    .               reduce using rule 22 (RP -> ) .)
    )               reduce using rule 22 (RP -> ) .)
    ]               reduce using rule 22 (RP -> ) .)
    ID              reduce using rule 22 (RP -> ) .)
    NUMBER          reduce using rule 22 (RP -> ) .)
    DECIMAL         reduce using rule 22 (RP -> ) .)
    STRINGLITERAL   reduce using rule 22 (RP -> ) .)
    (               reduce using rule 22 (RP -> ) .)
    PLUSSLF         reduce using rule 22 (RP -> ) .)
    SUBSLF          reduce using rule 22 (RP -> ) .)
    !               reduce using rule 22 (RP -> ) .)
    RETURN          reduce using rule 22 (RP -> ) .)
    IF              reduce using rule 22 (RP -> ) .)
    WHILE           reduce using rule 22 (RP -> ) .)


state 48

    (51) ParamDec -> Specifier . VarDec
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 80

    VarDec                         shift and go to state 86

state 49

    (52) CompSt -> LC DefList StmtList . RC
    (26) RC -> . }

    }               shift and go to state 88

    RC                             shift and go to state 87

state 50

    (53) StmtList -> Stmt . StmtList
    (53) StmtList -> . Stmt StmtList
    (54) StmtList -> . EMPTY
    (55) Stmt -> . RETURN Exp SEMI
    (59) Stmt -> . Exp SEMI
    (60) Stmt -> . CompSt
    (61) Stmt -> . SEMI
    (62) Stmt -> . FlowCtrl
    (1) EMPTY -> .
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (52) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (56) FlowCtrl -> . IF LP Exp RP Stmt
    (57) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (58) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 52
    }               reduce using rule 1 (EMPTY -> .)
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    ;               shift and go to state 17
    IF              shift and go to state 67
    WHILE           shift and go to state 68
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    {               shift and go to state 21
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Stmt                           shift and go to state 50
    StmtList                       shift and go to state 89
    EMPTY                          shift and go to state 51
    Exp                            shift and go to state 53
    SEMI                           shift and go to state 54
    CompSt                         shift and go to state 55
    FlowCtrl                       shift and go to state 56
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    LC                             shift and go to state 20
    NOT                            shift and go to state 69

state 51

    (54) StmtList -> EMPTY .

    }               reduce using rule 54 (StmtList -> EMPTY .)


state 52

    (55) Stmt -> RETURN . Exp SEMI
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 90
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 53

    (59) Stmt -> Exp . SEMI
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (2) SEMI -> . ;
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ;               shift and go to state 17
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    SEMI                           shift and go to state 91
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 54

    (61) Stmt -> SEMI .

    RETURN          reduce using rule 61 (Stmt -> SEMI .)
    ID              reduce using rule 61 (Stmt -> SEMI .)
    NUMBER          reduce using rule 61 (Stmt -> SEMI .)
    DECIMAL         reduce using rule 61 (Stmt -> SEMI .)
    STRINGLITERAL   reduce using rule 61 (Stmt -> SEMI .)
    ;               reduce using rule 61 (Stmt -> SEMI .)
    IF              reduce using rule 61 (Stmt -> SEMI .)
    WHILE           reduce using rule 61 (Stmt -> SEMI .)
    (               reduce using rule 61 (Stmt -> SEMI .)
    PLUSSLF         reduce using rule 61 (Stmt -> SEMI .)
    SUBSLF          reduce using rule 61 (Stmt -> SEMI .)
    {               reduce using rule 61 (Stmt -> SEMI .)
    -               reduce using rule 61 (Stmt -> SEMI .)
    !               reduce using rule 61 (Stmt -> SEMI .)
    +               reduce using rule 61 (Stmt -> SEMI .)
    *               reduce using rule 61 (Stmt -> SEMI .)
    }               reduce using rule 61 (Stmt -> SEMI .)
    ELSE            reduce using rule 61 (Stmt -> SEMI .)


state 55

    (60) Stmt -> CompSt .

    RETURN          reduce using rule 60 (Stmt -> CompSt .)
    ID              reduce using rule 60 (Stmt -> CompSt .)
    NUMBER          reduce using rule 60 (Stmt -> CompSt .)
    DECIMAL         reduce using rule 60 (Stmt -> CompSt .)
    STRINGLITERAL   reduce using rule 60 (Stmt -> CompSt .)
    ;               reduce using rule 60 (Stmt -> CompSt .)
    IF              reduce using rule 60 (Stmt -> CompSt .)
    WHILE           reduce using rule 60 (Stmt -> CompSt .)
    (               reduce using rule 60 (Stmt -> CompSt .)
    PLUSSLF         reduce using rule 60 (Stmt -> CompSt .)
    SUBSLF          reduce using rule 60 (Stmt -> CompSt .)
    {               reduce using rule 60 (Stmt -> CompSt .)
    -               reduce using rule 60 (Stmt -> CompSt .)
    !               reduce using rule 60 (Stmt -> CompSt .)
    +               reduce using rule 60 (Stmt -> CompSt .)
    *               reduce using rule 60 (Stmt -> CompSt .)
    }               reduce using rule 60 (Stmt -> CompSt .)
    ELSE            reduce using rule 60 (Stmt -> CompSt .)


state 56

    (62) Stmt -> FlowCtrl .

    RETURN          reduce using rule 62 (Stmt -> FlowCtrl .)
    ID              reduce using rule 62 (Stmt -> FlowCtrl .)
    NUMBER          reduce using rule 62 (Stmt -> FlowCtrl .)
    DECIMAL         reduce using rule 62 (Stmt -> FlowCtrl .)
    STRINGLITERAL   reduce using rule 62 (Stmt -> FlowCtrl .)
    ;               reduce using rule 62 (Stmt -> FlowCtrl .)
    IF              reduce using rule 62 (Stmt -> FlowCtrl .)
    WHILE           reduce using rule 62 (Stmt -> FlowCtrl .)
    (               reduce using rule 62 (Stmt -> FlowCtrl .)
    PLUSSLF         reduce using rule 62 (Stmt -> FlowCtrl .)
    SUBSLF          reduce using rule 62 (Stmt -> FlowCtrl .)
    {               reduce using rule 62 (Stmt -> FlowCtrl .)
    -               reduce using rule 62 (Stmt -> FlowCtrl .)
    !               reduce using rule 62 (Stmt -> FlowCtrl .)
    +               reduce using rule 62 (Stmt -> FlowCtrl .)
    *               reduce using rule 62 (Stmt -> FlowCtrl .)
    }               reduce using rule 62 (Stmt -> FlowCtrl .)
    ELSE            reduce using rule 62 (Stmt -> FlowCtrl .)


state 57

    (77) Exp -> LP . Exp RP
    (76) PrefixedExp -> LP . TYPE RP Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 113
    TYPE                           shift and go to state 114
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 58

    (78) Exp -> ID .
    (94) FuncCall -> ID . LP Args RP
    (95) FuncCall -> ID . LP RP
    (21) LP -> . (

    ;               reduce using rule 78 (Exp -> ID .)
    =               reduce using rule 78 (Exp -> ID .)
    BOOLAND         reduce using rule 78 (Exp -> ID .)
    BOOLOR          reduce using rule 78 (Exp -> ID .)
    >               reduce using rule 78 (Exp -> ID .)
    <               reduce using rule 78 (Exp -> ID .)
    GRTREQL         reduce using rule 78 (Exp -> ID .)
    LESSEQL         reduce using rule 78 (Exp -> ID .)
    EQUAL           reduce using rule 78 (Exp -> ID .)
    NEQUAL          reduce using rule 78 (Exp -> ID .)
    +               reduce using rule 78 (Exp -> ID .)
    -               reduce using rule 78 (Exp -> ID .)
    *               reduce using rule 78 (Exp -> ID .)
    /               reduce using rule 78 (Exp -> ID .)
    [               reduce using rule 78 (Exp -> ID .)
    .               reduce using rule 78 (Exp -> ID .)
    )               reduce using rule 78 (Exp -> ID .)
    ]               reduce using rule 78 (Exp -> ID .)
    ,               reduce using rule 78 (Exp -> ID .)
    (               shift and go to state 33

    LP                             shift and go to state 115

state 59

    (79) Exp -> NUMBER .

    ;               reduce using rule 79 (Exp -> NUMBER .)
    =               reduce using rule 79 (Exp -> NUMBER .)
    BOOLAND         reduce using rule 79 (Exp -> NUMBER .)
    BOOLOR          reduce using rule 79 (Exp -> NUMBER .)
    >               reduce using rule 79 (Exp -> NUMBER .)
    <               reduce using rule 79 (Exp -> NUMBER .)
    GRTREQL         reduce using rule 79 (Exp -> NUMBER .)
    LESSEQL         reduce using rule 79 (Exp -> NUMBER .)
    EQUAL           reduce using rule 79 (Exp -> NUMBER .)
    NEQUAL          reduce using rule 79 (Exp -> NUMBER .)
    +               reduce using rule 79 (Exp -> NUMBER .)
    -               reduce using rule 79 (Exp -> NUMBER .)
    *               reduce using rule 79 (Exp -> NUMBER .)
    /               reduce using rule 79 (Exp -> NUMBER .)
    [               reduce using rule 79 (Exp -> NUMBER .)
    .               reduce using rule 79 (Exp -> NUMBER .)
    )               reduce using rule 79 (Exp -> NUMBER .)
    ]               reduce using rule 79 (Exp -> NUMBER .)
    ,               reduce using rule 79 (Exp -> NUMBER .)


state 60

    (80) Exp -> DECIMAL .

    ;               reduce using rule 80 (Exp -> DECIMAL .)
    =               reduce using rule 80 (Exp -> DECIMAL .)
    BOOLAND         reduce using rule 80 (Exp -> DECIMAL .)
    BOOLOR          reduce using rule 80 (Exp -> DECIMAL .)
    >               reduce using rule 80 (Exp -> DECIMAL .)
    <               reduce using rule 80 (Exp -> DECIMAL .)
    GRTREQL         reduce using rule 80 (Exp -> DECIMAL .)
    LESSEQL         reduce using rule 80 (Exp -> DECIMAL .)
    EQUAL           reduce using rule 80 (Exp -> DECIMAL .)
    NEQUAL          reduce using rule 80 (Exp -> DECIMAL .)
    +               reduce using rule 80 (Exp -> DECIMAL .)
    -               reduce using rule 80 (Exp -> DECIMAL .)
    *               reduce using rule 80 (Exp -> DECIMAL .)
    /               reduce using rule 80 (Exp -> DECIMAL .)
    [               reduce using rule 80 (Exp -> DECIMAL .)
    .               reduce using rule 80 (Exp -> DECIMAL .)
    )               reduce using rule 80 (Exp -> DECIMAL .)
    ]               reduce using rule 80 (Exp -> DECIMAL .)
    ,               reduce using rule 80 (Exp -> DECIMAL .)


state 61

    (81) Exp -> STRINGLITERAL .

    ;               reduce using rule 81 (Exp -> STRINGLITERAL .)
    =               reduce using rule 81 (Exp -> STRINGLITERAL .)
    BOOLAND         reduce using rule 81 (Exp -> STRINGLITERAL .)
    BOOLOR          reduce using rule 81 (Exp -> STRINGLITERAL .)
    >               reduce using rule 81 (Exp -> STRINGLITERAL .)
    <               reduce using rule 81 (Exp -> STRINGLITERAL .)
    GRTREQL         reduce using rule 81 (Exp -> STRINGLITERAL .)
    LESSEQL         reduce using rule 81 (Exp -> STRINGLITERAL .)
    EQUAL           reduce using rule 81 (Exp -> STRINGLITERAL .)
    NEQUAL          reduce using rule 81 (Exp -> STRINGLITERAL .)
    +               reduce using rule 81 (Exp -> STRINGLITERAL .)
    -               reduce using rule 81 (Exp -> STRINGLITERAL .)
    *               reduce using rule 81 (Exp -> STRINGLITERAL .)
    /               reduce using rule 81 (Exp -> STRINGLITERAL .)
    [               reduce using rule 81 (Exp -> STRINGLITERAL .)
    .               reduce using rule 81 (Exp -> STRINGLITERAL .)
    )               reduce using rule 81 (Exp -> STRINGLITERAL .)
    ]               reduce using rule 81 (Exp -> STRINGLITERAL .)
    ,               reduce using rule 81 (Exp -> STRINGLITERAL .)


state 62

    (72) PrefixedExp -> PLUS . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    PLUS                           shift and go to state 62
    Exp                            shift and go to state 116
    LP                             shift and go to state 57
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 63

    (70) PrefixedExp -> MINUS . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    MINUS                          shift and go to state 63
    Exp                            shift and go to state 117
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 64

    (73) PrefixedExp -> STAR . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    STAR                           shift and go to state 64
    Exp                            shift and go to state 118
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 65

    (92) Exp -> PrefixedExp .

    ;               reduce using rule 92 (Exp -> PrefixedExp .)
    =               reduce using rule 92 (Exp -> PrefixedExp .)
    BOOLAND         reduce using rule 92 (Exp -> PrefixedExp .)
    BOOLOR          reduce using rule 92 (Exp -> PrefixedExp .)
    >               reduce using rule 92 (Exp -> PrefixedExp .)
    <               reduce using rule 92 (Exp -> PrefixedExp .)
    GRTREQL         reduce using rule 92 (Exp -> PrefixedExp .)
    LESSEQL         reduce using rule 92 (Exp -> PrefixedExp .)
    EQUAL           reduce using rule 92 (Exp -> PrefixedExp .)
    NEQUAL          reduce using rule 92 (Exp -> PrefixedExp .)
    +               reduce using rule 92 (Exp -> PrefixedExp .)
    -               reduce using rule 92 (Exp -> PrefixedExp .)
    *               reduce using rule 92 (Exp -> PrefixedExp .)
    /               reduce using rule 92 (Exp -> PrefixedExp .)
    [               reduce using rule 92 (Exp -> PrefixedExp .)
    .               reduce using rule 92 (Exp -> PrefixedExp .)
    )               reduce using rule 92 (Exp -> PrefixedExp .)
    ]               reduce using rule 92 (Exp -> PrefixedExp .)
    ,               reduce using rule 92 (Exp -> PrefixedExp .)


state 66

    (93) Exp -> FuncCall .

    ;               reduce using rule 93 (Exp -> FuncCall .)
    =               reduce using rule 93 (Exp -> FuncCall .)
    BOOLAND         reduce using rule 93 (Exp -> FuncCall .)
    BOOLOR          reduce using rule 93 (Exp -> FuncCall .)
    >               reduce using rule 93 (Exp -> FuncCall .)
    <               reduce using rule 93 (Exp -> FuncCall .)
    GRTREQL         reduce using rule 93 (Exp -> FuncCall .)
    LESSEQL         reduce using rule 93 (Exp -> FuncCall .)
    EQUAL           reduce using rule 93 (Exp -> FuncCall .)
    NEQUAL          reduce using rule 93 (Exp -> FuncCall .)
    +               reduce using rule 93 (Exp -> FuncCall .)
    -               reduce using rule 93 (Exp -> FuncCall .)
    *               reduce using rule 93 (Exp -> FuncCall .)
    /               reduce using rule 93 (Exp -> FuncCall .)
    [               reduce using rule 93 (Exp -> FuncCall .)
    .               reduce using rule 93 (Exp -> FuncCall .)
    )               reduce using rule 93 (Exp -> FuncCall .)
    ]               reduce using rule 93 (Exp -> FuncCall .)
    ,               reduce using rule 93 (Exp -> FuncCall .)


state 67

    (56) FlowCtrl -> IF . LP Exp RP Stmt
    (57) FlowCtrl -> IF . LP Exp RP Stmt ELSE Stmt
    (21) LP -> . (

    (               shift and go to state 33

    LP                             shift and go to state 119

state 68

    (58) FlowCtrl -> WHILE . LP Exp RP Stmt
    (21) LP -> . (

    (               shift and go to state 33

    LP                             shift and go to state 120

state 69

    (71) PrefixedExp -> NOT . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    NOT                            shift and go to state 69
    Exp                            shift and go to state 121
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66

state 70

    (74) PrefixedExp -> PLUSSLF . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 122
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 71

    (75) PrefixedExp -> SUBSLF . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 123
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 72

    (12) MINUS -> - .

    ID              reduce using rule 12 (MINUS -> - .)
    NUMBER          reduce using rule 12 (MINUS -> - .)
    DECIMAL         reduce using rule 12 (MINUS -> - .)
    STRINGLITERAL   reduce using rule 12 (MINUS -> - .)
    (               reduce using rule 12 (MINUS -> - .)
    PLUSSLF         reduce using rule 12 (MINUS -> - .)
    SUBSLF          reduce using rule 12 (MINUS -> - .)
    -               reduce using rule 12 (MINUS -> - .)
    !               reduce using rule 12 (MINUS -> - .)
    +               reduce using rule 12 (MINUS -> - .)
    *               reduce using rule 12 (MINUS -> - .)


state 73

    (18) NOT -> ! .

    ID              reduce using rule 18 (NOT -> ! .)
    NUMBER          reduce using rule 18 (NOT -> ! .)
    DECIMAL         reduce using rule 18 (NOT -> ! .)
    STRINGLITERAL   reduce using rule 18 (NOT -> ! .)
    (               reduce using rule 18 (NOT -> ! .)
    PLUSSLF         reduce using rule 18 (NOT -> ! .)
    SUBSLF          reduce using rule 18 (NOT -> ! .)
    -               reduce using rule 18 (NOT -> ! .)
    !               reduce using rule 18 (NOT -> ! .)
    +               reduce using rule 18 (NOT -> ! .)
    *               reduce using rule 18 (NOT -> ! .)


state 74

    (11) PLUS -> + .

    ID              reduce using rule 11 (PLUS -> + .)
    NUMBER          reduce using rule 11 (PLUS -> + .)
    DECIMAL         reduce using rule 11 (PLUS -> + .)
    STRINGLITERAL   reduce using rule 11 (PLUS -> + .)
    (               reduce using rule 11 (PLUS -> + .)
    PLUSSLF         reduce using rule 11 (PLUS -> + .)
    SUBSLF          reduce using rule 11 (PLUS -> + .)
    -               reduce using rule 11 (PLUS -> + .)
    !               reduce using rule 11 (PLUS -> + .)
    +               reduce using rule 11 (PLUS -> + .)
    *               reduce using rule 11 (PLUS -> + .)


state 75

    (13) STAR -> * .

    ID              reduce using rule 13 (STAR -> * .)
    NUMBER          reduce using rule 13 (STAR -> * .)
    DECIMAL         reduce using rule 13 (STAR -> * .)
    STRINGLITERAL   reduce using rule 13 (STAR -> * .)
    (               reduce using rule 13 (STAR -> * .)
    PLUSSLF         reduce using rule 13 (STAR -> * .)
    SUBSLF          reduce using rule 13 (STAR -> * .)
    -               reduce using rule 13 (STAR -> * .)
    !               reduce using rule 13 (STAR -> * .)
    +               reduce using rule 13 (STAR -> * .)
    *               reduce using rule 13 (STAR -> * .)


state 76

    (63) DefList -> Def DefList .

    RETURN          reduce using rule 63 (DefList -> Def DefList .)
    ID              reduce using rule 63 (DefList -> Def DefList .)
    NUMBER          reduce using rule 63 (DefList -> Def DefList .)
    DECIMAL         reduce using rule 63 (DefList -> Def DefList .)
    STRINGLITERAL   reduce using rule 63 (DefList -> Def DefList .)
    ;               reduce using rule 63 (DefList -> Def DefList .)
    IF              reduce using rule 63 (DefList -> Def DefList .)
    WHILE           reduce using rule 63 (DefList -> Def DefList .)
    (               reduce using rule 63 (DefList -> Def DefList .)
    PLUSSLF         reduce using rule 63 (DefList -> Def DefList .)
    SUBSLF          reduce using rule 63 (DefList -> Def DefList .)
    {               reduce using rule 63 (DefList -> Def DefList .)
    -               reduce using rule 63 (DefList -> Def DefList .)
    !               reduce using rule 63 (DefList -> Def DefList .)
    +               reduce using rule 63 (DefList -> Def DefList .)
    *               reduce using rule 63 (DefList -> Def DefList .)
    }               reduce using rule 63 (DefList -> Def DefList .)


state 77

    (65) Def -> Specifier DecList . SEMI
    (2) SEMI -> . ;

    ;               shift and go to state 17

    SEMI                           shift and go to state 124

state 78

    (66) DecList -> Dec .
    (67) DecList -> Dec . COMMA DecList
    (3) COMMA -> . ,

    ;               reduce using rule 66 (DecList -> Dec .)
    ,               shift and go to state 28

    COMMA                          shift and go to state 125

state 79

    (68) Dec -> VarDec .
    (69) Dec -> VarDec . ASSIGNOP Exp
    (46) VarDec -> VarDec . LB NUMBER RB
    (4) ASSIGNOP -> . =
    (23) LB -> . [

    ,               reduce using rule 68 (Dec -> VarDec .)
    ;               reduce using rule 68 (Dec -> VarDec .)
    =               shift and go to state 102
    [               shift and go to state 31

    ASSIGNOP                       shift and go to state 126
    LB                             shift and go to state 30

state 80

    (45) VarDec -> ID .

    =               reduce using rule 45 (VarDec -> ID .)
    [               reduce using rule 45 (VarDec -> ID .)
    ,               reduce using rule 45 (VarDec -> ID .)
    ;               reduce using rule 45 (VarDec -> ID .)
    )               reduce using rule 45 (VarDec -> ID .)


state 81

    (40) StructSpecifier -> STRUCT OptTag LC DefList . RC
    (26) RC -> . }

    }               shift and go to state 88

    RC                             shift and go to state 127

state 82

    (46) VarDec -> VarDec LB NUMBER RB .

    ,               reduce using rule 46 (VarDec -> VarDec LB NUMBER RB .)
    [               reduce using rule 46 (VarDec -> VarDec LB NUMBER RB .)
    ;               reduce using rule 46 (VarDec -> VarDec LB NUMBER RB .)
    =               reduce using rule 46 (VarDec -> VarDec LB NUMBER RB .)
    )               reduce using rule 46 (VarDec -> VarDec LB NUMBER RB .)


state 83

    (24) RB -> ] .

    ,               reduce using rule 24 (RB -> ] .)
    [               reduce using rule 24 (RB -> ] .)
    ;               reduce using rule 24 (RB -> ] .)
    =               reduce using rule 24 (RB -> ] .)
    )               reduce using rule 24 (RB -> ] .)
    BOOLAND         reduce using rule 24 (RB -> ] .)
    BOOLOR          reduce using rule 24 (RB -> ] .)
    >               reduce using rule 24 (RB -> ] .)
    <               reduce using rule 24 (RB -> ] .)
    GRTREQL         reduce using rule 24 (RB -> ] .)
    LESSEQL         reduce using rule 24 (RB -> ] .)
    EQUAL           reduce using rule 24 (RB -> ] .)
    NEQUAL          reduce using rule 24 (RB -> ] .)
    +               reduce using rule 24 (RB -> ] .)
    -               reduce using rule 24 (RB -> ] .)
    *               reduce using rule 24 (RB -> ] .)
    /               reduce using rule 24 (RB -> ] .)
    .               reduce using rule 24 (RB -> ] .)
    ]               reduce using rule 24 (RB -> ] .)


state 84

    (47) FunDec -> ID LP VarList RP .

    ,               reduce using rule 47 (FunDec -> ID LP VarList RP .)
    {               reduce using rule 47 (FunDec -> ID LP VarList RP .)
    ;               reduce using rule 47 (FunDec -> ID LP VarList RP .)


state 85

    (49) VarList -> ParamDec COMMA . VarList
    (49) VarList -> . ParamDec COMMA VarList
    (50) VarList -> . ParamDec
    (51) ParamDec -> . Specifier VarDec
    (38) Specifier -> . TYPE
    (39) Specifier -> . StructSpecifier
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT
    (40) StructSpecifier -> . STRUCT OptTag LC DefList RC
    (41) StructSpecifier -> . STRUCT Tag

    INT             shift and go to state 9
    FLOAT           shift and go to state 10
    STRUCT          shift and go to state 11

    ParamDec                       shift and go to state 46
    VarList                        shift and go to state 128
    Specifier                      shift and go to state 48
    TYPE                           shift and go to state 7
    StructSpecifier                shift and go to state 8

state 86

    (51) ParamDec -> Specifier VarDec .
    (46) VarDec -> VarDec . LB NUMBER RB
    (23) LB -> . [

    ,               reduce using rule 51 (ParamDec -> Specifier VarDec .)
    )               reduce using rule 51 (ParamDec -> Specifier VarDec .)
    [               shift and go to state 31

    LB                             shift and go to state 30

state 87

    (52) CompSt -> LC DefList StmtList RC .

    INT             reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    FLOAT           reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    STRUCT          reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    $end            reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    RETURN          reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    ID              reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    NUMBER          reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    DECIMAL         reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    STRINGLITERAL   reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    ;               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    IF              reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    WHILE           reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    (               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    PLUSSLF         reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    SUBSLF          reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    {               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    -               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    !               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    +               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    *               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    }               reduce using rule 52 (CompSt -> LC DefList StmtList RC .)
    ELSE            reduce using rule 52 (CompSt -> LC DefList StmtList RC .)


state 88

    (26) RC -> } .

    INT             reduce using rule 26 (RC -> } .)
    FLOAT           reduce using rule 26 (RC -> } .)
    STRUCT          reduce using rule 26 (RC -> } .)
    $end            reduce using rule 26 (RC -> } .)
    RETURN          reduce using rule 26 (RC -> } .)
    ID              reduce using rule 26 (RC -> } .)
    NUMBER          reduce using rule 26 (RC -> } .)
    DECIMAL         reduce using rule 26 (RC -> } .)
    STRINGLITERAL   reduce using rule 26 (RC -> } .)
    ;               reduce using rule 26 (RC -> } .)
    IF              reduce using rule 26 (RC -> } .)
    WHILE           reduce using rule 26 (RC -> } .)
    (               reduce using rule 26 (RC -> } .)
    PLUSSLF         reduce using rule 26 (RC -> } .)
    SUBSLF          reduce using rule 26 (RC -> } .)
    {               reduce using rule 26 (RC -> } .)
    -               reduce using rule 26 (RC -> } .)
    !               reduce using rule 26 (RC -> } .)
    +               reduce using rule 26 (RC -> } .)
    *               reduce using rule 26 (RC -> } .)
    }               reduce using rule 26 (RC -> } .)
    ELSE            reduce using rule 26 (RC -> } .)


state 89

    (53) StmtList -> Stmt StmtList .

    }               reduce using rule 53 (StmtList -> Stmt StmtList .)


state 90

    (55) Stmt -> RETURN Exp . SEMI
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (2) SEMI -> . ;
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ;               shift and go to state 17
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    SEMI                           shift and go to state 129
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 91

    (59) Stmt -> Exp SEMI .

    RETURN          reduce using rule 59 (Stmt -> Exp SEMI .)
    ID              reduce using rule 59 (Stmt -> Exp SEMI .)
    NUMBER          reduce using rule 59 (Stmt -> Exp SEMI .)
    DECIMAL         reduce using rule 59 (Stmt -> Exp SEMI .)
    STRINGLITERAL   reduce using rule 59 (Stmt -> Exp SEMI .)
    ;               reduce using rule 59 (Stmt -> Exp SEMI .)
    IF              reduce using rule 59 (Stmt -> Exp SEMI .)
    WHILE           reduce using rule 59 (Stmt -> Exp SEMI .)
    (               reduce using rule 59 (Stmt -> Exp SEMI .)
    PLUSSLF         reduce using rule 59 (Stmt -> Exp SEMI .)
    SUBSLF          reduce using rule 59 (Stmt -> Exp SEMI .)
    {               reduce using rule 59 (Stmt -> Exp SEMI .)
    -               reduce using rule 59 (Stmt -> Exp SEMI .)
    !               reduce using rule 59 (Stmt -> Exp SEMI .)
    +               reduce using rule 59 (Stmt -> Exp SEMI .)
    *               reduce using rule 59 (Stmt -> Exp SEMI .)
    }               reduce using rule 59 (Stmt -> Exp SEMI .)
    ELSE            reduce using rule 59 (Stmt -> Exp SEMI .)


state 92

    (82) Exp -> Exp ASSIGNOP . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 130
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 93

    (83) Exp -> Exp AND . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 131
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 94

    (84) Exp -> Exp OR . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 132
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 95

    (85) Exp -> Exp RELOP . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 133
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 96

    (86) Exp -> Exp PLUS . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 134
    PLUS                           shift and go to state 62
    LP                             shift and go to state 57
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 97

    (87) Exp -> Exp MINUS . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 135
    MINUS                          shift and go to state 63
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 98

    (88) Exp -> Exp STAR . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 136
    STAR                           shift and go to state 64
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 99

    (89) Exp -> Exp DIV . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 137
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 100

    (90) Exp -> Exp LB . Exp RB
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 138
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 101

    (91) Exp -> Exp DOT . ID

    ID              shift and go to state 139


state 102

    (4) ASSIGNOP -> = .

    ID              reduce using rule 4 (ASSIGNOP -> = .)
    NUMBER          reduce using rule 4 (ASSIGNOP -> = .)
    DECIMAL         reduce using rule 4 (ASSIGNOP -> = .)
    STRINGLITERAL   reduce using rule 4 (ASSIGNOP -> = .)
    (               reduce using rule 4 (ASSIGNOP -> = .)
    PLUSSLF         reduce using rule 4 (ASSIGNOP -> = .)
    SUBSLF          reduce using rule 4 (ASSIGNOP -> = .)
    -               reduce using rule 4 (ASSIGNOP -> = .)
    !               reduce using rule 4 (ASSIGNOP -> = .)
    +               reduce using rule 4 (ASSIGNOP -> = .)
    *               reduce using rule 4 (ASSIGNOP -> = .)


state 103

    (15) AND -> BOOLAND .

    ID              reduce using rule 15 (AND -> BOOLAND .)
    NUMBER          reduce using rule 15 (AND -> BOOLAND .)
    DECIMAL         reduce using rule 15 (AND -> BOOLAND .)
    STRINGLITERAL   reduce using rule 15 (AND -> BOOLAND .)
    (               reduce using rule 15 (AND -> BOOLAND .)
    PLUSSLF         reduce using rule 15 (AND -> BOOLAND .)
    SUBSLF          reduce using rule 15 (AND -> BOOLAND .)
    -               reduce using rule 15 (AND -> BOOLAND .)
    !               reduce using rule 15 (AND -> BOOLAND .)
    +               reduce using rule 15 (AND -> BOOLAND .)
    *               reduce using rule 15 (AND -> BOOLAND .)


state 104

    (16) OR -> BOOLOR .

    ID              reduce using rule 16 (OR -> BOOLOR .)
    NUMBER          reduce using rule 16 (OR -> BOOLOR .)
    DECIMAL         reduce using rule 16 (OR -> BOOLOR .)
    STRINGLITERAL   reduce using rule 16 (OR -> BOOLOR .)
    (               reduce using rule 16 (OR -> BOOLOR .)
    PLUSSLF         reduce using rule 16 (OR -> BOOLOR .)
    SUBSLF          reduce using rule 16 (OR -> BOOLOR .)
    -               reduce using rule 16 (OR -> BOOLOR .)
    !               reduce using rule 16 (OR -> BOOLOR .)
    +               reduce using rule 16 (OR -> BOOLOR .)
    *               reduce using rule 16 (OR -> BOOLOR .)


state 105

    (5) RELOP -> > .

    ID              reduce using rule 5 (RELOP -> > .)
    NUMBER          reduce using rule 5 (RELOP -> > .)
    DECIMAL         reduce using rule 5 (RELOP -> > .)
    STRINGLITERAL   reduce using rule 5 (RELOP -> > .)
    (               reduce using rule 5 (RELOP -> > .)
    PLUSSLF         reduce using rule 5 (RELOP -> > .)
    SUBSLF          reduce using rule 5 (RELOP -> > .)
    -               reduce using rule 5 (RELOP -> > .)
    !               reduce using rule 5 (RELOP -> > .)
    +               reduce using rule 5 (RELOP -> > .)
    *               reduce using rule 5 (RELOP -> > .)


state 106

    (6) RELOP -> < .

    ID              reduce using rule 6 (RELOP -> < .)
    NUMBER          reduce using rule 6 (RELOP -> < .)
    DECIMAL         reduce using rule 6 (RELOP -> < .)
    STRINGLITERAL   reduce using rule 6 (RELOP -> < .)
    (               reduce using rule 6 (RELOP -> < .)
    PLUSSLF         reduce using rule 6 (RELOP -> < .)
    SUBSLF          reduce using rule 6 (RELOP -> < .)
    -               reduce using rule 6 (RELOP -> < .)
    !               reduce using rule 6 (RELOP -> < .)
    +               reduce using rule 6 (RELOP -> < .)
    *               reduce using rule 6 (RELOP -> < .)


state 107

    (7) RELOP -> GRTREQL .

    ID              reduce using rule 7 (RELOP -> GRTREQL .)
    NUMBER          reduce using rule 7 (RELOP -> GRTREQL .)
    DECIMAL         reduce using rule 7 (RELOP -> GRTREQL .)
    STRINGLITERAL   reduce using rule 7 (RELOP -> GRTREQL .)
    (               reduce using rule 7 (RELOP -> GRTREQL .)
    PLUSSLF         reduce using rule 7 (RELOP -> GRTREQL .)
    SUBSLF          reduce using rule 7 (RELOP -> GRTREQL .)
    -               reduce using rule 7 (RELOP -> GRTREQL .)
    !               reduce using rule 7 (RELOP -> GRTREQL .)
    +               reduce using rule 7 (RELOP -> GRTREQL .)
    *               reduce using rule 7 (RELOP -> GRTREQL .)


state 108

    (8) RELOP -> LESSEQL .

    ID              reduce using rule 8 (RELOP -> LESSEQL .)
    NUMBER          reduce using rule 8 (RELOP -> LESSEQL .)
    DECIMAL         reduce using rule 8 (RELOP -> LESSEQL .)
    STRINGLITERAL   reduce using rule 8 (RELOP -> LESSEQL .)
    (               reduce using rule 8 (RELOP -> LESSEQL .)
    PLUSSLF         reduce using rule 8 (RELOP -> LESSEQL .)
    SUBSLF          reduce using rule 8 (RELOP -> LESSEQL .)
    -               reduce using rule 8 (RELOP -> LESSEQL .)
    !               reduce using rule 8 (RELOP -> LESSEQL .)
    +               reduce using rule 8 (RELOP -> LESSEQL .)
    *               reduce using rule 8 (RELOP -> LESSEQL .)


state 109

    (9) RELOP -> EQUAL .

    ID              reduce using rule 9 (RELOP -> EQUAL .)
    NUMBER          reduce using rule 9 (RELOP -> EQUAL .)
    DECIMAL         reduce using rule 9 (RELOP -> EQUAL .)
    STRINGLITERAL   reduce using rule 9 (RELOP -> EQUAL .)
    (               reduce using rule 9 (RELOP -> EQUAL .)
    PLUSSLF         reduce using rule 9 (RELOP -> EQUAL .)
    SUBSLF          reduce using rule 9 (RELOP -> EQUAL .)
    -               reduce using rule 9 (RELOP -> EQUAL .)
    !               reduce using rule 9 (RELOP -> EQUAL .)
    +               reduce using rule 9 (RELOP -> EQUAL .)
    *               reduce using rule 9 (RELOP -> EQUAL .)


state 110

    (10) RELOP -> NEQUAL .

    ID              reduce using rule 10 (RELOP -> NEQUAL .)
    NUMBER          reduce using rule 10 (RELOP -> NEQUAL .)
    DECIMAL         reduce using rule 10 (RELOP -> NEQUAL .)
    STRINGLITERAL   reduce using rule 10 (RELOP -> NEQUAL .)
    (               reduce using rule 10 (RELOP -> NEQUAL .)
    PLUSSLF         reduce using rule 10 (RELOP -> NEQUAL .)
    SUBSLF          reduce using rule 10 (RELOP -> NEQUAL .)
    -               reduce using rule 10 (RELOP -> NEQUAL .)
    !               reduce using rule 10 (RELOP -> NEQUAL .)
    +               reduce using rule 10 (RELOP -> NEQUAL .)
    *               reduce using rule 10 (RELOP -> NEQUAL .)


state 111

    (14) DIV -> / .

    ID              reduce using rule 14 (DIV -> / .)
    NUMBER          reduce using rule 14 (DIV -> / .)
    DECIMAL         reduce using rule 14 (DIV -> / .)
    STRINGLITERAL   reduce using rule 14 (DIV -> / .)
    (               reduce using rule 14 (DIV -> / .)
    PLUSSLF         reduce using rule 14 (DIV -> / .)
    SUBSLF          reduce using rule 14 (DIV -> / .)
    -               reduce using rule 14 (DIV -> / .)
    !               reduce using rule 14 (DIV -> / .)
    +               reduce using rule 14 (DIV -> / .)
    *               reduce using rule 14 (DIV -> / .)


state 112

    (17) DOT -> . .

    ID              reduce using rule 17 (DOT -> . .)


state 113

    (77) Exp -> LP Exp . RP
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 47
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    RP                             shift and go to state 140
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 114

    (76) PrefixedExp -> LP TYPE . RP Exp
    (22) RP -> . )

    )               shift and go to state 47

    RP                             shift and go to state 141

state 115

    (94) FuncCall -> ID LP . Args RP
    (95) FuncCall -> ID LP . RP
    (96) Args -> . Exp COMMA Args
    (97) Args -> . Exp
    (22) RP -> . )
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    )               shift and go to state 47
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Args                           shift and go to state 142
    RP                             shift and go to state 143
    Exp                            shift and go to state 144
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 116

    (72) PrefixedExp -> PLUS Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 72 (PrefixedExp -> PLUS Exp .)
    )               reduce using rule 72 (PrefixedExp -> PLUS Exp .)
    ]               reduce using rule 72 (PrefixedExp -> PLUS Exp .)
    ,               reduce using rule 72 (PrefixedExp -> PLUS Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! BOOLAND         [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! BOOLOR          [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! >               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! <               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! GRTREQL         [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! LESSEQL         [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! EQUAL           [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! NEQUAL          [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! +               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! -               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! *               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! /               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! [               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]
  ! .               [ reduce using rule 72 (PrefixedExp -> PLUS Exp .) ]

    PLUS                           shift and go to state 96
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 117

    (70) PrefixedExp -> MINUS Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 70 (PrefixedExp -> MINUS Exp .)
    )               reduce using rule 70 (PrefixedExp -> MINUS Exp .)
    ]               reduce using rule 70 (PrefixedExp -> MINUS Exp .)
    ,               reduce using rule 70 (PrefixedExp -> MINUS Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! BOOLAND         [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! BOOLOR          [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! >               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! <               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! GRTREQL         [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! LESSEQL         [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! EQUAL           [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! NEQUAL          [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! +               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! -               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! *               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! /               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! [               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]
  ! .               [ reduce using rule 70 (PrefixedExp -> MINUS Exp .) ]

    MINUS                          shift and go to state 97
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 118

    (73) PrefixedExp -> STAR Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 73 (PrefixedExp -> STAR Exp .)
    )               reduce using rule 73 (PrefixedExp -> STAR Exp .)
    ]               reduce using rule 73 (PrefixedExp -> STAR Exp .)
    ,               reduce using rule 73 (PrefixedExp -> STAR Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! BOOLAND         [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! BOOLOR          [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! >               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! <               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! GRTREQL         [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! LESSEQL         [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! EQUAL           [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! NEQUAL          [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! +               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! -               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! *               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! /               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! [               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]
  ! .               [ reduce using rule 73 (PrefixedExp -> STAR Exp .) ]

    STAR                           shift and go to state 98
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 119

    (56) FlowCtrl -> IF LP . Exp RP Stmt
    (57) FlowCtrl -> IF LP . Exp RP Stmt ELSE Stmt
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 145
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 120

    (58) FlowCtrl -> WHILE LP . Exp RP Stmt
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 146
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 121

    (71) PrefixedExp -> NOT Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 71 (PrefixedExp -> NOT Exp .)
    )               reduce using rule 71 (PrefixedExp -> NOT Exp .)
    ]               reduce using rule 71 (PrefixedExp -> NOT Exp .)
    ,               reduce using rule 71 (PrefixedExp -> NOT Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! BOOLAND         [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! BOOLOR          [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! >               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! <               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! GRTREQL         [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! LESSEQL         [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! EQUAL           [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! NEQUAL          [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! +               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! -               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! *               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! /               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! [               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]
  ! .               [ reduce using rule 71 (PrefixedExp -> NOT Exp .) ]

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 122

    (74) PrefixedExp -> PLUSSLF Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .)
    )               reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .)
    ]               reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .)
    ,               reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! BOOLAND         [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! BOOLOR          [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! >               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! <               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! GRTREQL         [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! LESSEQL         [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! EQUAL           [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! NEQUAL          [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! +               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! -               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! *               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! /               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! [               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]
  ! .               [ reduce using rule 74 (PrefixedExp -> PLUSSLF Exp .) ]

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 123

    (75) PrefixedExp -> SUBSLF Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 75 (PrefixedExp -> SUBSLF Exp .)
    )               reduce using rule 75 (PrefixedExp -> SUBSLF Exp .)
    ]               reduce using rule 75 (PrefixedExp -> SUBSLF Exp .)
    ,               reduce using rule 75 (PrefixedExp -> SUBSLF Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! BOOLAND         [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! BOOLOR          [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! >               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! <               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! GRTREQL         [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! LESSEQL         [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! EQUAL           [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! NEQUAL          [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! +               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! -               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! *               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! /               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! [               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]
  ! .               [ reduce using rule 75 (PrefixedExp -> SUBSLF Exp .) ]

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 124

    (65) Def -> Specifier DecList SEMI .

    INT             reduce using rule 65 (Def -> Specifier DecList SEMI .)
    FLOAT           reduce using rule 65 (Def -> Specifier DecList SEMI .)
    STRUCT          reduce using rule 65 (Def -> Specifier DecList SEMI .)
    RETURN          reduce using rule 65 (Def -> Specifier DecList SEMI .)
    ID              reduce using rule 65 (Def -> Specifier DecList SEMI .)
    NUMBER          reduce using rule 65 (Def -> Specifier DecList SEMI .)
    DECIMAL         reduce using rule 65 (Def -> Specifier DecList SEMI .)
    STRINGLITERAL   reduce using rule 65 (Def -> Specifier DecList SEMI .)
    ;               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    IF              reduce using rule 65 (Def -> Specifier DecList SEMI .)
    WHILE           reduce using rule 65 (Def -> Specifier DecList SEMI .)
    (               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    PLUSSLF         reduce using rule 65 (Def -> Specifier DecList SEMI .)
    SUBSLF          reduce using rule 65 (Def -> Specifier DecList SEMI .)
    {               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    -               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    !               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    +               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    *               reduce using rule 65 (Def -> Specifier DecList SEMI .)
    }               reduce using rule 65 (Def -> Specifier DecList SEMI .)


state 125

    (67) DecList -> Dec COMMA . DecList
    (66) DecList -> . Dec
    (67) DecList -> . Dec COMMA DecList
    (68) Dec -> . VarDec
    (69) Dec -> . VarDec ASSIGNOP Exp
    (45) VarDec -> . ID
    (46) VarDec -> . VarDec LB NUMBER RB

    ID              shift and go to state 80

    Dec                            shift and go to state 78
    DecList                        shift and go to state 147
    VarDec                         shift and go to state 79

state 126

    (69) Dec -> VarDec ASSIGNOP . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 148
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 127

    (40) StructSpecifier -> STRUCT OptTag LC DefList RC .

    ;               reduce using rule 40 (StructSpecifier -> STRUCT OptTag LC DefList RC .)
    ID              reduce using rule 40 (StructSpecifier -> STRUCT OptTag LC DefList RC .)


state 128

    (49) VarList -> ParamDec COMMA VarList .

    )               reduce using rule 49 (VarList -> ParamDec COMMA VarList .)


state 129

    (55) Stmt -> RETURN Exp SEMI .

    RETURN          reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    ID              reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    NUMBER          reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    DECIMAL         reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    STRINGLITERAL   reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    ;               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    IF              reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    WHILE           reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    (               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    PLUSSLF         reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    SUBSLF          reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    {               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    -               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    !               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    +               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    *               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    }               reduce using rule 55 (Stmt -> RETURN Exp SEMI .)
    ELSE            reduce using rule 55 (Stmt -> RETURN Exp SEMI .)


state 130

    (82) Exp -> Exp ASSIGNOP Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .)
    )               reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .)
    ]               reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .)
    ,               reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! BOOLAND         [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! BOOLOR          [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! >               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! <               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! GRTREQL         [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! LESSEQL         [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! EQUAL           [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! NEQUAL          [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! +               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! -               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! *               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! /               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! [               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]
  ! .               [ reduce using rule 82 (Exp -> Exp ASSIGNOP Exp .) ]

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 131

    (83) Exp -> Exp AND Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 83 (Exp -> Exp AND Exp .)
    )               reduce using rule 83 (Exp -> Exp AND Exp .)
    ]               reduce using rule 83 (Exp -> Exp AND Exp .)
    ,               reduce using rule 83 (Exp -> Exp AND Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! BOOLAND         [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! BOOLOR          [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! >               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! <               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! GRTREQL         [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! LESSEQL         [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! EQUAL           [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! NEQUAL          [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! +               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! -               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! *               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! /               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! [               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]
  ! .               [ reduce using rule 83 (Exp -> Exp AND Exp .) ]

    AND                            shift and go to state 93
    ASSIGNOP                       shift and go to state 92
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 132

    (84) Exp -> Exp OR Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 84 (Exp -> Exp OR Exp .)
    )               reduce using rule 84 (Exp -> Exp OR Exp .)
    ]               reduce using rule 84 (Exp -> Exp OR Exp .)
    ,               reduce using rule 84 (Exp -> Exp OR Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! BOOLAND         [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! BOOLOR          [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! >               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! <               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! GRTREQL         [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! LESSEQL         [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! EQUAL           [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! NEQUAL          [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! +               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! -               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! *               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! /               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! [               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]
  ! .               [ reduce using rule 84 (Exp -> Exp OR Exp .) ]

    OR                             shift and go to state 94
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 133

    (85) Exp -> Exp RELOP Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 85 (Exp -> Exp RELOP Exp .)
    )               reduce using rule 85 (Exp -> Exp RELOP Exp .)
    ]               reduce using rule 85 (Exp -> Exp RELOP Exp .)
    ,               reduce using rule 85 (Exp -> Exp RELOP Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! BOOLAND         [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! BOOLOR          [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! >               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! <               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! GRTREQL         [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! LESSEQL         [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! EQUAL           [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! NEQUAL          [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! +               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! -               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! *               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! /               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! [               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]
  ! .               [ reduce using rule 85 (Exp -> Exp RELOP Exp .) ]

    RELOP                          shift and go to state 95
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 134

    (86) Exp -> Exp PLUS Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 86 (Exp -> Exp PLUS Exp .)
    )               reduce using rule 86 (Exp -> Exp PLUS Exp .)
    ]               reduce using rule 86 (Exp -> Exp PLUS Exp .)
    ,               reduce using rule 86 (Exp -> Exp PLUS Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! BOOLAND         [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! BOOLOR          [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! >               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! <               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! GRTREQL         [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! LESSEQL         [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! EQUAL           [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! NEQUAL          [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! +               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! -               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! *               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! /               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! [               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]
  ! .               [ reduce using rule 86 (Exp -> Exp PLUS Exp .) ]

    PLUS                           shift and go to state 96
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 135

    (87) Exp -> Exp MINUS Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 87 (Exp -> Exp MINUS Exp .)
    )               reduce using rule 87 (Exp -> Exp MINUS Exp .)
    ]               reduce using rule 87 (Exp -> Exp MINUS Exp .)
    ,               reduce using rule 87 (Exp -> Exp MINUS Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! BOOLAND         [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! BOOLOR          [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! >               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! <               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! GRTREQL         [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! LESSEQL         [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! EQUAL           [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! NEQUAL          [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! +               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! -               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! *               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! /               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! [               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]
  ! .               [ reduce using rule 87 (Exp -> Exp MINUS Exp .) ]

    MINUS                          shift and go to state 97
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 136

    (88) Exp -> Exp STAR Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 88 (Exp -> Exp STAR Exp .)
    )               reduce using rule 88 (Exp -> Exp STAR Exp .)
    ]               reduce using rule 88 (Exp -> Exp STAR Exp .)
    ,               reduce using rule 88 (Exp -> Exp STAR Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! BOOLAND         [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! BOOLOR          [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! >               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! <               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! GRTREQL         [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! LESSEQL         [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! EQUAL           [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! NEQUAL          [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! +               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! -               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! *               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! /               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! [               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]
  ! .               [ reduce using rule 88 (Exp -> Exp STAR Exp .) ]

    STAR                           shift and go to state 98
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 137

    (89) Exp -> Exp DIV Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 89 (Exp -> Exp DIV Exp .)
    )               reduce using rule 89 (Exp -> Exp DIV Exp .)
    ]               reduce using rule 89 (Exp -> Exp DIV Exp .)
    ,               reduce using rule 89 (Exp -> Exp DIV Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! BOOLAND         [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! BOOLOR          [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! >               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! <               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! GRTREQL         [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! LESSEQL         [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! EQUAL           [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! NEQUAL          [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! +               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! -               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! *               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! /               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! [               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]
  ! .               [ reduce using rule 89 (Exp -> Exp DIV Exp .) ]

    DIV                            shift and go to state 99
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 138

    (90) Exp -> Exp LB Exp . RB
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (24) RB -> . ]
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ]               shift and go to state 83
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    LB                             shift and go to state 100
    RB                             shift and go to state 149
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    DOT                            shift and go to state 101

state 139

    (91) Exp -> Exp DOT ID .

    ;               reduce using rule 91 (Exp -> Exp DOT ID .)
    =               reduce using rule 91 (Exp -> Exp DOT ID .)
    BOOLAND         reduce using rule 91 (Exp -> Exp DOT ID .)
    BOOLOR          reduce using rule 91 (Exp -> Exp DOT ID .)
    >               reduce using rule 91 (Exp -> Exp DOT ID .)
    <               reduce using rule 91 (Exp -> Exp DOT ID .)
    GRTREQL         reduce using rule 91 (Exp -> Exp DOT ID .)
    LESSEQL         reduce using rule 91 (Exp -> Exp DOT ID .)
    EQUAL           reduce using rule 91 (Exp -> Exp DOT ID .)
    NEQUAL          reduce using rule 91 (Exp -> Exp DOT ID .)
    +               reduce using rule 91 (Exp -> Exp DOT ID .)
    -               reduce using rule 91 (Exp -> Exp DOT ID .)
    *               reduce using rule 91 (Exp -> Exp DOT ID .)
    /               reduce using rule 91 (Exp -> Exp DOT ID .)
    [               reduce using rule 91 (Exp -> Exp DOT ID .)
    .               reduce using rule 91 (Exp -> Exp DOT ID .)
    )               reduce using rule 91 (Exp -> Exp DOT ID .)
    ]               reduce using rule 91 (Exp -> Exp DOT ID .)
    ,               reduce using rule 91 (Exp -> Exp DOT ID .)


state 140

    (77) Exp -> LP Exp RP .

    ;               reduce using rule 77 (Exp -> LP Exp RP .)
    =               reduce using rule 77 (Exp -> LP Exp RP .)
    BOOLAND         reduce using rule 77 (Exp -> LP Exp RP .)
    BOOLOR          reduce using rule 77 (Exp -> LP Exp RP .)
    >               reduce using rule 77 (Exp -> LP Exp RP .)
    <               reduce using rule 77 (Exp -> LP Exp RP .)
    GRTREQL         reduce using rule 77 (Exp -> LP Exp RP .)
    LESSEQL         reduce using rule 77 (Exp -> LP Exp RP .)
    EQUAL           reduce using rule 77 (Exp -> LP Exp RP .)
    NEQUAL          reduce using rule 77 (Exp -> LP Exp RP .)
    +               reduce using rule 77 (Exp -> LP Exp RP .)
    -               reduce using rule 77 (Exp -> LP Exp RP .)
    *               reduce using rule 77 (Exp -> LP Exp RP .)
    /               reduce using rule 77 (Exp -> LP Exp RP .)
    [               reduce using rule 77 (Exp -> LP Exp RP .)
    .               reduce using rule 77 (Exp -> LP Exp RP .)
    )               reduce using rule 77 (Exp -> LP Exp RP .)
    ]               reduce using rule 77 (Exp -> LP Exp RP .)
    ,               reduce using rule 77 (Exp -> LP Exp RP .)


state 141

    (76) PrefixedExp -> LP TYPE RP . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 150
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 142

    (94) FuncCall -> ID LP Args . RP
    (22) RP -> . )

    )               shift and go to state 47

    RP                             shift and go to state 151

state 143

    (95) FuncCall -> ID LP RP .

    ;               reduce using rule 95 (FuncCall -> ID LP RP .)
    =               reduce using rule 95 (FuncCall -> ID LP RP .)
    BOOLAND         reduce using rule 95 (FuncCall -> ID LP RP .)
    BOOLOR          reduce using rule 95 (FuncCall -> ID LP RP .)
    >               reduce using rule 95 (FuncCall -> ID LP RP .)
    <               reduce using rule 95 (FuncCall -> ID LP RP .)
    GRTREQL         reduce using rule 95 (FuncCall -> ID LP RP .)
    LESSEQL         reduce using rule 95 (FuncCall -> ID LP RP .)
    EQUAL           reduce using rule 95 (FuncCall -> ID LP RP .)
    NEQUAL          reduce using rule 95 (FuncCall -> ID LP RP .)
    +               reduce using rule 95 (FuncCall -> ID LP RP .)
    -               reduce using rule 95 (FuncCall -> ID LP RP .)
    *               reduce using rule 95 (FuncCall -> ID LP RP .)
    /               reduce using rule 95 (FuncCall -> ID LP RP .)
    [               reduce using rule 95 (FuncCall -> ID LP RP .)
    .               reduce using rule 95 (FuncCall -> ID LP RP .)
    )               reduce using rule 95 (FuncCall -> ID LP RP .)
    ]               reduce using rule 95 (FuncCall -> ID LP RP .)
    ,               reduce using rule 95 (FuncCall -> ID LP RP .)


state 144

    (96) Args -> Exp . COMMA Args
    (97) Args -> Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (3) COMMA -> . ,
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               reduce using rule 97 (Args -> Exp .)
    ,               shift and go to state 28
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    COMMA                          shift and go to state 152
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 145

    (56) FlowCtrl -> IF LP Exp . RP Stmt
    (57) FlowCtrl -> IF LP Exp . RP Stmt ELSE Stmt
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 47
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    RP                             shift and go to state 153
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 146

    (58) FlowCtrl -> WHILE LP Exp . RP Stmt
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (22) RP -> . )
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    )               shift and go to state 47
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    RP                             shift and go to state 154
    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 147

    (67) DecList -> Dec COMMA DecList .

    ;               reduce using rule 67 (DecList -> Dec COMMA DecList .)


state 148

    (69) Dec -> VarDec ASSIGNOP Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

    ,               reduce using rule 69 (Dec -> VarDec ASSIGNOP Exp .)
    ;               reduce using rule 69 (Dec -> VarDec ASSIGNOP Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 149

    (90) Exp -> Exp LB Exp RB .

    ;               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    =               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    BOOLAND         reduce using rule 90 (Exp -> Exp LB Exp RB .)
    BOOLOR          reduce using rule 90 (Exp -> Exp LB Exp RB .)
    >               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    <               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    GRTREQL         reduce using rule 90 (Exp -> Exp LB Exp RB .)
    LESSEQL         reduce using rule 90 (Exp -> Exp LB Exp RB .)
    EQUAL           reduce using rule 90 (Exp -> Exp LB Exp RB .)
    NEQUAL          reduce using rule 90 (Exp -> Exp LB Exp RB .)
    +               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    -               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    *               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    /               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    [               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    .               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    )               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    ]               reduce using rule 90 (Exp -> Exp LB Exp RB .)
    ,               reduce using rule 90 (Exp -> Exp LB Exp RB .)


state 150

    (76) PrefixedExp -> LP TYPE RP Exp .
    (82) Exp -> Exp . ASSIGNOP Exp
    (83) Exp -> Exp . AND Exp
    (84) Exp -> Exp . OR Exp
    (85) Exp -> Exp . RELOP Exp
    (86) Exp -> Exp . PLUS Exp
    (87) Exp -> Exp . MINUS Exp
    (88) Exp -> Exp . STAR Exp
    (89) Exp -> Exp . DIV Exp
    (90) Exp -> Exp . LB Exp RB
    (91) Exp -> Exp . DOT ID
    (4) ASSIGNOP -> . =
    (15) AND -> . BOOLAND
    (16) OR -> . BOOLOR
    (5) RELOP -> . >
    (6) RELOP -> . <
    (7) RELOP -> . GRTREQL
    (8) RELOP -> . LESSEQL
    (9) RELOP -> . EQUAL
    (10) RELOP -> . NEQUAL
    (11) PLUS -> . +
    (12) MINUS -> . -
    (13) STAR -> . *
    (14) DIV -> . /
    (23) LB -> . [
    (17) DOT -> . .

  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for BOOLAND resolved as shift
  ! shift/reduce conflict for BOOLOR resolved as shift
  ! shift/reduce conflict for > resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for GRTREQL resolved as shift
  ! shift/reduce conflict for LESSEQL resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for NEQUAL resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for [ resolved as shift
  ! shift/reduce conflict for . resolved as shift
    ;               reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .)
    )               reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .)
    ]               reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .)
    ,               reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .)
    =               shift and go to state 102
    BOOLAND         shift and go to state 103
    BOOLOR          shift and go to state 104
    >               shift and go to state 105
    <               shift and go to state 106
    GRTREQL         shift and go to state 107
    LESSEQL         shift and go to state 108
    EQUAL           shift and go to state 109
    NEQUAL          shift and go to state 110
    +               shift and go to state 74
    -               shift and go to state 72
    *               shift and go to state 75
    /               shift and go to state 111
    [               shift and go to state 31
    .               shift and go to state 112

  ! =               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! BOOLAND         [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! BOOLOR          [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! >               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! <               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! GRTREQL         [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! LESSEQL         [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! EQUAL           [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! NEQUAL          [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! +               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! -               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! *               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! /               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! [               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]
  ! .               [ reduce using rule 76 (PrefixedExp -> LP TYPE RP Exp .) ]

    ASSIGNOP                       shift and go to state 92
    AND                            shift and go to state 93
    OR                             shift and go to state 94
    RELOP                          shift and go to state 95
    PLUS                           shift and go to state 96
    MINUS                          shift and go to state 97
    STAR                           shift and go to state 98
    DIV                            shift and go to state 99
    LB                             shift and go to state 100
    DOT                            shift and go to state 101

state 151

    (94) FuncCall -> ID LP Args RP .

    ;               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    =               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    BOOLAND         reduce using rule 94 (FuncCall -> ID LP Args RP .)
    BOOLOR          reduce using rule 94 (FuncCall -> ID LP Args RP .)
    >               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    <               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    GRTREQL         reduce using rule 94 (FuncCall -> ID LP Args RP .)
    LESSEQL         reduce using rule 94 (FuncCall -> ID LP Args RP .)
    EQUAL           reduce using rule 94 (FuncCall -> ID LP Args RP .)
    NEQUAL          reduce using rule 94 (FuncCall -> ID LP Args RP .)
    +               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    -               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    *               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    /               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    [               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    .               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    )               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    ]               reduce using rule 94 (FuncCall -> ID LP Args RP .)
    ,               reduce using rule 94 (FuncCall -> ID LP Args RP .)


state 152

    (96) Args -> Exp COMMA . Args
    (96) Args -> . Exp COMMA Args
    (97) Args -> . Exp
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    Exp                            shift and go to state 144
    Args                           shift and go to state 155
    LP                             shift and go to state 57
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    NOT                            shift and go to state 69

state 153

    (56) FlowCtrl -> IF LP Exp RP . Stmt
    (57) FlowCtrl -> IF LP Exp RP . Stmt ELSE Stmt
    (55) Stmt -> . RETURN Exp SEMI
    (59) Stmt -> . Exp SEMI
    (60) Stmt -> . CompSt
    (61) Stmt -> . SEMI
    (62) Stmt -> . FlowCtrl
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (52) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (56) FlowCtrl -> . IF LP Exp RP Stmt
    (57) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (58) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 52
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    ;               shift and go to state 17
    IF              shift and go to state 67
    WHILE           shift and go to state 68
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    {               shift and go to state 21
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 53
    Stmt                           shift and go to state 156
    SEMI                           shift and go to state 54
    CompSt                         shift and go to state 55
    FlowCtrl                       shift and go to state 56
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    LC                             shift and go to state 20
    NOT                            shift and go to state 69

state 154

    (58) FlowCtrl -> WHILE LP Exp RP . Stmt
    (55) Stmt -> . RETURN Exp SEMI
    (59) Stmt -> . Exp SEMI
    (60) Stmt -> . CompSt
    (61) Stmt -> . SEMI
    (62) Stmt -> . FlowCtrl
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (52) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (56) FlowCtrl -> . IF LP Exp RP Stmt
    (57) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (58) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 52
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    ;               shift and go to state 17
    IF              shift and go to state 67
    WHILE           shift and go to state 68
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    {               shift and go to state 21
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 53
    Stmt                           shift and go to state 157
    SEMI                           shift and go to state 54
    CompSt                         shift and go to state 55
    FlowCtrl                       shift and go to state 56
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    LC                             shift and go to state 20
    NOT                            shift and go to state 69

state 155

    (96) Args -> Exp COMMA Args .

    )               reduce using rule 96 (Args -> Exp COMMA Args .)


state 156

    (56) FlowCtrl -> IF LP Exp RP Stmt .
    (57) FlowCtrl -> IF LP Exp RP Stmt . ELSE Stmt

  ! shift/reduce conflict for ELSE resolved as shift
    RETURN          reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    ID              reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    NUMBER          reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    DECIMAL         reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    STRINGLITERAL   reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    ;               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    IF              reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    WHILE           reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    (               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    PLUSSLF         reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    SUBSLF          reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    {               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    -               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    !               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    +               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    *               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    }               reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .)
    ELSE            shift and go to state 158

  ! ELSE            [ reduce using rule 56 (FlowCtrl -> IF LP Exp RP Stmt .) ]


state 157

    (58) FlowCtrl -> WHILE LP Exp RP Stmt .

    RETURN          reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ID              reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    NUMBER          reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    DECIMAL         reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    STRINGLITERAL   reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ;               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    IF              reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    WHILE           reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    (               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    PLUSSLF         reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    SUBSLF          reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    {               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    -               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    !               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    +               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    *               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    }               reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)
    ELSE            reduce using rule 58 (FlowCtrl -> WHILE LP Exp RP Stmt .)


state 158

    (57) FlowCtrl -> IF LP Exp RP Stmt ELSE . Stmt
    (55) Stmt -> . RETURN Exp SEMI
    (59) Stmt -> . Exp SEMI
    (60) Stmt -> . CompSt
    (61) Stmt -> . SEMI
    (62) Stmt -> . FlowCtrl
    (77) Exp -> . LP Exp RP
    (78) Exp -> . ID
    (79) Exp -> . NUMBER
    (80) Exp -> . DECIMAL
    (81) Exp -> . STRINGLITERAL
    (82) Exp -> . Exp ASSIGNOP Exp
    (83) Exp -> . Exp AND Exp
    (84) Exp -> . Exp OR Exp
    (85) Exp -> . Exp RELOP Exp
    (86) Exp -> . Exp PLUS Exp
    (87) Exp -> . Exp MINUS Exp
    (88) Exp -> . Exp STAR Exp
    (89) Exp -> . Exp DIV Exp
    (90) Exp -> . Exp LB Exp RB
    (91) Exp -> . Exp DOT ID
    (92) Exp -> . PrefixedExp
    (93) Exp -> . FuncCall
    (52) CompSt -> . LC DefList StmtList RC
    (2) SEMI -> . ;
    (56) FlowCtrl -> . IF LP Exp RP Stmt
    (57) FlowCtrl -> . IF LP Exp RP Stmt ELSE Stmt
    (58) FlowCtrl -> . WHILE LP Exp RP Stmt
    (21) LP -> . (
    (70) PrefixedExp -> . MINUS Exp
    (71) PrefixedExp -> . NOT Exp
    (72) PrefixedExp -> . PLUS Exp
    (73) PrefixedExp -> . STAR Exp
    (74) PrefixedExp -> . PLUSSLF Exp
    (75) PrefixedExp -> . SUBSLF Exp
    (76) PrefixedExp -> . LP TYPE RP Exp
    (94) FuncCall -> . ID LP Args RP
    (95) FuncCall -> . ID LP RP
    (25) LC -> . {
    (12) MINUS -> . -
    (18) NOT -> . !
    (11) PLUS -> . +
    (13) STAR -> . *

    RETURN          shift and go to state 52
    ID              shift and go to state 58
    NUMBER          shift and go to state 59
    DECIMAL         shift and go to state 60
    STRINGLITERAL   shift and go to state 61
    ;               shift and go to state 17
    IF              shift and go to state 67
    WHILE           shift and go to state 68
    (               shift and go to state 33
    PLUSSLF         shift and go to state 70
    SUBSLF          shift and go to state 71
    {               shift and go to state 21
    -               shift and go to state 72
    !               shift and go to state 73
    +               shift and go to state 74
    *               shift and go to state 75

    LP                             shift and go to state 57
    Exp                            shift and go to state 53
    Stmt                           shift and go to state 159
    SEMI                           shift and go to state 54
    CompSt                         shift and go to state 55
    FlowCtrl                       shift and go to state 56
    PLUS                           shift and go to state 62
    MINUS                          shift and go to state 63
    STAR                           shift and go to state 64
    PrefixedExp                    shift and go to state 65
    FuncCall                       shift and go to state 66
    LC                             shift and go to state 20
    NOT                            shift and go to state 69

state 159

    (57) FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .

    RETURN          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ID              reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    NUMBER          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    DECIMAL         reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    STRINGLITERAL   reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ;               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    IF              reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    WHILE           reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    (               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    PLUSSLF         reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    SUBSLF          reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    {               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    -               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    !               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    +               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    *               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    }               reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)
    ELSE            reduce using rule 57 (FlowCtrl -> IF LP Exp RP Stmt ELSE Stmt .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for = in state 116 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 116 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 116 resolved as shift
WARNING: shift/reduce conflict for > in state 116 resolved as shift
WARNING: shift/reduce conflict for < in state 116 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 116 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 116 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 116 resolved as shift
WARNING: shift/reduce conflict for + in state 116 resolved as shift
WARNING: shift/reduce conflict for - in state 116 resolved as shift
WARNING: shift/reduce conflict for * in state 116 resolved as shift
WARNING: shift/reduce conflict for / in state 116 resolved as shift
WARNING: shift/reduce conflict for [ in state 116 resolved as shift
WARNING: shift/reduce conflict for . in state 116 resolved as shift
WARNING: shift/reduce conflict for = in state 117 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 117 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 117 resolved as shift
WARNING: shift/reduce conflict for > in state 117 resolved as shift
WARNING: shift/reduce conflict for < in state 117 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 117 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 117 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 117 resolved as shift
WARNING: shift/reduce conflict for + in state 117 resolved as shift
WARNING: shift/reduce conflict for - in state 117 resolved as shift
WARNING: shift/reduce conflict for * in state 117 resolved as shift
WARNING: shift/reduce conflict for / in state 117 resolved as shift
WARNING: shift/reduce conflict for [ in state 117 resolved as shift
WARNING: shift/reduce conflict for . in state 117 resolved as shift
WARNING: shift/reduce conflict for = in state 118 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 118 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 118 resolved as shift
WARNING: shift/reduce conflict for > in state 118 resolved as shift
WARNING: shift/reduce conflict for < in state 118 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 118 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 118 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 118 resolved as shift
WARNING: shift/reduce conflict for + in state 118 resolved as shift
WARNING: shift/reduce conflict for - in state 118 resolved as shift
WARNING: shift/reduce conflict for * in state 118 resolved as shift
WARNING: shift/reduce conflict for / in state 118 resolved as shift
WARNING: shift/reduce conflict for [ in state 118 resolved as shift
WARNING: shift/reduce conflict for . in state 118 resolved as shift
WARNING: shift/reduce conflict for = in state 121 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 121 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 121 resolved as shift
WARNING: shift/reduce conflict for > in state 121 resolved as shift
WARNING: shift/reduce conflict for < in state 121 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 121 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 121 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 121 resolved as shift
WARNING: shift/reduce conflict for + in state 121 resolved as shift
WARNING: shift/reduce conflict for - in state 121 resolved as shift
WARNING: shift/reduce conflict for * in state 121 resolved as shift
WARNING: shift/reduce conflict for / in state 121 resolved as shift
WARNING: shift/reduce conflict for [ in state 121 resolved as shift
WARNING: shift/reduce conflict for . in state 121 resolved as shift
WARNING: shift/reduce conflict for = in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 122 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 122 resolved as shift
WARNING: shift/reduce conflict for > in state 122 resolved as shift
WARNING: shift/reduce conflict for < in state 122 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 122 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 122 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 122 resolved as shift
WARNING: shift/reduce conflict for + in state 122 resolved as shift
WARNING: shift/reduce conflict for - in state 122 resolved as shift
WARNING: shift/reduce conflict for * in state 122 resolved as shift
WARNING: shift/reduce conflict for / in state 122 resolved as shift
WARNING: shift/reduce conflict for [ in state 122 resolved as shift
WARNING: shift/reduce conflict for . in state 122 resolved as shift
WARNING: shift/reduce conflict for = in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 123 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 123 resolved as shift
WARNING: shift/reduce conflict for > in state 123 resolved as shift
WARNING: shift/reduce conflict for < in state 123 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 123 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 123 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 123 resolved as shift
WARNING: shift/reduce conflict for + in state 123 resolved as shift
WARNING: shift/reduce conflict for - in state 123 resolved as shift
WARNING: shift/reduce conflict for * in state 123 resolved as shift
WARNING: shift/reduce conflict for / in state 123 resolved as shift
WARNING: shift/reduce conflict for [ in state 123 resolved as shift
WARNING: shift/reduce conflict for . in state 123 resolved as shift
WARNING: shift/reduce conflict for = in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 130 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 130 resolved as shift
WARNING: shift/reduce conflict for > in state 130 resolved as shift
WARNING: shift/reduce conflict for < in state 130 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 130 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 130 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 130 resolved as shift
WARNING: shift/reduce conflict for + in state 130 resolved as shift
WARNING: shift/reduce conflict for - in state 130 resolved as shift
WARNING: shift/reduce conflict for * in state 130 resolved as shift
WARNING: shift/reduce conflict for / in state 130 resolved as shift
WARNING: shift/reduce conflict for [ in state 130 resolved as shift
WARNING: shift/reduce conflict for . in state 130 resolved as shift
WARNING: shift/reduce conflict for = in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 131 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 131 resolved as shift
WARNING: shift/reduce conflict for > in state 131 resolved as shift
WARNING: shift/reduce conflict for < in state 131 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 131 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 131 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 131 resolved as shift
WARNING: shift/reduce conflict for + in state 131 resolved as shift
WARNING: shift/reduce conflict for - in state 131 resolved as shift
WARNING: shift/reduce conflict for * in state 131 resolved as shift
WARNING: shift/reduce conflict for / in state 131 resolved as shift
WARNING: shift/reduce conflict for [ in state 131 resolved as shift
WARNING: shift/reduce conflict for . in state 131 resolved as shift
WARNING: shift/reduce conflict for = in state 132 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 132 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 132 resolved as shift
WARNING: shift/reduce conflict for > in state 132 resolved as shift
WARNING: shift/reduce conflict for < in state 132 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 132 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 132 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 132 resolved as shift
WARNING: shift/reduce conflict for + in state 132 resolved as shift
WARNING: shift/reduce conflict for - in state 132 resolved as shift
WARNING: shift/reduce conflict for * in state 132 resolved as shift
WARNING: shift/reduce conflict for / in state 132 resolved as shift
WARNING: shift/reduce conflict for [ in state 132 resolved as shift
WARNING: shift/reduce conflict for . in state 132 resolved as shift
WARNING: shift/reduce conflict for = in state 133 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 133 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 133 resolved as shift
WARNING: shift/reduce conflict for > in state 133 resolved as shift
WARNING: shift/reduce conflict for < in state 133 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 133 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 133 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 133 resolved as shift
WARNING: shift/reduce conflict for + in state 133 resolved as shift
WARNING: shift/reduce conflict for - in state 133 resolved as shift
WARNING: shift/reduce conflict for * in state 133 resolved as shift
WARNING: shift/reduce conflict for / in state 133 resolved as shift
WARNING: shift/reduce conflict for [ in state 133 resolved as shift
WARNING: shift/reduce conflict for . in state 133 resolved as shift
WARNING: shift/reduce conflict for = in state 134 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 134 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 134 resolved as shift
WARNING: shift/reduce conflict for > in state 134 resolved as shift
WARNING: shift/reduce conflict for < in state 134 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 134 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 134 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 134 resolved as shift
WARNING: shift/reduce conflict for + in state 134 resolved as shift
WARNING: shift/reduce conflict for - in state 134 resolved as shift
WARNING: shift/reduce conflict for * in state 134 resolved as shift
WARNING: shift/reduce conflict for / in state 134 resolved as shift
WARNING: shift/reduce conflict for [ in state 134 resolved as shift
WARNING: shift/reduce conflict for . in state 134 resolved as shift
WARNING: shift/reduce conflict for = in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 135 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 135 resolved as shift
WARNING: shift/reduce conflict for > in state 135 resolved as shift
WARNING: shift/reduce conflict for < in state 135 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 135 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 135 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 135 resolved as shift
WARNING: shift/reduce conflict for + in state 135 resolved as shift
WARNING: shift/reduce conflict for - in state 135 resolved as shift
WARNING: shift/reduce conflict for * in state 135 resolved as shift
WARNING: shift/reduce conflict for / in state 135 resolved as shift
WARNING: shift/reduce conflict for [ in state 135 resolved as shift
WARNING: shift/reduce conflict for . in state 135 resolved as shift
WARNING: shift/reduce conflict for = in state 136 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 136 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 136 resolved as shift
WARNING: shift/reduce conflict for > in state 136 resolved as shift
WARNING: shift/reduce conflict for < in state 136 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 136 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 136 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 136 resolved as shift
WARNING: shift/reduce conflict for + in state 136 resolved as shift
WARNING: shift/reduce conflict for - in state 136 resolved as shift
WARNING: shift/reduce conflict for * in state 136 resolved as shift
WARNING: shift/reduce conflict for / in state 136 resolved as shift
WARNING: shift/reduce conflict for [ in state 136 resolved as shift
WARNING: shift/reduce conflict for . in state 136 resolved as shift
WARNING: shift/reduce conflict for = in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 137 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 137 resolved as shift
WARNING: shift/reduce conflict for > in state 137 resolved as shift
WARNING: shift/reduce conflict for < in state 137 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 137 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 137 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 137 resolved as shift
WARNING: shift/reduce conflict for + in state 137 resolved as shift
WARNING: shift/reduce conflict for - in state 137 resolved as shift
WARNING: shift/reduce conflict for * in state 137 resolved as shift
WARNING: shift/reduce conflict for / in state 137 resolved as shift
WARNING: shift/reduce conflict for [ in state 137 resolved as shift
WARNING: shift/reduce conflict for . in state 137 resolved as shift
WARNING: shift/reduce conflict for = in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLAND in state 150 resolved as shift
WARNING: shift/reduce conflict for BOOLOR in state 150 resolved as shift
WARNING: shift/reduce conflict for > in state 150 resolved as shift
WARNING: shift/reduce conflict for < in state 150 resolved as shift
WARNING: shift/reduce conflict for GRTREQL in state 150 resolved as shift
WARNING: shift/reduce conflict for LESSEQL in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for NEQUAL in state 150 resolved as shift
WARNING: shift/reduce conflict for + in state 150 resolved as shift
WARNING: shift/reduce conflict for - in state 150 resolved as shift
WARNING: shift/reduce conflict for * in state 150 resolved as shift
WARNING: shift/reduce conflict for / in state 150 resolved as shift
WARNING: shift/reduce conflict for [ in state 150 resolved as shift
WARNING: shift/reduce conflict for . in state 150 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 156 resolved as shift
