
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "Programleft+-left*/rightUPLUSUMINUSANDASSIGN AUTO BOOLAND BOOLOR BREAK CASE CHAR CONST CONTINUE DECIMAL DEFAULT DIVIDEASSIGN DO DOUBLE ELSE ENUM EQUAL EXTERN FLOAT FOR GOTO GRTREQL ID IF INT LESSEQL LONG LSHIFT LSHIFTASSIGN MODASSIGN MULASSIGN NEQUAL NUMBER ORASSIGN PLUSASSIGN PLUSSLF PRINT REGISTER RETURN RSHIFT RSHIFTASSIGN SHORT SIGNED SIZEOF STATIC STRINGLITERAL STRUCT SUBASSIGN SUBSLF SWITCH TYPEDEF UNION UNSIGNED VOID VOLATILE WHILE XORASSIGNEMPTY : RELOP : '>'\n    | '<'\n    | GRTREQL\n    | LESSEQL\n    | EQUAL\n    | NEQUAL TYPE : INT\n\t| FLOAT Program : ExtDefList ExtDefList : ExtDef ExtDefList\n\t| EMPTYFunHead : Specifier FunDecExtDecHead : Specifier VarDecExtDecHead : Specifier FunDecExtDecList : ExtDecList ',' VarDec\n        | ExtDecHeadExtDecList : ExtDecList ',' FunDecExtDef : ExtDecList ';' ExtDef : Specifier ';' ExtDef : FunHead CompSt Specifier : TYPE\n\t| StructSpecifier StructSpecifier : STRUCT OptTag '{' DefList '}'\n\t| STRUCT Tag OptTag : ID\n\t| EMPTYTag : IDVarDec : ID\n\t| VarDec '[' NUMBER ']' FunDec : ID '(' VarList ')'\n\t| ID '(' ')' VarList : ParamDec ',' VarList\n\t| ParamDec ParamDec : Specifier VarDec CompSt : '{' DefList StmtList '}' StmtList : Stmt StmtList\n\t| EMPTYStmt : RETURN Exp ';' Stmt : PRINT '(' Exp ')' ';' FlowCtrl : IF '(' Exp ')' Stmt\n\t| IF '(' Exp ')' Stmt ELSE Stmt\n\t| WHILE '(' Exp ')' StmtStmt : Exp ';'\n\t| CompSt\n\t| ';'\n\t| FlowCtrlDefList : Def ';' DefList\n\t| EMPTYDef : DecListDecHead : Specifier DecDecList : DecHead\n     | DecList ',' DecDec : VarDec\n\t| VarDec '=' ExpPrefixedExp : '*' Exp\n    | '&' ExpPrefixedExp : '-' Exp %prec UMINUS\n    \t| '+' Exp %prec UPLUS\n    \t| PLUSSLF Exp\n    \t| SUBSLF Exp\n    \t| '(' TYPE ')' ExpExp : '(' Exp ')' Exp : IDExp : NUMBERExp : DECIMAL\n\t| STRINGLITERALExp : Exp '=' Exp\n\t| Exp '+' Exp\n\t| Exp '-' Exp\n\t| Exp '*' Exp\n\t| Exp '/' Exp\n\t| FuncCall\n\t| PrefixedExpExp : Exp BOOLAND Exp\n    \t| Exp BOOLOR Exp\n    \t| '!' ExpExp : Exp RELOP ExpExp : Exp '[' Exp ']'\n\t| Exp '.' IDFuncCall : ID '(' Args ')'\n\t| ID '(' ')' Args : Exp ',' Args\n\t| Exp"
    
_lr_action_items = {'$end':([0,1,2,3,4,14,15,17,21,79,],[-1,0,-10,-1,-12,-11,-19,-20,-21,-36,]),'INT':([0,3,15,17,21,22,31,38,51,69,77,79,],[11,11,-19,-20,-21,11,11,11,11,11,11,-36,]),'FLOAT':([0,3,15,17,21,22,31,38,51,69,77,79,],[12,12,-19,-20,-21,12,12,12,12,12,12,-36,]),'STRUCT':([0,3,15,17,21,22,31,38,69,77,79,],[13,13,-19,-20,-21,13,13,13,13,13,-36,]),';':([5,6,8,9,10,11,12,18,19,20,22,24,25,27,28,29,32,33,34,35,36,41,45,48,49,52,53,54,55,56,57,61,62,69,71,72,73,75,76,79,81,82,103,104,105,106,109,110,111,112,113,115,117,118,119,120,121,122,123,124,125,127,129,132,136,137,138,139,140,142,143,144,146,147,148,149,],[15,17,-17,-22,-23,-8,-9,-15,-14,-29,-1,-25,-28,-16,-18,-29,49,69,-49,-50,-52,-32,49,82,-46,-45,-47,-64,-65,-66,-67,-73,-74,-1,-51,-54,-29,-30,-31,-36,117,-44,-59,-58,-56,-77,-57,-60,-61,-48,-53,-24,-39,-68,-69,-70,-71,-72,-75,-76,-78,-80,-63,-82,-55,-79,144,-62,-81,49,49,-40,-41,-43,49,-42,]),',':([5,8,18,19,20,27,28,29,35,36,41,42,54,55,56,57,61,62,71,72,73,75,76,78,103,104,105,106,109,110,111,113,118,119,120,121,122,123,124,125,127,129,132,133,136,137,139,140,],[16,-17,-15,-14,-29,-16,-18,-29,70,-52,-32,77,-64,-65,-66,-67,-73,-74,-51,-54,-29,-30,-31,-35,-59,-58,-56,-77,-57,-60,-61,-53,-68,-69,-70,-71,-72,-75,-76,-78,-80,-63,-82,141,-55,-79,-62,-81,]),'ID':([6,9,10,11,12,13,16,22,24,25,32,34,37,43,45,47,49,51,52,53,58,59,60,63,66,67,68,69,70,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,107,108,112,114,115,117,130,141,142,143,144,146,147,148,149,],[20,-22,-23,-8,-9,25,29,-1,-25,-28,54,-49,73,73,54,54,-46,54,-45,-47,54,54,54,54,54,54,54,-1,73,-36,-44,54,54,54,54,54,54,54,54,54,127,-2,-3,-4,-5,-6,-7,54,54,54,54,-48,54,-24,-39,54,54,54,54,-40,-41,-43,54,-42,]),'{':([7,13,18,22,23,25,26,32,34,41,45,49,52,53,69,76,79,82,112,117,142,143,144,146,147,148,149,],[22,-1,-13,-1,38,-26,-27,22,-49,-32,22,-46,-45,-47,-1,-31,-36,-44,-48,-39,22,22,-40,-41,-43,22,-42,]),')':([11,12,31,40,42,54,55,56,57,61,62,73,75,78,100,101,102,103,104,105,106,109,110,111,116,118,119,120,121,122,123,124,125,127,128,129,131,132,133,134,135,137,139,140,145,],[-8,-9,41,76,-34,-64,-65,-66,-67,-73,-74,-29,-30,-35,129,130,132,-59,-58,-56,-77,-57,-60,-61,-33,-68,-69,-70,-71,-72,-75,-76,-78,-80,138,-63,140,-82,-84,142,143,-79,-62,-81,-83,]),'[':([19,20,27,29,48,54,55,56,57,61,62,72,73,75,78,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[30,-29,30,-29,91,-64,-65,-66,-67,-73,-74,30,-29,-30,30,91,91,-59,-58,-56,91,91,91,91,91,-69,-70,-71,-72,91,91,91,91,-80,91,-63,-82,91,91,91,91,-79,91,-81,]),'(':([20,22,29,32,34,45,47,49,50,51,52,53,54,58,59,60,63,64,65,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[31,-1,31,51,-49,51,51,-46,99,51,-45,-47,102,51,51,51,51,107,108,51,51,51,-1,-36,-44,51,51,51,51,51,51,51,51,51,-2,-3,-4,-5,-6,-7,51,51,51,51,-48,51,-39,51,51,51,51,-40,-41,-43,51,-42,]),'RETURN':([22,32,34,45,49,52,53,69,79,82,112,117,142,143,144,146,147,148,149,],[-1,47,-49,47,-46,-45,-47,-1,-36,-44,-48,-39,47,47,-40,-41,-43,47,-42,]),'PRINT':([22,32,34,45,49,52,53,69,79,82,112,117,142,143,144,146,147,148,149,],[-1,50,-49,50,-46,-45,-47,-1,-36,-44,-48,-39,50,50,-40,-41,-43,50,-42,]),'NUMBER':([22,30,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,39,55,-49,55,55,-46,55,-45,-47,55,55,55,55,55,55,55,-1,-36,-44,55,55,55,55,55,55,55,55,55,-2,-3,-4,-5,-6,-7,55,55,55,55,-48,55,-39,55,55,55,55,-40,-41,-43,55,-42,]),'DECIMAL':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,56,-49,56,56,-46,56,-45,-47,56,56,56,56,56,56,56,-1,-36,-44,56,56,56,56,56,56,56,56,56,-2,-3,-4,-5,-6,-7,56,56,56,56,-48,56,-39,56,56,56,56,-40,-41,-43,56,-42,]),'STRINGLITERAL':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,57,-49,57,57,-46,57,-45,-47,57,57,57,57,57,57,57,-1,-36,-44,57,57,57,57,57,57,57,57,57,-2,-3,-4,-5,-6,-7,57,57,57,57,-48,57,-39,57,57,57,57,-40,-41,-43,57,-42,]),'!':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,63,-49,63,63,-46,63,-45,-47,63,63,63,63,63,63,63,-1,-36,-44,63,63,63,63,63,63,63,63,63,-2,-3,-4,-5,-6,-7,63,63,63,63,-48,63,-39,63,63,63,63,-40,-41,-43,63,-42,]),'IF':([22,32,34,45,49,52,53,69,79,82,112,117,142,143,144,146,147,148,149,],[-1,64,-49,64,-46,-45,-47,-1,-36,-44,-48,-39,64,64,-40,-41,-43,64,-42,]),'WHILE':([22,32,34,45,49,52,53,69,79,82,112,117,142,143,144,146,147,148,149,],[-1,65,-49,65,-46,-45,-47,-1,-36,-44,-48,-39,65,65,-40,-41,-43,65,-42,]),'*':([22,32,34,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,140,141,142,143,144,146,147,148,149,],[-1,60,-49,60,60,86,-46,60,-45,-47,-64,-65,-66,-67,60,60,60,-73,-74,60,60,60,60,-1,-36,86,-44,60,60,60,60,60,60,60,60,60,-2,-3,-4,-5,-6,-7,60,86,60,-59,-58,-56,86,60,60,86,86,86,-48,60,-39,86,86,86,-71,-72,86,86,86,86,-80,86,-63,60,-82,86,86,86,86,-79,86,-81,60,60,60,-40,-41,-43,60,-42,]),'&':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,66,-49,66,66,-46,66,-45,-47,66,66,66,66,66,66,66,-1,-36,-44,66,66,66,66,66,66,66,66,66,-2,-3,-4,-5,-6,-7,66,66,66,66,-48,66,-39,66,66,66,66,-40,-41,-43,66,-42,]),'-':([22,32,34,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,140,141,142,143,144,146,147,148,149,],[-1,59,-49,59,59,85,-46,59,-45,-47,-64,-65,-66,-67,59,59,59,-73,-74,59,59,59,59,-1,-36,85,-44,59,59,59,59,59,59,59,59,59,-2,-3,-4,-5,-6,-7,59,85,59,-59,-58,-56,85,59,59,85,85,85,-48,59,-39,85,-69,-70,-71,-72,85,85,85,85,-80,85,-63,59,-82,85,85,85,85,-79,85,-81,59,59,59,-40,-41,-43,59,-42,]),'+':([22,32,34,45,47,48,49,51,52,53,54,55,56,57,58,59,60,61,62,63,66,67,68,69,79,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,120,121,122,123,124,125,126,127,128,129,130,132,133,134,135,136,137,139,140,141,142,143,144,146,147,148,149,],[-1,58,-49,58,58,84,-46,58,-45,-47,-64,-65,-66,-67,58,58,58,-73,-74,58,58,58,58,-1,-36,84,-44,58,58,58,58,58,58,58,58,58,-2,-3,-4,-5,-6,-7,58,84,58,-59,-58,-56,84,58,58,84,84,84,-48,58,-39,84,-69,-70,-71,-72,84,84,84,84,-80,84,-63,58,-82,84,84,84,84,-79,84,-81,58,58,58,-40,-41,-43,58,-42,]),'PLUSSLF':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,67,-49,67,67,-46,67,-45,-47,67,67,67,67,67,67,67,-1,-36,-44,67,67,67,67,67,67,67,67,67,-2,-3,-4,-5,-6,-7,67,67,67,67,-48,67,-39,67,67,67,67,-40,-41,-43,67,-42,]),'SUBSLF':([22,32,34,45,47,49,51,52,53,58,59,60,63,66,67,68,69,79,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,102,107,108,112,114,117,130,141,142,143,144,146,147,148,149,],[-1,68,-49,68,68,-46,68,-45,-47,68,68,68,68,68,68,68,-1,-36,-44,68,68,68,68,68,68,68,68,68,-2,-3,-4,-5,-6,-7,68,68,68,68,-48,68,-39,68,68,68,68,-40,-41,-43,68,-42,]),'}':([22,32,34,38,44,45,46,49,52,53,69,74,79,80,82,112,117,144,146,147,149,],[-1,-1,-49,-1,79,-1,-38,-46,-45,-47,-1,115,-36,-37,-44,-48,-39,-40,-41,-43,-42,]),']':([39,54,55,56,57,61,62,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,129,132,137,139,140,],[75,-64,-65,-66,-67,-73,-74,-59,-58,-56,-77,-57,-60,-61,-68,-69,-70,-71,-72,-75,-76,-78,137,-80,-63,-82,-79,-62,-81,]),'=':([48,54,55,56,57,61,62,72,73,75,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[83,-64,-65,-66,-67,-73,-74,114,-29,-30,83,83,-59,-58,-56,83,83,83,83,83,-69,-70,-71,-72,83,83,83,83,-80,83,-63,-82,83,83,83,83,-79,83,-81,]),'/':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[87,-64,-65,-66,-67,-73,-74,87,87,-59,-58,-56,87,87,87,87,87,87,87,-71,-72,87,87,87,87,-80,87,-63,-82,87,87,87,87,-79,87,-81,]),'BOOLAND':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[88,-64,-65,-66,-67,-73,-74,88,88,-59,-58,-56,88,88,88,88,88,-69,-70,-71,-72,88,88,88,88,-80,88,-63,-82,88,88,88,88,-79,88,-81,]),'BOOLOR':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[89,-64,-65,-66,-67,-73,-74,89,89,-59,-58,-56,89,89,89,89,89,-69,-70,-71,-72,89,89,89,89,-80,89,-63,-82,89,89,89,89,-79,89,-81,]),'.':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[92,-64,-65,-66,-67,-73,-74,92,92,-59,-58,-56,92,92,92,92,92,-69,-70,-71,-72,92,92,92,92,-80,92,-63,-82,92,92,92,92,-79,92,-81,]),'>':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[93,-64,-65,-66,-67,-73,-74,93,93,-59,-58,-56,93,93,93,93,93,-69,-70,-71,-72,93,93,93,93,-80,93,-63,-82,93,93,93,93,-79,93,-81,]),'<':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[94,-64,-65,-66,-67,-73,-74,94,94,-59,-58,-56,94,94,94,94,94,-69,-70,-71,-72,94,94,94,94,-80,94,-63,-82,94,94,94,94,-79,94,-81,]),'GRTREQL':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[95,-64,-65,-66,-67,-73,-74,95,95,-59,-58,-56,95,95,95,95,95,-69,-70,-71,-72,95,95,95,95,-80,95,-63,-82,95,95,95,95,-79,95,-81,]),'LESSEQL':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[96,-64,-65,-66,-67,-73,-74,96,96,-59,-58,-56,96,96,96,96,96,-69,-70,-71,-72,96,96,96,96,-80,96,-63,-82,96,96,96,96,-79,96,-81,]),'EQUAL':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[97,-64,-65,-66,-67,-73,-74,97,97,-59,-58,-56,97,97,97,97,97,-69,-70,-71,-72,97,97,97,97,-80,97,-63,-82,97,97,97,97,-79,97,-81,]),'NEQUAL':([48,54,55,56,57,61,62,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,127,128,129,132,133,134,135,136,137,139,140,],[98,-64,-65,-66,-67,-73,-74,98,98,-59,-58,-56,98,98,98,98,98,-69,-70,-71,-72,98,98,98,98,-80,98,-63,-82,98,98,98,98,-79,98,-81,]),'ELSE':([49,52,53,79,82,117,144,146,147,149,],[-46,-45,-47,-36,-44,-39,-40,148,-43,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'ExtDefList':([0,3,],[2,14,]),'ExtDef':([0,3,],[3,3,]),'EMPTY':([0,3,13,22,32,38,45,69,],[4,4,26,34,46,34,46,34,]),'ExtDecList':([0,3,],[5,5,]),'Specifier':([0,3,22,31,38,69,77,],[6,6,37,43,37,37,43,]),'FunHead':([0,3,],[7,7,]),'ExtDecHead':([0,3,],[8,8,]),'TYPE':([0,3,22,31,38,51,69,77,],[9,9,9,9,9,101,9,9,]),'StructSpecifier':([0,3,22,31,38,69,77,],[10,10,10,10,10,10,10,]),'FunDec':([6,16,],[18,28,]),'VarDec':([6,16,37,43,70,],[19,27,72,78,72,]),'CompSt':([7,32,45,142,143,148,],[21,52,52,52,52,52,]),'OptTag':([13,],[23,]),'Tag':([13,],[24,]),'DefList':([22,38,69,],[32,74,112,]),'Def':([22,38,69,],[33,33,33,]),'DecList':([22,38,69,],[35,35,35,]),'DecHead':([22,38,69,],[36,36,36,]),'VarList':([31,77,],[40,116,]),'ParamDec':([31,77,],[42,42,]),'StmtList':([32,45,],[44,80,]),'Stmt':([32,45,142,143,148,],[45,45,146,147,149,]),'Exp':([32,45,47,51,58,59,60,63,66,67,68,83,84,85,86,87,88,89,90,91,99,102,107,108,114,130,141,142,143,148,],[48,48,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,128,133,134,135,136,139,133,48,48,48,]),'FlowCtrl':([32,45,142,143,148,],[53,53,53,53,53,]),'FuncCall':([32,45,47,51,58,59,60,63,66,67,68,83,84,85,86,87,88,89,90,91,99,102,107,108,114,130,141,142,143,148,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'PrefixedExp':([32,45,47,51,58,59,60,63,66,67,68,83,84,85,86,87,88,89,90,91,99,102,107,108,114,130,141,142,143,148,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'Dec':([37,70,],[71,113,]),'RELOP':([48,81,100,103,104,105,106,109,110,111,118,119,120,121,122,123,124,125,126,128,133,134,135,136,139,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'Args':([102,141,],[131,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('EMPTY -> <empty>','EMPTY',0,'p_empty','yacc.py',16),
  ('RELOP -> >','RELOP',1,'p_relop','yacc.py',20),
  ('RELOP -> <','RELOP',1,'p_relop','yacc.py',21),
  ('RELOP -> GRTREQL','RELOP',1,'p_relop','yacc.py',22),
  ('RELOP -> LESSEQL','RELOP',1,'p_relop','yacc.py',23),
  ('RELOP -> EQUAL','RELOP',1,'p_relop','yacc.py',24),
  ('RELOP -> NEQUAL','RELOP',1,'p_relop','yacc.py',25),
  ('TYPE -> INT','TYPE',1,'p_type','yacc.py',29),
  ('TYPE -> FLOAT','TYPE',1,'p_type','yacc.py',30),
  ('Program -> ExtDefList','Program',1,'p_Program','yacc.py',34),
  ('ExtDefList -> ExtDef ExtDefList','ExtDefList',2,'p_ExtDefList','yacc.py',40),
  ('ExtDefList -> EMPTY','ExtDefList',1,'p_ExtDefList','yacc.py',41),
  ('FunHead -> Specifier FunDec','FunHead',2,'p_FunHead','yacc.py',49),
  ('ExtDecHead -> Specifier VarDec','ExtDecHead',2,'p_ExtDecHead','yacc.py',54),
  ('ExtDecHead -> Specifier FunDec','ExtDecHead',2,'p_ExtDecHead_Fun','yacc.py',59),
  ('ExtDecList -> ExtDecList , VarDec','ExtDecList',3,'p_ExtDecList','yacc.py',64),
  ('ExtDecList -> ExtDecHead','ExtDecList',1,'p_ExtDecList','yacc.py',65),
  ('ExtDecList -> ExtDecList , FunDec','ExtDecList',3,'p_ExtDecList_Fun','yacc.py',73),
  ('ExtDef -> ExtDecList ;','ExtDef',2,'p_ExtDef_ExtDecList','yacc.py',78),
  ('ExtDef -> Specifier ;','ExtDef',2,'p_ExtDef_Specifier','yacc.py',83),
  ('ExtDef -> FunHead CompSt','ExtDef',2,'p_ExtDef_FunDef','yacc.py',88),
  ('Specifier -> TYPE','Specifier',1,'p_Specifier','yacc.py',93),
  ('Specifier -> StructSpecifier','Specifier',1,'p_Specifier','yacc.py',94),
  ('StructSpecifier -> STRUCT OptTag { DefList }','StructSpecifier',5,'p_StructSpecifier','yacc.py',99),
  ('StructSpecifier -> STRUCT Tag','StructSpecifier',2,'p_StructSpecifier','yacc.py',100),
  ('OptTag -> ID','OptTag',1,'p_OptTag','yacc.py',108),
  ('OptTag -> EMPTY','OptTag',1,'p_OptTag','yacc.py',109),
  ('Tag -> ID','Tag',1,'p_Tag','yacc.py',114),
  ('VarDec -> ID','VarDec',1,'p_VarDec','yacc.py',119),
  ('VarDec -> VarDec [ NUMBER ]','VarDec',4,'p_VarDec','yacc.py',120),
  ('FunDec -> ID ( VarList )','FunDec',4,'p_FunDec','yacc.py',128),
  ('FunDec -> ID ( )','FunDec',3,'p_FunDec','yacc.py',129),
  ('VarList -> ParamDec , VarList','VarList',3,'p_VarList','yacc.py',137),
  ('VarList -> ParamDec','VarList',1,'p_VarList','yacc.py',138),
  ('ParamDec -> Specifier VarDec','ParamDec',2,'p_ParamDec','yacc.py',146),
  ('CompSt -> { DefList StmtList }','CompSt',4,'p_CompSt','yacc.py',151),
  ('StmtList -> Stmt StmtList','StmtList',2,'p_StmtList','yacc.py',156),
  ('StmtList -> EMPTY','StmtList',1,'p_StmtList','yacc.py',157),
  ('Stmt -> RETURN Exp ;','Stmt',3,'p_Stmt_return','yacc.py',165),
  ('Stmt -> PRINT ( Exp ) ;','Stmt',5,'p_Stmt_print','yacc.py',169),
  ('FlowCtrl -> IF ( Exp ) Stmt','FlowCtrl',5,'p_FlowCtrl','yacc.py',173),
  ('FlowCtrl -> IF ( Exp ) Stmt ELSE Stmt','FlowCtrl',7,'p_FlowCtrl','yacc.py',174),
  ('FlowCtrl -> WHILE ( Exp ) Stmt','FlowCtrl',5,'p_FlowCtrl','yacc.py',175),
  ('Stmt -> Exp ;','Stmt',2,'p_Stmt','yacc.py',186),
  ('Stmt -> CompSt','Stmt',1,'p_Stmt','yacc.py',187),
  ('Stmt -> ;','Stmt',1,'p_Stmt','yacc.py',188),
  ('Stmt -> FlowCtrl','Stmt',1,'p_Stmt','yacc.py',189),
  ('DefList -> Def ; DefList','DefList',3,'p_DefList','yacc.py',193),
  ('DefList -> EMPTY','DefList',1,'p_DefList','yacc.py',194),
  ('Def -> DecList','Def',1,'p_Def','yacc.py',202),
  ('DecHead -> Specifier Dec','DecHead',2,'p_DecHead','yacc.py',207),
  ('DecList -> DecHead','DecList',1,'p_DecList','yacc.py',212),
  ('DecList -> DecList , Dec','DecList',3,'p_DecList','yacc.py',213),
  ('Dec -> VarDec','Dec',1,'p_Dec','yacc.py',221),
  ('Dec -> VarDec = Exp','Dec',3,'p_Dec','yacc.py',222),
  ('PrefixedExp -> * Exp','PrefixedExp',2,'p_PrefixedExp_Mem','yacc.py',230),
  ('PrefixedExp -> & Exp','PrefixedExp',2,'p_PrefixedExp_Mem','yacc.py',231),
  ('PrefixedExp -> - Exp','PrefixedExp',2,'p_PrefixedExp','yacc.py',235),
  ('PrefixedExp -> + Exp','PrefixedExp',2,'p_PrefixedExp','yacc.py',236),
  ('PrefixedExp -> PLUSSLF Exp','PrefixedExp',2,'p_PrefixedExp','yacc.py',237),
  ('PrefixedExp -> SUBSLF Exp','PrefixedExp',2,'p_PrefixedExp','yacc.py',238),
  ('PrefixedExp -> ( TYPE ) Exp','PrefixedExp',4,'p_PrefixedExp','yacc.py',239),
  ('Exp -> ( Exp )','Exp',3,'p_Exp_par','yacc.py',247),
  ('Exp -> ID','Exp',1,'p_Exp_Id','yacc.py',252),
  ('Exp -> NUMBER','Exp',1,'p_Exp_Number','yacc.py',256),
  ('Exp -> DECIMAL','Exp',1,'p_Exp_Constant','yacc.py',261),
  ('Exp -> STRINGLITERAL','Exp',1,'p_Exp_Constant','yacc.py',262),
  ('Exp -> Exp = Exp','Exp',3,'p_Exp','yacc.py',268),
  ('Exp -> Exp + Exp','Exp',3,'p_Exp','yacc.py',269),
  ('Exp -> Exp - Exp','Exp',3,'p_Exp','yacc.py',270),
  ('Exp -> Exp * Exp','Exp',3,'p_Exp','yacc.py',271),
  ('Exp -> Exp / Exp','Exp',3,'p_Exp','yacc.py',272),
  ('Exp -> FuncCall','Exp',1,'p_Exp','yacc.py',273),
  ('Exp -> PrefixedExp','Exp',1,'p_Exp','yacc.py',274),
  ('Exp -> Exp BOOLAND Exp','Exp',3,'p_Exp_Logic','yacc.py',281),
  ('Exp -> Exp BOOLOR Exp','Exp',3,'p_Exp_Logic','yacc.py',282),
  ('Exp -> ! Exp','Exp',2,'p_Exp_Logic','yacc.py',283),
  ('Exp -> Exp RELOP Exp','Exp',3,'p_Exp_Relop','yacc.py',290),
  ('Exp -> Exp [ Exp ]','Exp',4,'p_Exp_Mem','yacc.py',295),
  ('Exp -> Exp . ID','Exp',3,'p_Exp_Mem','yacc.py',296),
  ('FuncCall -> ID ( Args )','FuncCall',4,'p_FuncCall','yacc.py',304),
  ('FuncCall -> ID ( )','FuncCall',3,'p_FuncCall','yacc.py',305),
  ('Args -> Exp , Args','Args',3,'p_Args','yacc.py',313),
  ('Args -> Exp','Args',1,'p_Args','yacc.py',314),
]
